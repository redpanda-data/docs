{
    "definitions": {
        "client_group_quota": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/client_group_byte_rate_quota.h#L29",
            "properties": {
                "clients_prefix": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "quota": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::broker_authn_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/broker_authn_endpoint.h#L42",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::endpoint_tls_config": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/endpoint_tls_config.h#L21",
            "properties": {
                "config": {
                    "$ref": "#/defintions/config::tls_config"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "config::rest_authn_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/rest_authn_endpoint.h#L42",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authentication_method": {
                    "$ref": "#/definitions/config::rest_authn_method"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::rest_authn_method": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/rest_authn_endpoint.h#L31",
            "enum": [
                "none",
                "http_basic"
            ]
        },
        "config::tls_config": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/tls_config.h#L49",
            "properties": {
                "cert_file": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "key_file": {
                    "type": "string"
                },
                "require_client_auth": {
                    "type": "boolean"
                },
                "truststore_file": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "endpoint_tls_config": {
            "$ref": "#/definitions/config::endpoint_tls_config"
        },
        "model::broker_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L88",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "model::cleanup_policy_bitflags": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/fundamental.h#L72",
            "enum": [
                "none",
                "delete",
                "compact"
            ]
        },
        "model::cloud_credentials_source": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L454",
            "enum": [
                "config_file",
                "aws_instance_metadata",
                "sts",
                "gcp_instance_metadata"
            ]
        },
        "model::cloud_storage_backend": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L481",
            "enum": [
                "aws",
                "google_s3_compat",
                "azure",
                "minio",
                "unknown"
            ]
        },
        "model::cloud_storage_chunk_eviction_strategy": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L524",
            "enum": [
                "eager",
                "capped",
                "predictive"
            ]
        },
        "model::compression": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/compression.h#L36",
            "enum": [
                "none",
                "gzip",
                "snappy",
                "lz4",
                "zstd",
                "producer"
            ]
        },
        "model::leader_balancer_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L504",
            "enum": [
                "greedy_balanced_shards",
                "random_hill_climbing"
            ]
        },
        "model::node_id": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L36",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
        },
        "model::partition_autobalancing_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L463",
            "enum": [
                "off",
                "node_add",
                "continuous"
            ]
        },
        "model::rack_id": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L60",
            "type": "string"
        },
        "model::timestamp_type": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/timestamp.h#L30",
            "enum": [
                "create_time",
                "append_time"
            ]
        },
        "net::unresolved_address": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/net/unresolved_address.h#L27",
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "pandaproxy::schema_registry::schema_id_validation_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/pandaproxy/schema_registry/schema_id_validation.h#L22",
            "enum": [
                "none",
                "redpanda",
                "compat"
            ]
        },
        "retention_duration_property": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/property.h#L878",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
        },
        "seed_server": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/seed_server.h#L24",
            "properties": {
                "host": {
                    "$ref": "#/definitions/net::unresolved_address"
                }
            },
            "type": "object"
        },
        "throughput_control_group": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/throughput_control_group.h#L36",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "tls_config": {
            "$ref": "#/defintions/config::tls_config"
        }
    },
    "properties": {
        "abort_index_segment_size": {
            "default": 50000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Capacity (in number of txns) of an abort index segment. Each partition tracks the aborted transaction offset ranges to help service client requests.If the number transactions increase beyond this threshold, they are flushed to disk to easy memory pressure.Then they're loaded on demand. This configuration controls the maximum number of aborted transactions  before they are flushed to disk.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "abort_index_segment_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "abort_timed_out_transactions_interval_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval, in milliseconds, at which Redpanda looks for inactive transactions and aborts them.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "abort_timed_out_transactions_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "admin": {
            "default": "{model::broker_endpoint(net::unresolved_address(\"127.0.0.1\", 9644))}",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Network address for the Admin API[] server.",
            "name": "admin",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/model::broker_endpoint",
            "visibility": "user"
        },
        "admin_api_doc_dir": {
            "default": "/usr/share/redpanda/admin-api-doc",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Path to the API specifications for the Admin API.",
            "name": "admin_api_doc_dir",
            "needs_restart": true,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "admin_api_require_auth": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether Admin API clients must provide HTTP basic authentication headers.",
            "name": "admin_api_require_auth",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "admin_api_tls": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "Specifies the TLS configuration for the HTTP Admin API.",
            "name": "admin_api_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/endpoint_tls_config",
            "visibility": "user"
        },
        "advertised_pandaproxy_api": {
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Network address for the HTTP Proxy API server to publish to clients.",
            "name": "advertised_pandaproxy_api",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/model::broker_endpoint"
        },
        "aggregate_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable aggregation of metrics returned by the `/metrics` endpoint. Aggregation can simplify monitoring by providing summarized data instead of raw, per-instance metrics. Metric aggregation is performed by summing the values of samples by labels and is done when it makes sense by the shard and/or partition labels.",
            "name": "aggregate_metrics",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean"
        },
        "alive_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The amount of time since the last broker status heartbeat. After this time, a broker is considered offline and not alive.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "alive_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "alter_topic_cfg_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The duration, in milliseconds, that Redpanda waits for the replication of entries in the controller log when executing a request to alter topic configurations. This timeout ensures that configuration changes are replicated across the cluster before the alteration request is considered complete.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "alter_topic_cfg_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "api_doc_dir": {
            "default": "/usr/share/redpanda/proxy-api-doc",
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "API doc directory",
            "name": "api_doc_dir",
            "needs_restart": true,
            "nullable": false,
            "type": "string"
        },
        "append_chunk_size": {
            "default": 16384,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of direct write operations to disk in bytes. A larger chunk size can improve performance for write-heavy workloads, but increase latency for these writes as more data is collected before each write operation. A smaller chunk size can decrease write latency, but potentially increase the number of disk I/O operations.",
            "name": "append_chunk_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "audit_client_max_buffer_size": {
            "default": 16777216,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Defines the number of bytes allocated by the internal audit client for audit messages. When changing this, you must disable audit logging and then re-enable it for the change to take effect. Consider increasing this if your system generates a very large number of audit records in a short amount of time.",
            "name": "audit_client_max_buffer_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "audit_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables or disables audit logging. When you set this to true, Redpanda checks for an existing topic named `_redpanda.audit_log`. If none is found, Redpanda automatically creates one for you.",
            "name": "audit_enabled",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "audit_enabled_event_types": {
            "default": [
                "management",
                "authenticate",
                "admin"
            ],
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of strings in JSON style identifying the event types to include in the audit log. This may include any of the following: `management, produce, consume, describe, heartbeat, authenticate, schema_registry, admin`.",
            "items": {
                "type": "string"
            },
            "name": "audit_enabled_event_types",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "audit_excluded_principals": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of user principals to exclude from auditing.",
            "items": {
                "type": "string"
            },
            "name": "audit_excluded_principals",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "audit_excluded_topics": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of topics to exclude from auditing.",
            "items": {
                "type": "string"
            },
            "name": "audit_excluded_topics",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "audit_log_num_partitions": {
            "default": 12,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Defines the number of partitions used by a newly-created audit topic. This configuration applies only to the audit log topic and may be different from the cluster or other topic configurations. This cannot be altered for existing audit log topics.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "audit_log_num_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "audit_log_replication_factor": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Defines the replication factor for a newly-created audit log topic. This configuration applies only to the audit log topic and may be different from the cluster or other topic configurations. This cannot be altered for existing audit log topics. Setting this value is optional. If a value is not provided, Redpanda will use the value specified for `internal_topic_replication_factor`.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "audit_log_replication_factor",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "audit_queue_drain_interval_ms": {
            "default": "500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval, in milliseconds, at which Redpanda flushes the queued audit log messages to the audit log topic. Longer intervals may help prevent duplicate messages, especially in high throughput scenarios, but they also increase the risk of data loss during shutdowns where the queue is lost.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "audit_queue_drain_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "audit_queue_max_buffer_size_per_shard": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Defines the maximum amount of memory in bytes used by the audit buffer in each shard. Once this size is reached, requests to log additional audit messages will return a non-retryable error. Limiting the buffer size per shard helps prevent any single shard from consuming excessive memory due to audit log messages.",
            "name": "audit_queue_max_buffer_size_per_shard",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "auto_create_topics_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Allow automatic topic creation. To prevent excess topics, this property is not supported on Redpanda Cloud BYOC and Dedicated clusters. You should explicitly manage topic creation for these Redpanda Cloud clusters. If you produce to a topic that doesn't exist, the topic will be created with defaults if this property is enabled.",
            "name": "auto_create_topics_enabled",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "broker_tls": {
            "default": "config::tls_config()",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "TLS configuration for the Kafka API servers to which the HTTP Proxy client should connect.",
            "name": "broker_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::tls_config"
        },
        "brokers": {
            "default": "std::vector<net::unresolved_address>({{\"127.0.0.1\", 9092}})",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Network addresses of the Kafka API servers to which the HTTP Proxy client should connect.",
            "items": {
                "type": "#/definitions/net::unresolved_address"
            },
            "name": "brokers",
            "needs_restart": true,
            "nullable": false,
            "type": "array"
        },
        "client_cache_max_size": {
            "default": 10,
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "The maximum number of Kafka client connections that Redpanda can cache in the LRU (least recently used) cache. The LRU cache helps optimize resource utilization by keeping the most recently used clients in memory, facilitating quicker reconnections for frequent clients while limiting memory usage.",
            "name": "client_cache_max_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "client_identifier": {
            "default": "test_client",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Custom identifier to include in the Kafka request header for the HTTP Proxy client. This identifier can help debug or monitor client activities.",
            "name": "client_identifier",
            "needs_restart": true,
            "nullable": true,
            "type": "string"
        },
        "client_keep_alive": {
            "default": "5min",
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Time, in milliseconds, that an idle client connection may remain open to the HTTP Proxy API.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "client_keep_alive",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "cloud_storage_access_key": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS or GCP access key. This access key is part of the credentials that Redpanda requires to authenticate with object storage services for Tiered Storage. This access key is used with the <<cloud_storage_secret_key>> to form the complete credentials required for authentication. To authenticate using IAM roles, see cloud_storage_credentials_source.",
            "name": "cloud_storage_access_key",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_api_endpoint": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Optional API endpoint. - AWS: When blank, this is automatically generated using <<cloud_storage_region,region>> and <<cloud_storage_bucket,bucket>>. Otherwise, this uses the value assigned. - GCP: Uses `storage.googleapis.com`.",
            "name": "cloud_storage_api_endpoint",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_api_endpoint_port": {
            "default": 443,
            "defined_in": "src/v/config/configuration.cc",
            "description": "TLS port override.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_api_endpoint_port",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_attempt_cluster_restore_on_bootstrap": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "When set to `true`, Redpanda automatically retrieves cluster metadata from a specified object storage bucket at the cluster's first startup. This option is ideal for orchestrated deployments, such as Kubernetes. Ensure any previous cluster linked to the bucket is fully decommissioned to prevent conflicts between Tiered Storage subsystems.",
            "name": "cloud_storage_attempt_cluster_restore_on_bootstrap",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_azure_adls_endpoint": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Azure Data Lake Storage v2 endpoint override. Use when hierarchical namespaces are enabled on your storage account and you have set up a custom endpoint.",
            "name": "cloud_storage_azure_adls_endpoint",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_azure_adls_port": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Azure Data Lake Storage v2 port override. See also `cloud_storage_azure_adls_endpoint`. Use when Hierarchical Namespaces are enabled on your storage account and you have set up a custom endpoint.",
            "maximum": 65535,
            "minimum": 0,
            "name": "cloud_storage_azure_adls_port",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_azure_container": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The name of the Azure container to use with Tiered Storage. If `null`, the property is disabled. The container must belong to cloud_storage_azure_storage_account.",
            "name": "cloud_storage_azure_container",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_azure_hierarchical_namespace_enabled": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether or not an Azure hierarchical namespace is enabled on the `cloud_storage_azure_storage_account`. If this property is not set, \u00b4cloud_storage_azure_shared_key` must be set, and each node tries to determine at startup if a hierarchical namespace is enabled. Setting this property to `true` disables the check and treats a hierarchical namespace as active. Setting to `false` disables the check and treats a hierarchical namespace as not active.",
            "name": "cloud_storage_azure_hierarchical_namespace_enabled",
            "needs_restart": true,
            "nullable": true,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_azure_managed_identity_id": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The managed identity ID to use for access to the Azure storage account. To use Azure managed identities, you must set `cloud_storage_credentials_source` to `azure_vm_instance_metadata`.",
            "name": "cloud_storage_azure_managed_identity_id",
            "needs_restart": false,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_azure_shared_key": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The shared key to be used for Azure Shared Key authentication with the Azure storage account configured by `cloud_storage_azure_storage_account`.  If `null`, the property is disabled. Redpanda expects this key string to be Base64 encoded.",
            "is_secret": true,
            "name": "cloud_storage_azure_shared_key",
            "needs_restart": false,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_azure_storage_account": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The name of the Azure storage account to use with Tiered Storage. If `null`, the property is disabled.",
            "name": "cloud_storage_azure_storage_account",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_backend": {
            "default": "model::cloud_storage_backend::unknown",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Optional object storage backend variant used to select API capabilities. If not supplied, this will be inferred from other configuration properties. Accepted values: [`unknown`, `aws`, `google_s3_compat`, `azure`, `minio`]",
            "name": "cloud_storage_backend",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/model::cloud_storage_backend",
            "visibility": "user"
        },
        "cloud_storage_background_jobs_quota": {
            "default": 5000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The total number of requests the object storage background jobs can make during one background housekeeping run. This is a per-shard limit. Adjusting this limit can optimize object storage traffic and impact shard performance.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "cloud_storage_background_jobs_quota",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_bucket": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS or GCP bucket or container that should be used to store data.",
            "name": "cloud_storage_bucket",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_cache_check_interval_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum interval between Tiered Storage cache trims, measured in milliseconds. This setting dictates the cooldown period after a cache trim operation before another trim can occur. If a cache fetch operation requests a trim but the interval since the last trim has not yet passed, the trim will be postponed until this cooldown expires. Adjusting this interval helps manage the balance between cache size and retrieval performance.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_cache_check_interval",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cache_chunk_size": {
            "default": 16777216,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of chunks of segments downloaded into object storage cache. Reduces space usage by only downloading the necessary chunk from a segment.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "cloud_storage_cache_chunk_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cache_directory": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Directory for archival cache. Should be present when `cloud_storage_enabled` is present",
            "name": "cloud_storage_cache_directory",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_cache_max_objects": {
            "default": 100000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of objects that may be held in the Tiered Storage cache.  This applies simultaneously with `cloud_storage_cache_size`, and whichever limit is hit first will trigger trimming of the cache.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_cache_max_objects",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cache_num_buckets": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Divide the object storage cache across the specified number of buckets. This only works for objects with randomized prefixes. The names are not changed when the value is set to zero.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_cache_num_buckets",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cache_size": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of object storage cache. If both this property and cloud_storage_cache_size_percent are set, Redpanda uses the minimum of the two.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "cloud_storage_cache_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_cache_size_percent": {
            "default": 20.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of the cloud cache as a percentage of unreserved disk space disk_reservation_percent. The default value for this option is tuned for a shared disk configuration. Consider increasing the value if using a dedicated cache disk. The property <<cloud_storage_cache_size,`cloud_storage_cache_size`>> controls the same limit expressed as a fixed number of bytes. If both `cloud_storage_cache_size` and `cloud_storage_cache_size_percent` are set, Redpanda uses the minimum of the two.",
            "name": "cloud_storage_cache_size_percent",
            "needs_restart": false,
            "nullable": true,
            "type": "number",
            "visibility": "user"
        },
        "cloud_storage_cache_trim_carryover_bytes": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The cache performs a recursive directory inspection during the cache trim. The information obtained during the inspection can be carried over to the next trim operation. This parameter sets a limit on the memory occupied by objects that can be carried over from one trim to next, and allows cache to quickly unblock readers before starting the directory inspection (deprecated)",
            "is_deprecated": true,
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_cache_trim_carryover_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "cloud_storage_cache_trim_threshold_percent_objects": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Trim is triggered when the cache reaches this percent of the maximum object count. If this is unset, the default behavioris to start trim when the cache is about 100% full.",
            "name": "cloud_storage_cache_trim_threshold_percent_objects",
            "needs_restart": false,
            "nullable": true,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_cache_trim_threshold_percent_size": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Trim is triggered when the cache reaches this percent of the maximum cache size. If this is unset, the default behavioris to start trim when the cache is about 100% full.",
            "name": "cloud_storage_cache_trim_threshold_percent_size",
            "needs_restart": false,
            "nullable": true,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_cache_trim_walk_concurrency": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum number of concurrent tasks launched for directory walk during cache trimming. A higher number allows cache trimming to run faster but can cause latency spikes due to increased pressure on I/O subsystem and syscall threads.",
            "maximum": 65535,
            "minimum": 0,
            "name": "cloud_storage_cache_trim_walk_concurrency",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_chunk_eviction_strategy": {
            "default": "model::cloud_storage_chunk_eviction_strategy::eager",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Selects a strategy for evicting unused cache chunks.",
            "name": "cloud_storage_chunk_eviction_strategy",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::cloud_storage_chunk_eviction_strategy",
            "visibility": "tunable"
        },
        "cloud_storage_chunk_prefetch": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of chunks to prefetch ahead of every downloaded chunk",
            "maximum": 65535,
            "minimum": 0,
            "name": "cloud_storage_chunk_prefetch",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cluster_metadata_num_consumer_groups_per_upload": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of groups to upload in a single snapshot object during consumer offsets upload. Setting a lower value will mean a larger number of smaller snapshots are uploaded.",
            "name": "cloud_storage_cluster_metadata_num_consumer_groups_per_upload",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cluster_metadata_retries": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of attempts metadata operations may be retried.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_cluster_metadata_retries",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cluster_metadata_upload_interval_ms": {
            "default": "1h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval to wait between cluster metadata uploads.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_cluster_metadata_upload_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cluster_metadata_upload_timeout_ms": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for cluster metadata uploads.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_cluster_metadata_upload_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_credentials_host": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The hostname to connect to for retrieving role based credentials. Derived from cloud_storage_credentials_source if not set. Only required when using IAM role based access. To authenticate using access keys, see `cloud_storage_access_key`.",
            "name": "cloud_storage_credentials_host",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "tunable"
        },
        "cloud_storage_credentials_source": {
            "default": "model::cloud_credentials_source::config_file",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The source of credentials used to authenticate to object storage services. Required for cluster provider authentication with IAM roles. To authenticate using access keys, see cloud_storage_access_key`. Accepted values: `config_file`, `aws_instance_metadata`, `sts, gcp_instance_metadata`, `azure_vm_instance_metadata`, `azure_aks_oidc_federation` ",
            "name": "cloud_storage_credentials_source",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/model::cloud_credentials_source",
            "visibility": "user"
        },
        "cloud_storage_crl_file": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Path to certificate revocation list for `cloud_storage_trust_file`.",
            "name": "cloud_storage_crl_file",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_disable_archiver_manager": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Use legacy upload mode and do not start archiver_manager.",
            "name": "cloud_storage_disable_archiver_manager",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cloud_storage_disable_chunk_reads": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable chunk reads and switch back to legacy mode where full segments are downloaded.",
            "name": "cloud_storage_disable_chunk_reads",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_disable_metadata_consistency_checks": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable all metadata consistency checks. This will allow redpanda to replay logs with inconsistent tiered-storage metadata. Normally, this option should be disabled.",
            "name": "cloud_storage_disable_metadata_consistency_checks",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_disable_read_replica_loop_for_tests": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Begins the read replica sync loop in tiered-storage-enabled topic partitions. The property exists to simplify testing and shouldn't be set in production.",
            "name": "cloud_storage_disable_read_replica_loop_for_tests",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_disable_remote_labels_for_tests": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If 'true', Redpanda disables remote labels and falls back on the hash-based object naming scheme for new topics. This property exists to simplify testing and shouldn't be set in production.",
            "name": "cloud_storage_disable_remote_labels_for_tests",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_disable_tls": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable TLS for all object storage connections.",
            "name": "cloud_storage_disable_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cloud_storage_disable_upload_consistency_checks": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable all upload consistency checks. This will allow redpanda to upload logs with gaps and replicate metadata with consistency violations. Normally, this options should be disabled.",
            "name": "cloud_storage_disable_upload_consistency_checks",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_disable_upload_loop_for_tests": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Begins the upload loop in tiered-storage-enabled topic partitions. The property exists to simplify testing and shouldn't be set in production.",
            "name": "cloud_storage_disable_upload_loop_for_tests",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_compacted_topic_reupload": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable re-uploading data for compacted topics",
            "name": "cloud_storage_enable_compacted_topic_reupload",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_remote_read": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default remote read config value for new topics",
            "name": "cloud_storage_enable_remote_read",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_remote_write": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default remote write value for new topics",
            "name": "cloud_storage_enable_remote_write",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_scrubbing": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable scrubbing of cloud storage partitions. The scrubber validates the integrity of data and metadata uploaded to cloud storage.",
            "name": "cloud_storage_enable_scrubbing",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_segment_merging": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables adjacent segment merging. The segments are reuploaded if there is an opportunity for that and if it will improve the tiered-storage performance",
            "name": "cloud_storage_enable_segment_merging",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable object storage. Must be set to `true` to use Tiered Storage or Remote Read Replicas.",
            "name": "cloud_storage_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cloud_storage_full_scrub_interval_ms": {
            "default": "12h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval between a final scrub and the next.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_full_scrub_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_garbage_collect_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for running the cloud storage garbage collection (ms).",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_garbage_collect_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_graceful_transfer_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time limit on waiting for uploads to complete before a leadership transfer.  If this is null, leadership transfers will proceed without waiting.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_graceful_transfer_timeout_ms",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_housekeeping_interval_ms": {
            "default": "5min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval for cloud storage housekeeping tasks.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_housekeeping_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_hydrated_chunks_per_segment_ratio": {
            "default": 0.7,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum number of chunks per segment that can be hydrated at a time. Above this number, unused chunks will be trimmed.",
            "name": "cloud_storage_hydrated_chunks_per_segment_ratio",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_hydration_timeout_ms": {
            "default": "600s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Duration to wait for a hydration request to be fulfilled, if hydration is not completed within this time, the consumer will be notified with a timeout error.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_hydration_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_idle_threshold_rps": {
            "default": 10.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The cloud storage request rate threshold for idle state detection. If the average request rate for the configured period is lower than this threshold the cloud storage is considered being idle.",
            "name": "cloud_storage_idle_threshold_rps",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_idle_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout used to detect idle state of the cloud storage API. If the average cloud storage request rate is below this threshold for a configured amount of time the cloud storage is considered idle and the housekeeping jobs are started.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_idle_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_initial_backoff_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial backoff time for exponential backoff algorithm (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_initial_backoff_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_based_scrub_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Scrubber uses the latest cloud storage inventory report, if available, to check if the required objects exist in the bucket or container.",
            "name": "cloud_storage_inventory_based_scrub_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_hash_store": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Directory to store inventory report hashes for use by cloud storage scrubber",
            "name": "cloud_storage_inventory_hash_path_directory",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_inventory_id": {
            "default": "redpanda_scrubber_inventory",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The name of the scheduled inventory job created by Redpanda to generate bucket or container inventory reports.",
            "name": "cloud_storage_inventory_id",
            "needs_restart": true,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_max_hash_size_during_parse": {
            "default": 67108864,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum bytes of hashes which will be held in memory before writing data to disk during inventory report parsing. Affects the number of files written by inventory service to disk during report parsing, as when this limit is reached new files are written to disk.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "cloud_storage_inventory_max_hash_size_during_parse",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_report_check_interval_ms": {
            "default": "6h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval between checks for a new inventory report in the cloud storage bucket or container.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_inventory_report_check_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_reports_prefix": {
            "default": "redpanda_scrubber_inventory",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The prefix to the path in the cloud storage bucket or container where inventory reports will be placed.",
            "name": "cloud_storage_inventory_reports_prefix",
            "needs_restart": true,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "cloud_storage_inventory_self_managed_report_config": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If enabled, Redpanda will not attempt to create the scheduled report configuration using cloud storage APIs. The scrubbing process will look for reports in the expected paths in the bucket or container, and use the latest report found. Primarily intended for use in testing and on backends where scheduled inventory reports are not supported.",
            "name": "cloud_storage_inventory_self_managed_report_config",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_manifest_cache_size": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Amount of memory that can be used to handle tiered-storage metadata",
            "name": "cloud_storage_manifest_cache_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_manifest_cache_ttl_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The time interval that determines how long the materialized manifest can stay in cache under contention. This parameter is used for performance tuning. When the spillover manifest is materialized and stored in cache and the cache needs to evict it it will use 'cloud_storage_materialized_manifest_ttl_ms' value as a timeout. The cursor that uses the spillover manifest uses this value as a TTL interval after which it stops referencing the manifest making it available for eviction. This only affects spillover manifests under contention.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_materialized_manifest_ttl_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_manifest_max_upload_interval_sec": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Wait at least this long between partition manifest uploads. Actual time between uploads may be greater than this interval. If this property is not set, or null, metadata will be updated after each segment upload.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "cloud_storage_manifest_max_upload_interval_sec",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_manifest_upload_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Manifest upload timeout (ms).",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_manifest_upload_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_concurrent_hydrations_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum concurrent segment hydrations of remote data per CPU core.  If unset, value of `cloud_storage_max_connections / 2` is used, which means that half of available S3 bandwidth could be used to download data from S3. If the cloud storage cache is empty every new segment reader will require a download. This will lead to 1:1 mapping between number of partitions scanned by the fetch request and number of parallel downloads. If this value is too large the downloads can affect other workloads. In case of any problem caused by the tiered-storage reads this value can be lowered. This will only affect segment hydrations (downloads) but won't affect cached segments. If fetch request is reading from the tiered-storage cache its concurrency will only be limited by available memory.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_concurrent_hydrations_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_connection_idle_time_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max https connection idle time (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_max_connection_idle_time_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_connections": {
            "default": 20,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum simultaneous object storage connections per shard, applicable to upload and download activities.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_max_connections",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_max_materialized_segments_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum concurrent readers of remote data per CPU core.  If unset, value of `topic_partitions_per_shard` multiplied by 2 is used.",
            "is_deprecated": true,
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_materialized_segments_per_shard",
            "needs_restart": true,
            "nullable": true,
            "type": null,
            "visibility": "deprecated"
        },
        "cloud_storage_max_partition_readers_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum partition readers per shard (deprecated)",
            "is_deprecated": true,
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_partition_readers_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": null,
            "visibility": "deprecated"
        },
        "cloud_storage_max_segment_readers_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum concurrent I/O cursors of materialized remote segments per CPU core.  If unset, value of `topic_partitions_per_shard` is used, i.e. one segment reader per partition if the shard is at its maximum partition capacity.  These readers are cachedacross Kafka consume requests and store a readahead buffer.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_segment_readers_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_segments_pending_deletion_per_partition": {
            "default": 5000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The per-partition limit for the number of segments pending deletion from the cloud. Segments can be deleted due to retention or compaction. If this limit is breached and deletion fails, then segments will be orphaned in the cloud and will have to be removed manually",
            "name": "cloud_storage_max_segments_pending_deletion_per_partition",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_throughput_per_shard": {
            "default": 1073741824,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max throughput used by tiered-storage per shard in bytes per second. This value is an upper bound of the throughput available to the tiered-storage subsystem. This parameter is intended to be used as a safeguard and in tests when we need to set precise throughput value independent of actual storage media. Please use 'cloud_storage_throughput_limit_percent' instead of this parameter in the production environment.",
            "name": "cloud_storage_max_throughput_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_metadata_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for SI metadata synchronization.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_metadata_sync_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_min_chunks_per_segment_threshold": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum number of chunks per segment for trimming to be enabled. If the number of chunks in a segment is below this threshold, the segment is small enough that all chunks in it can be hydrated at any given time",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "cloud_storage_min_chunks_per_segment_threshold",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_partial_scrub_interval_ms": {
            "default": "1h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval between two partial scrubs of the same partition.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_partial_scrub_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_readreplica_manifest_sync_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout to check if new data is available for partition in S3 for read replica.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_readreplica_manifest_sync_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_reconciliation_ms": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "cloud_storage_reconciliation_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "cloud_storage_recovery_temporary_retention_bytes_default": {
            "default": 1073741824,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Retention in bytes for topics created during automated recovery",
            "name": "cloud_storage_recovery_temporary_retention_bytes_default",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_recovery_topic_validation_depth": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of metadata segments to validate, from newest to oldest, when `cloud_storage_recovery_topic_validation_mode` is set to `check_manifest_and_segment_metadata`.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_recovery_topic_validation_depth",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_recovery_topic_validation_mode": {
            "default": "model::recovery_validation_mode::check_manifest_existence",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Validation performed before recovering a topic from object storage. In case of failure, the reason for the failure appears as `ERROR` lines in the Redpanda application log. For each topic, this reports errors for all partitions, but for each partition, only the first error is reported. This property accepts the following parameters: `no_check`: Skips the checks for topic recovery. `check_manifest_existence`:  Runs an existence check on each `partition_manifest`. Fails if there are connection issues to the object storage. `check_manifest_and_segment_metadata`: Downloads the manifest and runs a consistency check, comparing the metadata with the cloud storage objects. The process fails if metadata references any missing cloud storage objects.",
            "name": "cloud_storage_recovery_topic_validation_mode",
            "needs_restart": false,
            "nullable": false,
            "type": "model::recovery_validation_mode",
            "visibility": "tunable"
        },
        "cloud_storage_region": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cloud provider region that houses the bucket or container used for storage.",
            "name": "cloud_storage_region",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_roles_operation_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for IAM role related operations (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_roles_operation_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_scrubbing_interval_jitter_ms": {
            "default": "10min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Jitter applied to the cloud storage scrubbing interval.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_scrubbing_interval_jitter_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_secret_key": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cloud provider secret key.",
            "is_secret": true,
            "name": "cloud_storage_secret_key",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_segment_max_upload_interval_sec": {
            "default": "1h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time that segment can be kept locally without uploading it to the remote storage (sec).",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "cloud_storage_segment_max_upload_interval_sec",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_segment_size_min": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Smallest acceptable segment size in the cloud storage. Default: cloud_storage_segment_size_target/2",
            "name": "cloud_storage_segment_size_min",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_segment_size_target": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Desired segment size in the cloud storage. Default: segment.bytes",
            "name": "cloud_storage_segment_size_target",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_segment_upload_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Log segment upload timeout (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_segment_upload_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_spillover_manifest_max_segments": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of elements in the spillover manifest that can be offloaded to the cloud storage. This property is similar to 'cloud_storage_spillover_manifest_size' but it triggers spillover based on number of segments instead of the size of the manifest in bytes. The property exists to simplify testing and shouldn't be set in the production environment",
            "name": "cloud_storage_spillover_manifest_max_segments",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_spillover_manifest_size": {
            "default": 65536,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The size of the manifest which can be offloaded to the cloud. If the size of the local manifest stored in redpanda exceeds cloud_storage_spillover_manifest_size x2 the spillover mechanism will split the manifest into two parts and one of them will be uploaded to S3.",
            "name": "cloud_storage_spillover_manifest_size",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_throughput_limit_percent": {
            "default": 50,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max throughput used by tiered-storage per node expressed as a percentage of the disk bandwidth. If the server has several disks Redpanda will take into account only the one which is used to store tiered-storage cache. Note that even if the tiered-storage is allowed to use full bandwidth of the disk (100%) it won't necessary use it in full. The actual usage depend on your workload and the state of the tiered-storage cache. This parameter is a safeguard that prevents tiered-storage from using too many system resources and not a performance tuning knob.",
            "name": "cloud_storage_throughput_limit_percent",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_topic_purge_grace_period_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Grace period during which the purger will refuse to purge the topic.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_topic_purge_grace_period_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_trust_file": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Path to certificate that should be used to validate server certificate during TLS handshake.",
            "name": "cloud_storage_trust_file",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_upload_ctrl_d_coeff": {
            "default": 0.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "derivative coefficient for upload PID controller.",
            "name": "cloud_storage_upload_ctrl_d_coeff",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_max_shares": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "maximum number of IO and CPU shares that archival upload can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_upload_ctrl_max_shares",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_min_shares": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "minimum number of IO and CPU shares that archival upload can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_upload_ctrl_min_shares",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_p_coeff": {
            "default": -2.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "proportional coefficient for upload PID controller",
            "name": "cloud_storage_upload_ctrl_p_coeff",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_update_interval_ms": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_ctrl_update_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_loop_initial_backoff_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial backoff interval when there is nothing to upload for a partition (ms).",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_loop_initial_backoff_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_loop_max_backoff_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max backoff interval when there is nothing to upload for a partition (ms).",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_loop_max_backoff_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_url_style": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Specifies the addressing style to use for Amazon S3 requests. This configuration determines how S3 bucket URLs are formatted. You can choose between: `virtual_host`, (for example, `<bucket-name>.s3.amazonaws.com`), `path`, (for example, `s3.amazonaws.com/<bucket-name>`), and `null`. Path style is supported for backward compatibility with legacy systems. When this property is not set or is `null`, the client tries to use `virtual_host` addressing. If the initial request fails, the client automatically tries the `path` style. If neither addressing style works, Redpanda terminates the startup, requiring manual configuration to proceed.",
            "name": "cloud_storage_url_style",
            "needs_restart": true,
            "nullable": true,
            "type": "s3_url_style",
            "visibility": "user"
        },
        "cluster_id": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cluster identifier.",
            "name": "cluster_id",
            "needs_restart": false,
            "nullable": true,
            "type": "string"
        },
        "compacted_log_segment_size": {
            "default": 268435456,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size (in bytes) for each compacted log segment.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "compacted_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_backlog_size": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target backlog size for compaction controller. If not set the max backlog size is configured to 80% of total disk space available.",
            "name": "compaction_ctrl_backlog_size",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_d_coeff": {
            "default": 0.2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Derivative coefficient for compaction PID controller.",
            "name": "compaction_ctrl_d_coeff",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_i_coeff": {
            "default": 0.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Integral coefficient for compaction PID controller.",
            "name": "compaction_ctrl_i_coeff",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_max_shares": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of I/O and CPU shares that compaction process can use.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "compaction_ctrl_max_shares",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_min_shares": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum number of I/O and CPU shares that compaction process can use.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "compaction_ctrl_min_shares",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_p_coeff": {
            "default": -12.5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Proportional coefficient for compaction PID controller. This must be negative, because the compaction backlog should decrease when the number of compaction shares increases.",
            "name": "compaction_ctrl_p_coeff",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_update_interval_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "compaction_ctrl_update_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "consumer_heartbeat_interval": {
            "default": "500ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Interval (in milliseconds) for consumer heartbeats.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_heartbeat_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_instance_timeout": {
            "default": "std::chrono::minutes{5}",
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "How long to wait for an idle consumer before removing it. A consumer is considered idle when it's not making requests or heartbeats.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_instance_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_rebalance_timeout": {
            "default": "2s",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Timeout (in milliseconds) for consumer rebalance.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_rebalance_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_request_max_bytes": {
            "default": 1048576,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Maximum bytes to fetch per request.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "consumer_request_max_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_request_min_bytes": {
            "default": 1,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Minimum bytes to fetch per request.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "consumer_request_min_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_request_timeout": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Interval (in milliseconds) for consumer request timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_request_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "consumer_session_timeout": {
            "default": "10s",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Timeout (in milliseconds) for consumer session.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_session_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "controller_backend_housekeeping_interval_ms": {
            "default": "1s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval between iterations of controller backend housekeeping loop.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "controller_backend_housekeeping_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_acls_and_users_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulation in controller ACLs and users operations limit.",
            "name": "controller_log_accummulation_rps_capacity_acls_and_users_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_configuration_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulation in controller configuration operations limit.",
            "name": "controller_log_accummulation_rps_capacity_configuration_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_move_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulation in controller move operations limit.",
            "name": "controller_log_accummulation_rps_capacity_move_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_node_management_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulation in controller node management operations limit.",
            "name": "controller_log_accummulation_rps_capacity_node_management_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_topic_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller topic operations limit",
            "name": "controller_log_accummulation_rps_capacity_topic_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_snapshot_max_age_sec": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum amount of time before Redpanda attempts to create a controller snapshot after a new controller command appears.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "controller_snapshot_max_age_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_max_batch_size": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "coproc_max_batch_size",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "coproc_max_inflight_bytes": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "coproc_max_inflight_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "coproc_max_ingest_bytes": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "coproc_max_ingest_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "coproc_offset_flush_interval_ms": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "coproc_offset_flush_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "coproc_supervisor_server": {
            "defined_in": "src/v/config/node_config.cc",
            "description": null,
            "is_deprecated": true,
            "name": "coproc_supervisor_server",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "core_balancing_continuous": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If set to `true`, move partitions between cores in runtime to maintain balanced partition distribution.",
            "name": "core_balancing_continuous",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "core_balancing_debounce_timeout": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval, in milliseconds, between trigger and invocation of core balancing.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "core_balancing_debounce_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "core_balancing_on_core_count_change": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If set to `true`, and if after a restart the number of cores changes, Redpanda will move partitions between cores to maintain balanced partition distribution.",
            "name": "core_balancing_on_core_count_change",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cpu_profiler_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables CPU profiling for Redpanda.",
            "name": "cpu_profiler_enabled",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cpu_profiler_sample_period_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The sample period for the CPU profiler.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cpu_profiler_sample_period_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "crash_loop_limit": {
            "default": 5,
            "defined_in": "src/v/config/node_config.cc",
            "description": "A limit on the number of consecutive times a broker can crash within one hour before its crash-tracking logic is reset. This limit prevents a broker from getting stuck in an infinite cycle of crashes. For more information see https://docs.redpanda.com/current/reference/properties/broker-properties/#crash_loop_limit.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "crash_loop_limit",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "create_topic_timeout_ms": {
            "default": "2'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout, in milliseconds, to wait for new topic creation.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "create_topic_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "dashboard_dir": {
            "defined_in": "src/v/config/node_config.cc",
            "description": null,
            "is_deprecated": true,
            "name": "dashboard_dir",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "data_directory": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "Path to the directory for storing Redpanda's streaming data files.",
            "name": "data_directory",
            "needs_restart": true,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "data_transforms_binary_max_size": {
            "default": 10485760,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum size for a deployable WebAssembly binary that the broker can store.",
            "name": "data_transforms_binary_max_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_commit_interval_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The commit interval at which data transforms progress.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "data_transforms_commit_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables WebAssembly-powered data transforms directly in the broker. When `data_transforms_enabled` is set to `true`, Redpanda reserves memory for data transforms, even if no transform functions are currently deployed. This memory reservation ensures that adequate resources are available for transform functions when they are needed, but it also means that some memory is allocated regardless of usage.",
            "name": "data_transforms_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "data_transforms_logging_buffer_capacity_bytes": {
            "default": 512000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Buffer capacity for transform logs, per shard. Buffer occupancy is calculated as the total size of buffered log messages; that is, logs emitted but not yet produced.",
            "name": "data_transforms_logging_buffer_capacity_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_logging_flush_interval_ms": {
            "default": "500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Flush interval for transform logs. When a timer expires, pending logs are collected and published to the `transform_logs` topic.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "data_transforms_logging_flush_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_logging_line_max_bytes": {
            "default": 1024,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Transform log lines truncate to this length. Truncation occurs after any character escaping.",
            "name": "data_transforms_logging_line_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_per_core_memory_reservation": {
            "default": 20971520,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The amount of memory to reserve per core for data transform (Wasm) virtual machines. Memory is reserved on boot. The maximum number of functions that can be deployed to a cluster is equal to `data_transforms_per_core_memory_reservation` / `data_transforms_per_function_memory_limit`.",
            "name": "data_transforms_per_core_memory_reservation",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "data_transforms_per_function_memory_limit": {
            "default": 2097152,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The amount of memory to give an instance of a data transform (Wasm) virtual machine. The maximum number of functions that can be deployed to a cluster is equal to `data_transforms_per_core_memory_reservation` / `data_transforms_per_function_memory_limit`.",
            "name": "data_transforms_per_function_memory_limit",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "data_transforms_read_buffer_memory_percentage": {
            "default": 45,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The percentage of available memory in the transform subsystem to use for read buffers.",
            "name": "data_transforms_read_buffer_memory_percentage",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_runtime_limit_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum amount of runtime to start up a data transform, and the time it takes for a single record to be transformed.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "data_transforms_runtime_limit_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "data_transforms_write_buffer_memory_percentage": {
            "default": 45,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The percentage of available memory in the transform subsystem to use for write buffers.",
            "name": "data_transforms_write_buffer_memory_percentage",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "debug_bundle_auto_removal_seconds": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If set, how long debug bundles are kept in the debug bundle storage directory after they are created. If not set, debug bundles are kept indefinitely.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "debug_bundle_auto_removal_seconds",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "debug_bundle_storage_dir": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Path to the debug bundle storage directory. Note: Changing this path does not clean up existing debug bundles. If not set, the debug bundle is stored in the Redpanda data directory specified in the redpanda.yaml broker configuration file.",
            "name": "debug_bundle_storage_dir",
            "needs_restart": false,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "debug_load_slice_warning_depth": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The recursion depth after which debug logging is enabled automatically for the log reader.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "debug_load_slice_warning_depth",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "default_leaders_preference": {
            "default": "config::leaders_preference{}",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default settings for preferred location of topic partition leaders. It can be either \"none\" (no preference), or \"racks:<rack1>,<rack2>,...\" (prefer brokers with rack id from the list).",
            "name": "default_leaders_preference",
            "needs_restart": false,
            "nullable": false,
            "type": "config::leaders_preference",
            "visibility": "user"
        },
        "default_num_windows": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default number of quota tracking windows.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "default_num_windows",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "default_topic_partitions": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default number of partitions per topic.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "default_topic_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "default_topic_replication": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default replication factor for new topics.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "default_topic_replications",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "default_window_sec": {
            "default": "std::chrono::milliseconds(1000)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default quota tracking window size in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "default_window_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "developer_mode": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Skips most of the checks performed at startup, not recomended for production use",
            "name": "developer_mode",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "development_enable_cloud_topics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable cloud topics.",
            "is_experimental_property": true,
            "name": "development_enable_cloud_topics",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "development_feature_property_testing_only": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Development feature property for testing only.",
            "is_experimental_property": true,
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "development_feature_property_testing_only",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "disable_batch_cache": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable batch cache in log manager.",
            "name": "disable_batch_cache",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "disable_cluster_recovery_loop_for_tests": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disables the cluster recovery loop. This property is used to simplify testing and should not be set in production.",
            "name": "disable_cluster_recovery_loop_for_tests",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "disable_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable registering the metrics exposed on the internal `/metrics` endpoint.",
            "name": "disable_metrics",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean"
        },
        "disable_public_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable registering the metrics exposed on the `/public_metrics` endpoint.",
            "name": "disable_public_metrics",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean"
        },
        "disk_reservation_percent": {
            "default": 25.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The percentage of total disk capacity that Redpanda will avoid using. This applies both when cloud cache and log data share a disk, as well as when cloud cache uses a dedicated disk. It is recommended to not run disks near capacity to avoid blocking I/O due to low disk space, as well as avoiding performance issues associated with SSD garbage collection.",
            "name": "disk_reservation_percent",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "emergency_disable_data_transforms": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Override the cluster property `data_transforms_enabled` and disable Wasm-powered data transforms. This is an emergency shutoff button.",
            "name": "emergency_disable_data_transforms",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "empty_seed_starts_cluster": {
            "default": true,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Controls how a new cluster is formed. All brokers in a cluster must have the same value. See how the `empty_seed_starts_cluster` setting works with the `seed_servers` setting to form a cluster. For backward compatibility, `true` is the default. Redpanda recommends using `false` in production environments to prevent accidental cluster formation.",
            "name": "empty_seed_starts_cluster",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_admin_api": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "enable_admin_api",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "enable_auto_rebalance_on_node_add": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable automatic partition rebalancing when new nodes are added",
            "is_deprecated": true,
            "name": "enable_auto_rebalance_on_node_add",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "enable_central_config": {
            "defined_in": "src/v/config/node_config.cc",
            "description": null,
            "is_deprecated": true,
            "name": "enable_central_config",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "enable_cluster_metadata_upload_loop": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables cluster metadata uploads. Required for whole cluster restore.",
            "name": "enable_cluster_metadata_upload_loop",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "enable_controller_log_rate_limiting": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Limits the write rate for the controller log.",
            "name": "enable_controller_log_rate_limiting",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_coproc": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "enable_coproc",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "enable_developmental_unrecoverable_data_corrupting_features": {
            "default": "",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Development features should never be enabled in a production cluster, or any cluster where stability, data loss, or the ability to upgrade are a concern. To enable experimental features, set the value of this configuration option to the current unix epoch expressed in seconds. The value must be within one hour of the current time on the broker.Once experimental features are enabled they cannot be disabled",
            "is_experimental_property": true,
            "name": "enable_developmental_unrecoverable_data_corrupting_features",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "enable_idempotence": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable idempotent producers.",
            "name": "enable_idempotence",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_leader_balancer": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable automatic leadership rebalancing.",
            "name": "enable_leader_balancer",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_metrics_reporter": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable the cluster metrics reporter. If `true`, the metrics reporter collects and exports to Redpanda Data a set of customer usage metrics at the interval set by `metrics_reporter_report_interval`. The cluster metrics of the metrics reporter are different from the monitoring metrics. * The metrics reporter exports customer usage metrics for consumption by Redpanda Data.* Monitoring metrics are exported for consumption by Redpanda users.",
            "name": "enable_metrics_reporter",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_mpx_extensions": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable Redpanda extensions for MPX.",
            "name": "enable_mpx_extensions",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "enable_pid_file": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable PID file. You should not need to change.",
            "name": "enable_pid_file",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "enable_rack_awareness": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable rack-aware replica assignment.",
            "name": "enable_rack_awareness",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_sasl": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable SASL authentication for Kafka connections. Authorization is required to modify this property. See also `kafka_enable_authorization`.",
            "name": "enable_sasl",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_schema_id_validation": {
            "default": "pandaproxy::schema_registry::schema_id_validation_mode::none",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Mode to enable server-side schema ID validation. Accepted Values: * `none`: Schema validation is disabled (no schema ID checks are done). Associated topic properties cannot be modified. * `redpanda`: Schema validation is enabled. Only Redpanda topic properties are accepted. * `compat`: Schema validation is enabled. Both Redpanda and compatible topic properties are accepted.",
            "name": "enable_schema_id_validation",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/pandaproxy::schema_registry::schema_id_validation_mode",
            "visibility": "user"
        },
        "enable_transactions": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable transactions (atomic writes).",
            "name": "enable_transactions",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_usage": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables the usage tracking mechanism, storing windowed history of kafka/cloud_storage metrics over time.",
            "name": "enable_usage",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "features_auto_enable": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether new feature flags auto-activate after upgrades (true) or must wait for manual activation via the Admin API (false).",
            "name": "features_auto_enable",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "fetch_max_bytes": {
            "default": 57671680,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes returned in a fetch request.",
            "name": "fetch_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "fetch_pid_d_coeff": {
            "default": 0.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Derivative coefficient for fetch PID controller.",
            "name": "fetch_pid_d_coeff",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "fetch_pid_i_coeff": {
            "default": 0.01,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Integral coefficient for fetch PID controller.",
            "name": "fetch_pid_i_coeff",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "fetch_pid_max_debounce_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum debounce time the fetch PID controller will apply, in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "fetch_pid_max_debounce_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "fetch_pid_p_coeff": {
            "default": 100.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Proportional coefficient for fetch PID controller.",
            "name": "fetch_pid_p_coeff",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "fetch_pid_target_utilization_fraction": {
            "default": 0.2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "A fraction, between 0 and 1, for the target reactor utilization of the fetch scheduling group.",
            "name": "fetch_pid_target_utilization_fraction",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "fetch_read_strategy": {
            "default": "model::fetch_read_strategy::non_polling",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The strategy used to fulfill fetch requests. * `polling`: Repeatedly polls every partition in the request for new data. The polling interval is set by `fetch_reads_debounce_timeout` (deprecated). * `non_polling`: The backend is signaled when a partition has new data, so Redpanda does not need to repeatedly read from every partition in the fetch. Redpanda Data recommends using this value for most workloads, because it can improve fetch latency and CPU utilization. * `non_polling_with_debounce`: This option behaves like `non_polling`, but it includes a debounce mechanism with a fixed delay specified by `fetch_reads_debounce_timeout` at the start of each fetch. By introducing this delay, Redpanda can accumulate more data before processing, leading to fewer fetch operations and returning larger amounts of data. Enabling this option reduces reactor utilization, but it may also increase end-to-end latency.",
            "name": "fetch_read_strategy",
            "needs_restart": false,
            "nullable": false,
            "type": "model::fetch_read_strategy",
            "visibility": "tunable"
        },
        "fetch_reads_debounce_timeout": {
            "default": "1ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time to wait for the next read in fetch requests when the requested minimum bytes was not reached.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "fetch_reads_debounce_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "fetch_session_eviction_timeout_ms": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time duration after which the inactive fetch session is removed from the fetch session cache. Fetch sessions are used to implement the incremental fetch requests where a consumer does not send all requested partitions to the server but the server tracks them for the consumer.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "fetch_session_eviction_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "find_coordinator_timeout_ms": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "find_coordinator_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "fips_mode": {
            "default": "fips_mode_flag::disabled",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Controls whether Redpanda starts in FIPS mode.  This property allows for three values: `disabled` - Redpanda does not start in FIPS mode. `permissive` - Redpanda performs the same check as enabled, but a warning is logged, and Redpanda continues to run. Redpanda loads the OpenSSL FIPS provider into the OpenSSL library. After this completes, Redpanda is operating in FIPS mode, which means that the TLS cipher suites available to users are limited to the TLSv1.2 and TLSv1.3 NIST-approved cryptographic methods. `enabled` - Redpanda verifies that the operating system is enabled for FIPS by checking `/proc/sys/crypto/fips_enabled`. If the file does not exist or does not return `1`, Redpanda immediately exits.",
            "name": "fips_mode",
            "needs_restart": true,
            "nullable": false,
            "type": "fips_mode_flag",
            "visibility": "user"
        },
        "full_raft_configuration_recovery_pattern": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "full_raft_configuration_recovery_pattern",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "group_initial_rebalance_delay": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delay added to the rebalance phase to wait for new members.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_initial_rebalance_delay",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_max_session_timeout_ms": {
            "default": "300s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_max_session_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer"
        },
        "group_min_session_timeout_ms": {
            "default": "6000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum allowed session timeout for registered consumers. Shorter timeouts result in quicker failure detection at the cost of more frequent consumer heartbeating, which can overwhelm broker resources.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_min_session_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer"
        },
        "group_new_member_join_timeout": {
            "default": "30'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for new member joins.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_new_member_join_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_offset_retention_check_ms": {
            "default": "10min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Frequency rate at which the system should check for expired group offsets.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_offset_retention_check_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_offset_retention_sec": {
            "default": "24h * 7",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Consumer group offset retention seconds. To disable offset retention, set this to null.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "group_offset_retention_sec",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_topic_partitions": {
            "default": 16,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions in the internal group membership topic.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "group_topic_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_manager_tick_interval": {
            "default": "3min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often the health manager runs.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_manager_tick_interval",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_monitor_max_metadata_age": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum age of the metadata cached in the health monitor of a non-controller broker.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_monitor_max_metadata_age",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_monitor_tick_interval": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often health monitor refresh cluster state",
            "is_deprecated": true,
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_monitor_tick_interval",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "http_authentication": {
            "default": [
                "BASIC"
            ],
            "defined_in": "src/v/config/configuration.cc",
            "description": "A list of supported HTTP authentication mechanisms. Accepted Values: `BASIC`, `OIDC`",
            "items": {
                "type": "string"
            },
            "name": "http_authentication",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "iceberg_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables the translation of topic data into Iceberg tables. Setting iceberg_enabled to true activates the feature at the cluster level, but each topic must also set the redpanda.iceberg.enabled topic-level property to true to use it. If iceberg_enabled is set to false, the feature is disabled for all topics in the cluster, overriding any topic-level settings.",
            "name": "iceberg_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "id_allocator_batch_size": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The ID allocator allocates messages in batches (each batch is a one log record) and then serves requests from memory without touching the log until the batch is exhausted.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "id_allocator_batch_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "id_allocator_log_capacity": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Capacity of the `id_allocator` log in number of batches. After it reaches `id_allocator_stm`, it truncates the log's prefix.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "id_allocator_log_capacity",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "id_allocator_replication": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "id_allocator_replication",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "initial_retention_local_target_bytes_default": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial local retention size target for partitions of topics with Tiered Storage enabled. If no initial local target retention is configured all locally retained data will be delivered to learner when joining partition replica set.",
            "name": "initial_retention_local_target_bytes_default",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "initial_retention_local_target_ms_default": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial local retention time target for partitions of topics with Tiered Storage enabled. If no initial local target retention is configured all locally retained data will be delivered to learner when joining partition replica set.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "initial_retention_local_target_ms_default",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "internal_topic_replication_factor": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target replication factor for internal topics.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "internal_topic_replication_factor",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "join_retry_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time between cluster join retries in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "join_retry_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_admin_topic_api_rate": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target quota rate (partition mutations per default_window_sec)",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_admin_topic_api_rate",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_api": {
            "default": {
                "address": "net::unresolved_address(\"127.0.0.1\", 9092)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/config/node_config.cc",
            "description": "IP address and port of the Kafka API endpoint that handles requests.",
            "name": "kafka_api",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::broker_authn_endpoint",
            "visibility": "user"
        },
        "kafka_api_tls": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "Transport Layer Security (TLS) configuration for the Kafka API endpoint.",
            "name": "kafka_api_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/endpoint_tls_config",
            "visibility": "user"
        },
        "kafka_batch_max_bytes": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of a batch processed by the server. If the batch is compressed, the limit applies to the compressed batch size.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_batch_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_client_group_byte_rate_quota": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per-group target produce quota byte rate (bytes per second). Client is considered part of the group if client_id contains clients_prefix.",
            "name": "kafka_client_group_byte_rate_quota",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/client_group_quota",
            "visibility": "user"
        },
        "kafka_client_group_fetch_byte_rate_quota": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per-group target fetch quota byte rate (bytes per second). Client is considered part of the group if client_id contains clients_prefix",
            "name": "kafka_client_group_fetch_byte_rate_quota",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/client_group_quota",
            "visibility": "user"
        },
        "kafka_connection_rate_limit": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum connections per second for one core. If `null` (the default), then the number of connections per second is unlimited.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_connection_rate_limit",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_connection_rate_limit_overrides": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Overrides the maximum connections per second for one core for the specified IP addresses (for example, `['127.0.0.1:90', '50.20.1.1:40']`)",
            "items": {
                "type": "string"
            },
            "name": "kafka_connection_rate_limit_overrides",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_connections_max": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Kafka client connections per broker. If `null`, the property is disabled.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_connections_max",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_connections_max_overrides": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "A list of IP addresses for which Kafka client connection limits are overridden and don't apply. For example, `(['127.0.0.1:90', '50.20.1.1:40']).`",
            "items": {
                "type": "string"
            },
            "name": "kafka_connections_max_overrides",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_connections_max_per_ip": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Kafka client connections per IP address, per broker. If `null`, the property is disabled.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_connections_max_per_ip",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_enable_authorization": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Flag to require authorization for Kafka connections. If `null`, the property is disabled, and authorization is instead enabled by enable_sasl. * `null`: Ignored. Authorization is enabled with `enable_sasl`: `true` * `true`: authorization is required. * `false`: authorization is disabled.",
            "name": "kafka_enable_authorization",
            "needs_restart": false,
            "nullable": true,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_enable_describe_log_dirs_remote_storage": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether to include Tiered Storage as a special remote:// directory in `DescribeLogDirs Kafka` API requests.",
            "name": "kafka_enable_describe_log_dirs_remote_storage",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_enable_partition_reassignment": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable the Kafka partition reassignment API.",
            "name": "kafka_enable_partition_reassignment",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_group_recovery_timeout_ms": {
            "default": "30'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Kafka group recovery timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_group_recovery_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_max_bytes_per_fetch": {
            "default": 67108864,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Limit fetch responses to this many bytes, even if the total of partition bytes limits is higher.",
            "name": "kafka_max_bytes_per_fetch",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_memory_batch_size_estimate_for_fetch": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The size of the batch used to estimate memory consumption for fetch requests, in bytes. Smaller sizes allow more concurrent fetch requests per shard. Larger sizes prevent running out of memory because of too many concurrent fetch requests.",
            "name": "kafka_memory_batch_size_estimate_for_fetch",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_memory_share_for_fetch": {
            "default": 0.5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The share of Kafka subsystem memory that can be used for fetch read buffers, as a fraction of the Kafka subsystem memory amount.",
            "name": "kafka_memory_share_for_fetch",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "user"
        },
        "kafka_mtls_principal_mapping_rules": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Principal mapping rules for mTLS authentication on the Kafka API. If `null`, the property is disabled.",
            "items": {
                "type": "string"
            },
            "name": "kafka_mtls_principal_mapping_rules",
            "needs_restart": false,
            "nullable": true,
            "type": "array",
            "visibility": "user"
        },
        "kafka_nodelete_topics": {
            "default": "{model::kafka_audit_logging_topic(), \"__consumer_offsets\", \"_schemas\"}",
            "defined_in": "src/v/config/configuration.cc",
            "description": "A list of topics that are protected from deletion and configuration changes by Kafka clients. Set by default to a list of Redpanda internal topics.",
            "items": {
                "type": "string"
            },
            "name": "kafka_nodelete_topics",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_noproduce_topics": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "A list of topics that are protected from being produced to by Kafka clients. Set by default to a list of Redpanda internal topics.",
            "items": {
                "type": "string"
            },
            "name": "kafka_noproduce_topics",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_qdc_depth_alpha": {
            "default": 0.8,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Smoothing factor for Kafka queue depth control depth tracking.",
            "name": "kafka_qdc_depth_alpha",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "kafka_qdc_depth_update_ms": {
            "default": "7s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Update frequency for Kafka queue depth control.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_depth_update_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_enable": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable kafka queue depth control.",
            "name": "kafka_qdc_enable",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_qdc_idle_depth": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Queue depth when idleness is detected in Kafka queue depth control.",
            "name": "kafka_qdc_idle_depth",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_latency_alpha": {
            "default": 0.002,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Smoothing parameter for Kafka queue depth control latency tracking.",
            "name": "kafka_qdc_latency_alpha",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "kafka_qdc_max_depth": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum queue depth used in kafka queue depth control.",
            "name": "kafka_qdc_max_depth",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_max_latency_ms": {
            "default": "80ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum latency threshold for Kafka queue depth control depth tracking.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_max_latency_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_qdc_min_depth": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum queue depth used in Kafka queue depth control.",
            "name": "kafka_qdc_min_depth",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_window_count": {
            "default": 12,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of windows used in kafka queue depth control latency tracking.",
            "name": "kafka_qdc_window_count",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_window_size_ms": {
            "default": "1500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Window size for Kafka queue depth control latency tracking.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_window_size_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_quota_balancer_min_shard_throughput_bps": {
            "default": 256,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum value of the throughput quota a shard can get in the process of quota balancing, expressed in bytes per second. The value applies equally to ingress and egress traffic. `kafka_quota_balancer_min_shard_throughput_bps` doesn't override the limit settings, `kafka_throughput_limit_node_in_bps` and `kafka_throughput_limit_node_out_bps`. Consequently, the value of `kafka_throughput_limit_node_in_bps` or `kafka_throughput_limit_node_out_bps` can result in lesser throughput than kafka_quota_balancer_min_shard_throughput_bps. Both `kafka_quota_balancer_min_shard_throughput_ratio` and `kafka_quota_balancer_min_shard_throughput_bps` can be specified at the same time. In this case, the balancer will not decrease the effective shard quota below the largest bytes-per-second (bps) value of each of these two properties. If set to `0`, no minimum is enforced.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_quota_balancer_min_shard_throughput_bps",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_quota_balancer_min_shard_throughput_ratio": {
            "default": 0.01,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum value of the throughput quota a shard can get in the process of quota balancing, expressed as a ratio of default shard quota. While the value applies equally to ingress and egress traffic, the default shard quota can be different for ingress and egress and therefore result in different minimum throughput bytes-per-second (bps) values. Both `kafka_quota_balancer_min_shard_throughput_ratio` and `kafka_quota_balancer_min_shard_throughput_bps` can be specified at the same time. In this case, the balancer will not decrease the effective shard quota below the largest bps value of each of these two properties. If set to `0.0`, the minimum is disabled. If set to `1.0`, the balancer won't be able to rebalance quota without violating this ratio, preventing the balancer from adjusting shards' quotas.",
            "name": "kafka_quota_balancer_min_shard_throughput_ratio",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "user"
        },
        "kafka_quota_balancer_node_period": {
            "default": "0ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Intra-node throughput quota balancer invocation period, in milliseconds. When set to 0, the balancer is disabled and makes all the throughput quotas immutable.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_quota_balancer_node_period_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_quota_balancer_window": {
            "default": "5000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time window used to average current throughput measurement for quota balancer, in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_quota_balancer_window_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_request_max_bytes": {
            "default": 104857600,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of a single request processed using the Kafka API.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_request_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_rpc_server_stream_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of the user-space receive buffer. If `null`, this limit is not applied.",
            "name": "kafka_rpc_server_stream_recv_buf",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_rpc_server_tcp_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of the Kafka server TCP receive buffer. If `null`, the property is disabled.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "kafka_rpc_server_tcp_recv_buf",
            "needs_restart": true,
            "nullable": true,
            "type": "integer"
        },
        "kafka_rpc_server_tcp_send_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of the Kafka server TCP transmit buffer. If `null`, the property is disabled.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "kafka_rpc_server_tcp_send_buf",
            "needs_restart": true,
            "nullable": true,
            "type": "integer"
        },
        "kafka_sasl_max_reauth_ms": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum time between Kafka client reauthentications. If a client has not reauthenticated a connection within this time frame, that connection is torn down. If this property is not set (or set to `null`), session expiry is disabled, and a connection could live long after the client's credentials are expired or revoked.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_sasl_max_reauth_ms",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_schema_id_validation_cache_capacity": {
            "default": 128,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per-shard capacity of the cache for validating schema IDs.",
            "name": "kafka_schema_id_validation_cache_capacity",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_tcp_keepalive_idle_timeout_seconds": {
            "default": "120s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive idle timeout in seconds for Kafka connections. This describes the timeout between TCP keepalive probes that the remote site successfully acknowledged. Refers to the TCP_KEEPIDLE socket option. When changed, applies to new connections only.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "kafka_tcp_keepalive_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_tcp_keepalive_probe_interval_seconds": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive probe interval in seconds for Kafka connections. This describes the timeout between unacknowledged TCP keepalives. Refers to the TCP_KEEPINTVL socket option. When changed, applies to new connections only.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "kafka_tcp_keepalive_probe_interval_seconds",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_tcp_keepalive_probes": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive unacknowledged probes until the connection is considered dead for Kafka connections. Refers to the TCP_KEEPCNT socket option. When changed, applies to new connections only.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_tcp_keepalive_probes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_throughput_control": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of throughput control groups that define exclusions from node-wide throughput limits. Clients excluded from node-wide throughput limits are still potentially subject to client-specific throughput limits. For more information see https://docs.redpanda.com/current/reference/properties/cluster-properties/#kafka_throughput_control.",
            "items": {
                "type": "#/definitions/throughput_control_group"
            },
            "name": "kafka_throughput_control",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_throughput_controlled_api_keys": {
            "default": [
                "produce",
                "fetch"
            ],
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of Kafka API keys that are subject to cluster-wide and node-wide throughput limit control.",
            "items": {
                "type": "string"
            },
            "name": "kafka_throughput_controlled_api_keys",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_throughput_limit_node_in_bps": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum rate of all ingress Kafka API traffic for a node. Includes all Kafka API traffic (requests, responses, headers, fetched data, produced data, etc.). If `null`, the property is disabled, and traffic is not limited.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_throughput_limit_node_in_bps",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_throughput_limit_node_out_bps": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum rate of all egress Kafka traffic for a node. Includes all Kafka API traffic (requests, responses, headers, fetched data, produced data, etc.). If `null`, the property is disabled, and traffic is not limited.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_throughput_limit_node_out_bps",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_throughput_replenish_threshold": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold for refilling the token bucket as part of enforcing throughput limits. This only applies when kafka_throughput_throttling_v2 is `true`. This threshold is evaluated with each request for data. When the number of tokens to replenish exceeds this threshold, then tokens are added to the token bucket. This ensures that the atomic is not being updated for the token count with each request. The range for this threshold is automatically clamped to the corresponding throughput limit for ingress and egress.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_throughput_replenish_threshold",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_throughput_throttling_v2": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables an updated algorithm for enforcing node throughput limits based on a shared token bucket, introduced with Redpanda v23.3.8. Set this property to `false` if you need to use the quota balancing algorithm from Redpanda v23.3.7 and older.  This property defaults to `true` for all new or upgraded Redpanda clusters. Disabling this property is not recommended. It causes your Redpanda cluster to use an outdated throughput throttling mechanism. Only set this to `false` when advised to do so by Redpanda support.",
            "name": "kafka_throughput_throttling_v2",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "kvstore_flush_interval": {
            "default": "std::chrono::milliseconds(10)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Key-value store flush interval (in milliseconds).",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kvstore_flush_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kvstore_max_segment_size": {
            "default": 16777216,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Key-value maximum segment size (in bytes).",
            "name": "kvstore_max_segment_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_idle_timeout": {
            "default": "2min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing idle timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_idle_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_mode": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "leader_balancer_mode",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "leader_balancer_mute_timeout": {
            "default": "5min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing mute timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_mute_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_node_mute_timeout": {
            "default": "20s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing node mute timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_mute_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_transfer_limit_per_shard": {
            "default": 512,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per shard limit for in-progress leadership transfers.",
            "name": "leader_balancer_transfer_limit_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "legacy_group_offset_retention_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Group offset retention is enabled by default starting in Redpanda version 23.1. To enable offset retention after upgrading from an older version, set this option to true.",
            "name": "legacy_group_offset_retention_enabled",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "legacy_permit_unsafe_log_operation": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Flag to enable a Redpanda cluster operator to use unsafe control characters within strings, such as consumer group names or user names. This flag applies only for Redpanda clusters that were originally on version 23.1 or earlier and have been upgraded to version 23.2 or later. Starting in version 23.2, newly-created Redpanda clusters ignore this property.",
            "name": "legacy_permit_unsafe_log_operation",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "legacy_unsafe_log_warning_interval_sec": {
            "default": "300s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Period at which to log a warning about using unsafe strings containing control characters. If unsafe strings are permitted by `legacy_permit_unsafe_log_operation`, a warning will be logged at an interval specified by this property.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "legacy_unsafe_log_warning_interval_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "log_cleanup_policy": {
            "default": "model::cleanup_policy_bitflags::deletion",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default cleanup policy for topic logs. The topic property `cleanup.policy` overrides the value of `log_cleanup_policy` at the topic level.",
            "name": "log_cleanup_policy",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::cleanup_policy_bitflags",
            "visibility": "user"
        },
        "log_compaction_interval_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often to trigger background compaction.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_compaction_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "log_compaction_use_sliding_window": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Use sliding window compaction.",
            "name": "log_compaction_use_sliding_window",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "log_compression_type": {
            "default": "model::compression::producer",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default topic compression type. The topic property `compression.type` overrides the value of `log_compression_type` at the topic level.",
            "name": "log_compression_type",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::compression",
            "visibility": "user"
        },
        "log_disable_housekeeping_for_tests": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disables the housekeeping loop for local storage. This property is used to simplify testing, and should not be set in production.",
            "name": "log_disable_housekeeping_for_tests",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "log_message_timestamp_alert_after_ms": {
            "default": "2h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold in milliseconds for alerting on messages with a timestamp after the broker's time, meaning the messages are in the future relative to the broker's clock.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_message_timestamp_alert_after_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_message_timestamp_alert_before_ms": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold in milliseconds for alerting on messages with a timestamp before the broker's time, meaning the messages are in the past relative to the broker's clock. To disable this check, set to `null`.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_message_timestamp_alert_before_ms",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_message_timestamp_type": {
            "default": "model::timestamp_type::create_time",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default timestamp type for topic messages (CreateTime or LogAppendTime). The topic property `message.timestamp.type` overrides the value of `log_message_timestamp_type` at the topic level.",
            "name": "log_message_timestamp_type",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::timestamp_type",
            "visibility": "user"
        },
        "log_retention_ms": {
            "default": "7 * 24h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The amount of time to keep a log file before deleting it (in milliseconds). If set to `-1`, no time limit is applied. This is a cluster-wide default when a topic does not set or disable `retention.ms`.",
            "name": "log_retention_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/retention_duration_property",
            "visibility": "user"
        },
        "log_segment_ms": {
            "default": "std::chrono::weeks{2}",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default lifetime of log segments. If `null`, the property is disabled, and no default lifetime is set. Any value under 60 seconds (60000 ms) is rejected. This property can also be set in the Kafka API using the Kafka-compatible alias, `log.roll.ms`. The topic property `segment.ms` overrides the value of `log_segment_ms` at the topic level.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_segment_ms",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "log_segment_ms_max": {
            "default": "24h * 365",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Upper bound on topic `segment.ms`: higher values will be clamped to this value.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_segment_ms_max",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_ms_min": {
            "default": "10min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Lower bound on topic `segment.ms`: lower values will be clamped to this value.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_segment_ms_min",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size": {
            "default": 134217728,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default log segment size in bytes for topics which do not set segment.bytes",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_jitter_percent": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Random variation to the segment size limit used for each partition.",
            "maximum": 65535,
            "minimum": 0,
            "name": "log_segment_size_jitter_percent",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_max": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Upper bound on topic `segment.bytes`: higher values will be clamped to this limit.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size_max",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_min": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Lower bound on topic `segment.bytes`: lower values will be clamped to this limit.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size_min",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "lz4_decompress_reusable_buffers_disabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable reusable preallocated buffers for LZ4 decompression.",
            "name": "lz4_decompress_reusable_buffers_disabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "max_compacted_log_segment_size": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum compacted segment size after consolidation.",
            "name": "max_compacted_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_concurrent_producer_ids": {
            "default": "std::numeric_limits<uint64_t>::max()",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of the active producers sessions. When the threshold is passed, Redpanda terminates old sessions. When an idle producer corresponding to the terminated session wakes up and produces, its message batches are rejected, and an out of order sequence error is emitted. Consumers don't affect this setting.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "max_concurrent_producer_ids",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_in_flight_pandaproxy_requests_per_shard": {
            "default": 500,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of in-flight HTTP requests to HTTP Proxy permitted per shard.  Any additional requests above this limit will be rejected with a 429 error.",
            "name": "max_in_flight_pandaproxy_requests_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_in_flight_schema_registry_requests_per_shard": {
            "default": 500,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of in-flight HTTP requests to Schema Registry permitted per shard.  Any additional requests above this limit will be rejected with a 429 error.",
            "name": "max_in_flight_schema_registry_requests_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_kafka_throttle_delay_ms": {
            "default": "30'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Fail-safe maximum throttle delay on Kafka requests.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "max_kafka_throttle_delay_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_transactions_per_coordinator": {
            "default": "std::numeric_limits<uint64_t>::max()",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Specifies the maximum number of active transaction sessions per coordinator. When the threshold is passed Redpanda terminates old sessions. When an idle producer corresponding to the terminated session wakes up and produces, it leads to its batches being rejected with invalid producer epoch or invalid_producer_id_mapping error (depends on the transaction execution phase).",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "max_transactions_per_coordinator",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_version": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "max_version",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "members_backend_retry_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time between members backend reconciliation loop retries.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "members_backend_retry_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "memory_abort_on_alloc_failure": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If `true`, the Redpanda process will terminate immediately when an allocation cannot be satisfied due to memory exhaustion. If false, an exception is thrown.",
            "name": "memory_abort_on_alloc_failure",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "memory_allocation_warning_threshold": {
            "default": "128_KiB + 1",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Threshold for log messages that contain a larger memory allocation than specified.",
            "name": "memory_allocation_warning_threshold",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_interval_ms": {
            "default": "3'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval for metadata dissemination batching.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_dissemination_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_retries": {
            "default": 30,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of attempts to look up a topic's metadata-like shard before a request fails. This configuration controls the number of retries that request handlers perform when internal topic metadata (for topics like tx, consumer offsets, etc) is missing. These topics are usually created on demand when users try to use the cluster for the first time and it may take some time for the creation to happen and the metadata to propagate to all the brokers (particularly the broker handling the request). In the mean time Redpanda waits and retry. This configuration controls the number retries.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "metadata_dissemination_retries",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_retry_delay_ms": {
            "default": "0'500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delay before retrying a topic lookup in a shard or other meta tables.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_dissemination_retry_delay_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_status_wait_timeout_ms": {
            "default": "2s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum time to wait in metadata request for cluster health to be refreshed.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_status_wait_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_report_interval": {
            "default": "24h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cluster metrics reporter report interval.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metrics_reporter_report_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_tick_interval": {
            "default": "1min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cluster metrics reporter tick interval.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metrics_reporter_tick_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_url": {
            "default": "https://m.rp.vectorized.io/v2",
            "defined_in": "src/v/config/configuration.cc",
            "description": "URL of the cluster metrics reporter.",
            "name": "metrics_reporter_url",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "min_version": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "min_version",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "minimum_topic_replication": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum allowable replication factor for topics in this cluster. The set value must be positive, odd, and equal to or less than the number of available brokers. Changing this parameter only restricts newly-created topics. Redpanda returns an `INVALID_REPLICATION_FACTOR` error on any attempt to create a topic with a replication factor less than this property. If you change the `minimum_topic_replications` setting, the replication factor of existing topics remains unchanged. However, Redpanda will log a warning on start-up with a list of any topics that have fewer replicas than this minimum. For example, you might see a message such as `Topic X has a replication factor less than specified minimum: 1 < 3`.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "minimum_topic_replications",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "mode_mutability": {
            "default": true,
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "Enable modifications to the read-only `mode` of the Schema Registry.When set to `true`, the entire Schema Registry or its subjects can be switched to `READONLY` or `READWRITE`. This property is useful for preventing unwanted changes to the entire Schema Registry or specific subjects.",
            "name": "mode_mutability",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean"
        },
        "node_id": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "A number that uniquely identifies the broker within the cluster. If `null` (the default value), Redpanda automatically assigns an ID. If set, it must be non-negative value. The `node_id` property must not be changed after a broker joins the cluster.",
            "name": "node_id",
            "needs_restart": true,
            "nullable": true,
            "type": "#/definitions/model::node_id",
            "visibility": "user"
        },
        "node_id_overrides": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "List of node ID and UUID overrides to be applied at broker startup. Each entry includes the current UUID and desired ID and UUID. Each entry applies to a given node if and only if 'current' matches that node's current UUID.",
            "items": {
                "type": "config::node_id_override"
            },
            "name": "node_id_overrides",
            "needs_restart": true,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "node_isolation_heartbeat_timeout": {
            "default": 3000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "How long after the last heartbeat request a node will wait before considering itself to be isolated.",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "node_isolation_heartbeat_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "node_management_operation_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for executing node management operations.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "node_management_operation_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "node_status_interval": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval between two node status messages. Node status messages establish liveness status outside of the Raft protocol.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "node_status_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "node_status_reconnect_max_backoff_ms": {
            "default": "15s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum backoff (in milliseconds) to reconnect to an unresponsive peer during node status liveness checks.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "node_status_reconnect_max_backoff_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "oidc_clock_skew_tolerance": {
            "default": "std::chrono::seconds{} * 30",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The amount of time (in seconds) to allow for when validating the expiry claim in the token.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "oidc_clock_skew_tolerance",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "oidc_discovery_url": {
            "default": "https://auth.prd.cloud.redpanda.com/.well-known/openid-configuration",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The URL pointing to the well-known discovery endpoint for the OIDC provider.",
            "name": "oidc_discovery_url",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "oidc_keys_refresh_interval": {
            "default": "1h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The frequency of refreshing the JSON Web Keys (JWKS) used to validate access tokens.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "oidc_keys_refresh_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "oidc_principal_mapping": {
            "default": "$.sub",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rule for mapping JWT payload claim to a Redpanda user principal.",
            "name": "oidc_principal_mapping",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "oidc_token_audience": {
            "default": "redpanda",
            "defined_in": "src/v/config/configuration.cc",
            "description": "A string representing the intended recipient of the token.",
            "name": "oidc_token_audience",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "openssl_config_file": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Path to the configuration file used by OpenSSL to properly load the FIPS-compliant module.",
            "name": "openssl_config_file",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "openssl_module_directory": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Path to the directory that contains the OpenSSL FIPS-compliant module. The filename that Redpanda looks for is `fips.so`.",
            "name": "openssl_module_directory",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "pandaproxy_api": {
            "default": {
                "address": "net::unresolved_address(\"0.0.0.0\", 8082)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Rest API listen address and port",
            "name": "pandaproxy_api",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::rest_authn_endpoint"
        },
        "pandaproxy_api_tls": {
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "TLS configuration for Pandaproxy api.",
            "name": "pandaproxy_api_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::endpoint_tls_config"
        },
        "partition_autobalancing_concurrent_moves": {
            "default": 50,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions that can be reassigned at once.",
            "name": "partition_autobalancing_concurrent_moves",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "partition_autobalancing_max_disk_usage_percent": {
            "default": 80,
            "defined_in": "src/v/config/configuration.cc",
            "description": "When the disk usage of a node exceeds this threshold, it triggers Redpanda to move partitions off of the node. This property applies only when partition_autobalancing_mode is set to `continuous`.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "partition_autobalancing_max_disk_usage_percent",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "partition_autobalancing_min_size_threshold": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum size of partition that is going to be prioritized when rebalancing a cluster due to the disk size threshold being breached. This value is calculated automatically by default.",
            "name": "partition_autobalancing_min_size_threshold",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "partition_autobalancing_mode": {
            "default": "model::partition_autobalancing_mode::node_add",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Mode of partition balancing for a cluster. * `node_add`: partition balancing happens when a node is added. * `continuous`: partition balancing happens automatically to maintain optimal performance and availability, based on continuous monitoring for node changes (same as `node_add`) and also high disk usage. This option requires an Enterprise license, and it is customized by `partition_autobalancing_node_availability_timeout_sec` and `partition_autobalancing_max_disk_usage_percent` properties. * `off`: partition balancing is disabled. This option is not recommended for production clusters.",
            "name": "partition_autobalancing_mode",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::partition_autobalancing_mode",
            "visibility": "user"
        },
        "partition_autobalancing_movement_batch_size_bytes": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Total size of partitions that autobalancer is going to move in one batch (deprecated, use partition_autobalancing_concurrent_moves to limit the autobalancer concurrency)",
            "is_deprecated": true,
            "name": "partition_autobalancing_movement_batch_size_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "partition_autobalancing_node_availability_timeout_sec": {
            "default": "15min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "When a node is unavailable for at least this timeout duration, it triggers Redpanda to move partitions off of the node. This property applies only when `partition_autobalancing_mode` is set to `continuous`.      ",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "partition_autobalancing_node_availability_timeout_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "partition_autobalancing_tick_interval_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Partition autobalancer tick interval.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "partition_autobalancing_tick_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "partition_autobalancing_tick_moves_drop_threshold": {
            "default": 0.2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If the number of scheduled tick moves drops by this ratio, a new tick is scheduled immediately. Valid values are (0, 1]. For example, with a value of 0.2 and 100 scheduled moves in a tick, a new tick is scheduled when the in-progress moves are fewer than 80.",
            "name": "partition_autobalancing_tick_moves_drop_threshold",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "partition_autobalancing_topic_aware": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If `true`, Redpanda prioritizes balancing a topic\u2019s partition replica count evenly across all brokers while it\u2019s balancing the cluster\u2019s overall partition count. Because different topics in a cluster can have vastly different load profiles, this better distributes the workload of the most heavily-used topics evenly across brokers.",
            "name": "partition_autobalancing_topic_aware",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "partition_manager_shutdown_watchdog_timeout": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "A threshold value to detect partitions which might have been stuck while shutting down. After this threshold, a watchdog in partition manager will log information about partition shutdown not making progress.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "partition_manager_shutdown_watchdog_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "pp_sr_smp_max_non_local_requests": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Cross-core(Inter-shard communication) requests pending in HTTP Proxy and Schema Registry seastar::smp group. (For more details, see the `seastar::smp_service_group` documentation).",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "pp_sr_smp_max_non_local_requests",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "produce_ack_level": {
            "default": -1,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of acknowledgments the producer requires the leader to have received before considering a request complete.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "produce_ack_level",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "produce_batch_delay": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Delay (in milliseconds) to wait before sending batch.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "produce_batch_delay_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "produce_batch_record_count": {
            "default": 1000,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of records to batch before sending to broker.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "produce_batch_record_count",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "produce_batch_size_bytes": {
            "default": 1048576,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of bytes to batch before sending to broker.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "produce_batch_size_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "produce_compression_type": {
            "default": "none",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Enable or disable compression by the Kafka client. Specify `none` to disable compression or one of the supported types [gzip, snappy, lz4, zstd].",
            "name": "produce_compression_type",
            "needs_restart": true,
            "nullable": false,
            "type": "string"
        },
        "produce_shutdown_delay": {
            "default": "0ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Delay (in milliseconds) to allow for final flush of buffers before shutting down.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "produce_shutdown_delay_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "quota_manager_gc_sec": {
            "default": "std::chrono::milliseconds(30000)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Quota manager GC frequency in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "quota_manager_gc_sec",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rack": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "A label that identifies a failure zone. Apply the same label to all brokers in the same failure zone. When `enable_rack_awareness` is set to `true` at the cluster level, the system uses the rack labels to spread partition replicas across different failure zones.",
            "name": "rack",
            "needs_restart": true,
            "nullable": true,
            "type": "#/definitions/model::rack_id",
            "visibility": "user"
        },
        "raft_election_timeout_ms": {
            "default": "1'500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Election timeout expressed in milliseconds.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "election_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_enable_longest_log_detection": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables an additional step in leader election where a candidate is allowed to wait for all the replies from the broker it requested votes from. This may introduce a small delay when recovering from failure, but it prevents truncation if any of the replicas have more data than the majority.",
            "name": "raft_enable_longest_log_detection",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "raft_enable_lw_heartbeat": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables Raft optimization of heartbeats.",
            "name": "raft_enable_lw_heartbeat",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "raft_flush_timer_interval_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval of checking partition against the `raft_replica_max_pending_flush_bytes`, deprecated started 24.1, use raft_replica_max_flush_delay_ms instead ",
            "is_deprecated": true,
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_flush_timer_interval_ms",
            "needs_restart": true,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "raft_heartbeat_disconnect_failures": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The number of failed heartbeats after which an unresponsive TCP connection is forcibly closed. To disable forced disconnection, set to 0.",
            "name": "raft_heartbeat_disconnect_failures",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_heartbeat_interval_ms": {
            "default": "std::chrono::milliseconds(150)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of milliseconds for Raft leader heartbeats.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_heartbeat_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_heartbeat_timeout_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Raft heartbeat RPC (remote procedure call) timeout. Raft uses a heartbeat mechanism to maintain leadership authority and to trigger leader elections. The `raft_heartbeat_interval_ms` is a periodic heartbeat sent by the partition leader to all followers to declare its leadership. If a follower does not receive a heartbeat within the `raft_heartbeat_timeout_ms`, then it triggers an election to choose a new partition leader.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_heartbeat_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_io_timeout_ms": {
            "default": "10'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Raft I/O timeout.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_io_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_learner_recovery_rate": {
            "default": 104857600,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Raft learner recovery rate limit. Throttles the rate of data communicated to nodes (learners) that need to catch up to leaders. This rate limit is placed on a node sending data to a recovering node. Each sending node is limited to this rate. The recovering node accepts data as fast as possible according to the combined limits of all healthy nodes in the cluster. For example, if two nodes are sending data to the recovering node, and `raft_learner_recovery_rate` is 100 MB/sec, then the recovering node will recover at a rate of 200 MB/sec.",
            "name": "raft_learner_recovery_rate",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_max_concurrent_append_requests_per_follower": {
            "default": 16,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of concurrent append entry requests sent by the leader to one follower.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "raft_max_concurrent_append_requests_per_follower",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_max_recovery_memory": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum memory that can be used for reads in Raft recovery process by default 15% of total memory.",
            "name": "raft_max_recovery_memory",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_recovery_concurrency_per_shard": {
            "default": 64,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions that may simultaneously recover data to a particular shard. This number is limited to avoid overwhelming nodes when they come back online after an outage.",
            "name": "raft_recovery_concurrency_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_recovery_default_read_size": {
            "default": 524288,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Specifies the default size of a read issued during Raft follower recovery.",
            "name": "raft_recovery_default_read_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_recovery_throttle_disable_dynamic_mode": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disables cross shard sharing used to throttle recovery traffic. Should only be used to debug unexpected problems.",
            "name": "raft_recovery_throttle_disable_dynamic_mode",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "raft_replica_max_flush_delay_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum delay between two subsequent flushes. After this delay, the log is automatically force flushed.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_replica_max_flush_delay_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_replica_max_pending_flush_bytes": {
            "default": 262144,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes that are not flushed per partition. If the configured threshold is reached, the log is automatically flushed even if it has not been explicitly requested.",
            "name": "raft_replica_max_pending_flush_bytes",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_replicate_batch_window_size": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of requests cached for replication.",
            "name": "raft_replicate_batch_window_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_smp_max_non_local_requests": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Cross-core(Inter-shard communication) requests pending in Raft seastar::smp group. For details, refer to the `seastar::smp_service_group` documentation).",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "raft_smp_max_non_local_requests",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_timeout_now_timeout_ms": {
            "default": "1s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for Raft's timeout_now RPC. This RPC is used to force a follower to dispatch a round of votes immediately.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_timeout_now_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_transfer_leader_recovery_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Follower recovery timeout waiting period when transferring leadership.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_transfer_leader_recovery_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "readers_cache_eviction_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Duration after which inactive readers are evicted from cache.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "readers_cache_eviction_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "readers_cache_target_max_size": {
            "default": 200,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum desired number of readers cached per NTP. This a soft limit, meaning that a number of readers in cache may temporarily increase as cleanup is performed in the background.",
            "name": "readers_cache_target_max_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_batch_cache_min_free": {
            "default": 67108864,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum amount of free memory maintained by the batch cache background reclaimer.",
            "name": "reclaim_batch_cache_min_free",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_growth_window": {
            "default": "3'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Starting from the last point in time when memory was reclaimed from the batch cache, this is the duration during which the amount of memory to reclaim grows at a significant rate, based on heuristics about the amount of available memory.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "reclaim_growth_window",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_max_size": {
            "default": 4194304,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum batch cache reclaim size.",
            "name": "reclaim_max_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_min_size": {
            "default": 131072,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum batch cache reclaim size.",
            "name": "reclaim_min_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_stable_window": {
            "default": "10'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "If the duration since the last time memory was reclaimed is longer than the amount of time specified in this property, the memory usage of the batch cache is considered stable, so only the minimum size (`reclaim_min_size`) is set to be reclaimed.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "reclaim_stable_window",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "recovery_append_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for append entry requests issued while updating a stale follower.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "recovery_append_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "recovery_mode_enabled": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "If `true`, start Redpanda in recovery mode, where user partitions are not loaded and only administrative operations are allowed.",
            "name": "recovery_mode_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "release_cache_on_segment_roll": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Flag for specifying whether or not to release cache when a full segment is rolled.",
            "name": "release_cache_on_segment_roll",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "replicate_append_timeout_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for append entry requests issued while replicating entries.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "replicate_append_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "retention_bytes": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default maximum number of bytes per partition on disk before triggering deletion of the oldest messages. If `null` (the default value), no limit is applied. The topic property `retention.bytes` overrides the value of `retention_bytes` at the topic level.",
            "name": "retention_bytes",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_strict": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Flag to allow Tiered Storage topics to expand to consumable retention policy limits. When this flag is enabled, non-local retention settings are used, and local retention settings are used to inform data removal policies in low-disk space scenarios.",
            "name": "retention_local_strict",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "retention_local_strict_override": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Trim log data when a cloud topic reaches its local retention limit. When this option is disabled Redpanda will allow partitions to grow past the local retention limit, and will be trimmed automatically as storage reaches the configured target size.",
            "name": "retention_local_strict_override",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "retention_local_target_bytes_default": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Local retention size target for partitions of topics with object storage write enabled. If `null`, the property is disabled. This property can be overridden on a per-topic basis by setting `retention.local.target.bytes` in each topic enabled for Tiered Storage. Both `retention_local_target_bytes_default` and `retention_local_target_ms_default` can be set. The limit that is reached earlier is applied.",
            "name": "retention_local_target_bytes_default",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_target_capacity_bytes": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The target capacity (in bytes) that log storage will try to use before additional retention rules take over to trim data to meet the target. When no target is specified, storage usage is unbounded. Redpanda Data recommends setting only one of `retention_local_target_capacity_bytes` or `retention_local_target_capacity_percent`. If both are set, the minimum of the two is used as the effective target capacity.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "retention_local_target_capacity_bytes",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_target_capacity_percent": {
            "default": 80.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The target capacity in percent of unreserved space (`disk_reservation_percent`) that log storage will try to use before additional retention rules will take over to trim data in order to meet the target. When no target is specified storage usage is unbounded. Redpanda Data recommends setting only one of `retention_local_target_capacity_bytes` or `retention_local_target_capacity_percent`. If both are set, the minimum of the two is used as the effective target capacity.",
            "name": "retention_local_target_capacity_percent",
            "needs_restart": false,
            "nullable": true,
            "type": "number",
            "visibility": "user"
        },
        "retention_local_target_ms_default": {
            "default": "24h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Local retention time target for partitions of topics with object storage write enabled. This property can be overridden on a per-topic basis by setting `retention.local.target.ms` in each topic enabled for Tiered Storage. Both `retention_local_target_bytes_default` and `retention_local_target_ms_default` can be set. The limit that is reached first is applied.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "retention_local_target_ms_default",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_trim_interval": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The period during which disk usage is checked for disk pressure, and data is optionally trimmed to meet the target.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "retention_local_trim_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "retention_local_trim_overage_coeff": {
            "default": 2.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The space management control loop reclaims the overage multiplied by this this coefficient to compensate for data that is written during the idle period between control loop invocations.",
            "name": "retention_local_trim_overage_coeff",
            "needs_restart": false,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "retries": {
            "default": 5,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of times to retry a request to a broker.",
            "name": "retries",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "retry_base_backoff": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Delay (in milliseconds) for initial retry backoff.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "retry_base_backoff_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "rm_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Resource manager's synchronization timeout. Specifies the maximum time for this node to wait for the internal state machine to catch up with all events written by previous leaders before rejecting a request.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "rm_sync_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "rm_violation_recovery_policy": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "rm_violation_recovery_policy",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "rpc_client_connections_per_peer": {
            "default": 32,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum number of connections a broker will open to each of its peers.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_client_connections_per_peer",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "rpc_server": {
            "default": "net::unresolved_address(\"127.0.0.1\", 33145)",
            "defined_in": "src/v/config/node_config.cc",
            "description": "IP address and port for the Remote Procedure Call (RPC) server.",
            "name": "rpc_server",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/net::unresolved_address",
            "visibility": "user"
        },
        "rpc_server_compress_replies": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable compression for internal RPC (remote procedure call) server replies.",
            "name": "rpc_server_compress_replies",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "rpc_server_listen_backlog": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum TCP connection queue length for Kafka server and internal RPC server. If `null` (the default value), no queue length is set.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_listen_backlog",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "rpc_server_tcp_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Internal RPC TCP receive buffer size. If `null` (the default value), no buffer size is set by Redpanda.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_tcp_recv_buf",
            "needs_restart": true,
            "nullable": true,
            "type": "integer"
        },
        "rpc_server_tcp_send_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Internal RPC TCP send buffer size. If `null` (the default value), then no buffer size is set by Redpanda.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_tcp_send_buf",
            "needs_restart": true,
            "nullable": true,
            "type": "integer"
        },
        "rpc_server_tls": {
            "default": "tls_config()",
            "defined_in": "src/v/config/node_config.cc",
            "description": "TLS configuration for the RPC server.",
            "name": "rpc_server_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/tls_config",
            "visibility": "user"
        },
        "rpk_path": {
            "default": "/usr/bin/rpk",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Path to RPK binary",
            "name": "rpk_path",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "rps_limit_acls_and_users_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller ACLs and user's operations.",
            "name": "rps_limit_acls_and_users_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_configuration_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller configuration operations.",
            "name": "rps_limit_configuration_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_move_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller move operations.",
            "name": "rps_limit_move_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_node_management_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller node management operations.",
            "name": "rps_limit_node_management_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_topic_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller topic operations.",
            "name": "rps_limit_topic_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "sampled_memory_profile": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "When `true`, memory allocations are sampled and tracked. A sampled live set of allocations can then be retrieved from the Admin API. Additionally, Redpanda will periodically log the top-n allocation sites.",
            "name": "memory_enable_memory_sampling",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "sasl_kerberos_config": {
            "default": "/etc/krb5.conf",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The location of the Kerberos `krb5.conf` file for Redpanda.",
            "name": "sasl_kerberos_config",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "sasl_kerberos_keytab": {
            "default": "/var/lib/redpanda/redpanda.keytab",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The location of the Kerberos keytab file for Redpanda.",
            "name": "sasl_kerberos_keytab",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "sasl_kerberos_principal": {
            "default": "redpanda",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The primary of the Kerberos Service Principal Name (SPN) for Redpanda.",
            "name": "sasl_kerberos_principal",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "sasl_kerberos_principal_mapping": {
            "default": [
                "DEFAULT"
            ],
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rules for mapping Kerberos principal names to Redpanda user principals.",
            "items": {
                "type": "string"
            },
            "name": "sasl_kerberos_principal_mapping",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "sasl_mechanism": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "The SASL mechanism to use when connecting.",
            "name": "sasl_mechanism",
            "needs_restart": true,
            "nullable": false,
            "type": "string"
        },
        "sasl_mechanisms": {
            "default": [
                "SCRAM"
            ],
            "defined_in": "src/v/config/configuration.cc",
            "description": "A list of supported SASL mechanisms. Accepted values: `SCRAM`, `GSSAPI`, `OAUTHBEARER`.",
            "items": {
                "type": "string"
            },
            "name": "sasl_mechanisms",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "schema_registry_api": {
            "default": {
                "address": "net::unresolved_address(\"0.0.0.0\", 8081)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "Schema Registry API listener address and port",
            "name": "schema_registry_api",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::rest_authn_endpoint"
        },
        "schema_registry_api_tls": {
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "TLS configuration for Schema Registry API.",
            "name": "schema_registry_api_tls",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/config::endpoint_tls_config"
        },
        "schema_registry_normalize_on_startup": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Normalize schemas as they are read from the topic on startup.",
            "name": "schema_registry_normalize_on_startup",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "schema_registry_replication_factor": {
            "default": null,
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "Replication factor for internal `_schemas` topic.  If unset, defaults to `default_topic_replication`.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "schema_registry_replication_factor",
            "needs_restart": true,
            "nullable": true,
            "type": "integer"
        },
        "scram_password": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Password to use for SCRAM authentication mechanisms.",
            "is_secret": true,
            "name": "scram_password",
            "needs_restart": true,
            "nullable": false,
            "type": "string"
        },
        "scram_username": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Username to use for SCRAM authentication mechanisms.",
            "name": "scram_username",
            "needs_restart": true,
            "nullable": false,
            "type": "string"
        },
        "seed_server_meta_topic_partitions": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "seed_server_meta_topic_partitions",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "seed_servers": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "List of the seed servers used to join current cluster. If the `seed_servers` list is empty the node will be a cluster root and it will form a new cluster. When `empty_seed_starts_cluster` is `true`, Redpanda enables one broker with an empty `seed_servers` list to initiate a new cluster. The broker with an empty `seed_servers` becomes the cluster root, to which other brokers must connect to join the cluster.  Brokers looking to join the cluster should have their `seed_servers` populated with the cluster root's address, facilitating their connection to the cluster. Only one broker, the designated cluster root, should have an empty `seed_servers` list during the initial cluster bootstrapping. This ensures a single initiation point for cluster formation. When `empty_seed_starts_cluster` is `false`, Redpanda requires all brokers to start with a known set of brokers listed in `seed_servers`. The `seed_servers` list must not be empty and should be identical across these initial seed brokers, containing the addresses of all seed brokers. Brokers not included in the `seed_servers` list use it to discover and join the cluster, allowing for expansion beyond the foundational members. The `seed_servers` list must be consistent across all seed brokers to prevent cluster fragmentation and ensure stable cluster formation.",
            "items": {
                "type": "#/definitions/seed_server"
            },
            "name": "seed_servers",
            "needs_restart": true,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "segment_appender_flush_timeout_ms": {
            "default": "std::chrono::milliseconds(1s)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum delay until buffered data is written.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "segment_appender_flush_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "segment_fallocation_step": {
            "default": 33554432,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size for segments fallocation.",
            "name": "segment_fallocation_step",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "seq_table_min_size": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "seq_table_min_size",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "space_management_enable": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Option to explicitly disable automatic disk space management. If this property was explicitly disabled while using v23.2, it will remain disabled following an upgrade.",
            "name": "space_management_enable",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "space_management_enable_override": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable automatic space management. This option is ignored and deprecated in versions >= v23.3.",
            "name": "space_management_enable_override",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "space_management_max_log_concurrency": {
            "default": 20,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum parallel logs inspected during space management process.",
            "maximum": 65535,
            "minimum": 0,
            "name": "space_management_max_log_concurrency",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "space_management_max_segment_concurrency": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum parallel segments inspected during space management process.",
            "maximum": 65535,
            "minimum": 0,
            "name": "space_management_max_segment_concurrency",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_compaction_index_memory": {
            "default": 134217728,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes that may be used on each shard by compaction index writers.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_compaction_index_memory",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_compaction_key_map_memory": {
            "default": 134217728,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes that may be used on each shard by compaction key-offset maps. Only applies when `log_compaction_use_sliding_window` is set to `true`.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_compaction_key_map_memory",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_compaction_key_map_memory_limit_percent": {
            "default": 12.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Limit on `storage_compaction_key_map_memory`, expressed as a percentage of memory per shard, that bounds the amount of memory used by compaction key-offset maps. Memory per shard is computed after `data_transforms_per_core_memory_reservation`, and only applies when `log_compaction_use_sliding_window` is set to `true`.",
            "name": "storage_compaction_key_map_memory_limit_percent",
            "needs_restart": true,
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "storage_failure_injection_config_path": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Path to the configuration file used for low level storage failure injection.",
            "name": "storage_failure_injection_config_path",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "tunable"
        },
        "storage_failure_injection_enabled": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "If `true`, inject low level storage failures on the write path. Do _not_ use for production instances.",
            "name": "storage_failure_injection_enabled",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "storage_ignore_cstore_hints": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "When set, cstore hints are ignored and not used for data access (but are otherwise generated).",
            "name": "storage_ignore_cstore_hints",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "storage_ignore_timestamps_in_future_sec": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum number of seconds that a record's timestamp can be ahead of a Redpanda broker's clock and still be used when deciding whether to clean up the record for data retention. This property makes possible the timely cleanup of records from clients with clocks that are drastically unsynchronized relative to Redpanda. When determining whether to clean up a record with timestamp more than `storage_ignore_timestamps_in_future_sec` seconds ahead of the broker, Redpanda ignores the record's timestamp and instead uses a valid timestamp of another record in the same segment, or (if another record's valid timestamp is unavailable) the timestamp of when the segment file was last modified (mtime). By default, `storage_ignore_timestamps_in_future_sec` is disabled (null). To figure out whether to set `storage_ignore_timestamps_in_future_sec` for your system: . Look for logs with segments that are unexpectedly large and not being cleaned up. . In the logs, search for records with unsynchronized timestamps that are further into the future than tolerable by your data retention and storage settings. For example, timestamps 60 seconds or more into the future can be considered to be too unsynchronized. . If you find unsynchronized timestamps throughout your logs, determine the number of seconds that the timestamps are ahead of their actual time, and set `storage_ignore_timestamps_in_future_sec` to that value so data retention can proceed. . If you only find unsynchronized timestamps that are the result of transient behavior, you can disable `storage_ignore_timestamps_in_future_sec`.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "storage_ignore_timestamps_in_future_sec",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_max_concurrent_replay": {
            "default": 1024,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of partitions' logs that will be replayed concurrently at startup, or flushed concurrently on shutdown.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_max_concurrent_replay",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_min_free_bytes": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimum bytes free space before rejecting producers.",
            "name": "storage_min_free_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_read_buffer_size": {
            "default": 131072,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of each read buffer (one per in-flight read, per log segment).",
            "name": "storage_read_buffer_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_read_readahead_count": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "How many additional reads to issue ahead of current read location.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "storage_read_readahead_count",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_reserve_min_segments": {
            "default": 2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The number of segments per partition that the system will attempt to reserve disk capacity for. For example, if the maximum segment size is configured to be 100 MB, and the value of this option is 2, then in a system with 10 partitions Redpanda will attempt to reserve at least 2 GB of disk space.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "storage_reserve_min_segments",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_space_alert_free_threshold_bytes": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimum bytes free space before setting storage space alert.",
            "name": "storage_space_alert_free_threshold_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_space_alert_free_threshold_percent": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimum percent free space before setting storage space alert.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "storage_space_alert_free_threshold_percent",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_strict_data_init": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Requires that an empty file named `.redpanda_data_dir` be present in the broker configuration `data_directory`. If set to `true`, Redpanda will refuse to start if the file is not found in the data directory.",
            "name": "storage_strict_data_init",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "storage_target_replay_bytes": {
            "default": 10737418240,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target bytes to replay from disk on startup after clean shutdown: controls frequency of snapshots and checkpoints.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_target_replay_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "superusers": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of superuser usernames.",
            "name": "superusers",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "target_fetch_quota_byte_rate": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target fetch size quota byte rate (bytes per second) - disabled default",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "target_fetch_quota_byte_rate",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "target_quota_byte_rate": {
            "default": "target_produce_quota_byte_rate_default",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target request size quota byte rate (bytes per second)",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "target_quota_byte_rate",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tls_min_version": {
            "default": "tls_version::v1_2",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum TLS version that Redpanda clusters support. This property prevents client applications from negotiating a downgrade to the TLS version when they make a connection to a Redpanda cluster.",
            "name": "tls_min_version",
            "needs_restart": true,
            "nullable": false,
            "type": "tls_version",
            "visibility": "user"
        },
        "tm_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Transaction manager's synchronization timeout. Maximum time to wait for internal state machine to catch up before rejecting a request.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "tm_sync_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tm_violation_recovery_policy": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "tm_violation_recovery_policy",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "topic_fds_per_partition": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Required file handles per partition when creating topics.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "topic_fds_per_partition",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_memory_per_partition": {
            "default": 4194304,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Required memory per partition when creating topics.",
            "name": "topic_memory_per_partition",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_partitions_per_shard": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of partitions which may be allocated to one shard (CPU core).",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "topic_partitions_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_partitions_reserve_shard0": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Reserved partition slots on shard (CPU core) 0 on each node.  If this is >= topic_partitions_per_shard, no data partitions will be scheduled on shard 0",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "topic_partitions_reserve_shard0",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transaction_coordinator_cleanup_policy": {
            "default": "model::cleanup_policy_bitflags::deletion",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cleanup policy for a transaction coordinator topic. Accepted Values: `compact`, `delete`, `[\"compact\",\"delete\"]`, `none`",
            "name": "transaction_coordinator_cleanup_policy",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::cleanup_policy_bitflags",
            "visibility": "user"
        },
        "transaction_coordinator_delete_retention_ms": {
            "default": "10080min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delete segments older than this age. To ensure transaction state is retained as long as the longest-running transaction, make sure this is no less than `transactional_id_expiration_ms`.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "transaction_coordinator_delete_retention_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "transaction_coordinator_log_segment_size": {
            "default": 1073741824,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The size (in bytes) each log segment should be.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "transaction_coordinator_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transaction_coordinator_partitions": {
            "default": 50,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions for transactions coordinator.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "transaction_coordinator_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transaction_coordinator_replication": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "transaction_coordinator_replication",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "transaction_max_timeout_ms": {
            "default": "15min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum allowed timeout for transactions. If a client-requested transaction timeout exceeds this configuration, the broker returns an error during transactional producer initialization. This guardrail prevents hanging transactions from blocking consumer progress.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "transaction_max_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transactional_id_expiration_ms": {
            "default": "10080min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Expiration time of producer IDs. Measured starting from the time of the last write until now for a given ID.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "transactional_id_expiration_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tx_log_stats_interval_s": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often to log per partition tx stats, works only with debug logging enabled.",
            "is_deprecated": true,
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "tx_log_stats_interval_s",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "tx_registry_log_capacity": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "tx_registry_log_capacity",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "tx_registry_sync_timeout_ms": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "tx_registry_sync_timeout_ms",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "tx_timeout_delay_ms": {
            "default": "1000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delay before scheduling the next check for timed out transactions.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "tx_timeout_delay_ms",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "unsafe_enable_consumer_offsets_delete_retention": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables delete retention of consumer offsets topic. This is an internal-only configuration and should be enabled only after consulting with Redpanda support.",
            "name": "unsafe_enable_consumer_offsets_delete_retention",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "upgrade_override_checks": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Whether to violate safety checks when starting a Redpanda version newer than the cluster's consensus version.",
            "name": "upgrade_override_checks",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "usage_disk_persistance_interval_sec": {
            "default": "std::chrono::seconds(60 * 5)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The interval in which all usage stats are written to disk.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "usage_disk_persistance_interval_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "usage_num_windows": {
            "default": 24,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The number of windows to persist in memory and disk.",
            "name": "usage_num_windows",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "usage_window_width_interval_sec": {
            "default": "std::chrono::seconds(3600)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The width of a usage window, tracking cloud and kafka ingress/egress traffic each interval.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "usage_window_width_interval_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "use_fetch_scheduler_group": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Use a separate scheduler group for fetch processing.",
            "name": "use_fetch_scheduler_group",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "use_scheduling_groups": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "use_scheduling_groups",
            "needs_restart": true,
            "nullable": false,
            "type": null
        },
        "verbose_logging_timeout_sec_max": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Maximum duration in seconds for verbose (`TRACE` or `DEBUG`) logging. Values configured above this will be clamped. If null (the default) there is no limit. Can be overridden in the Admin API on a per-request basis.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "verbose_logging_timeout_sec_max",
            "needs_restart": true,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "virtual_cluster_min_producer_ids": {
            "default": "std::numeric_limits<uint64_t>::max()",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum number of active producers per virtual cluster.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "virtual_cluster_min_producer_ids",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "wait_for_leader_timeout_ms": {
            "default": "5'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout to wait for leadership in metadata cache.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "wait_for_leader_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "write_caching_default": {
            "default": "model::write_caching_mode::default_false",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The default write caching mode to apply to user topics. Write caching acknowledges a message as soon as it is received and acknowledged on a majority of brokers, without waiting for it to be written to disk. With `acks=all`, this provides lower latency while still ensuring that a majority of brokers acknowledge the write. Fsyncs follow `raft_replica_max_pending_flush_bytes` and `raft_replica_max_flush_delay_ms`, whichever is reached first. The `write_caching_default` cluster property can be overridden with the `write.caching` topic property. Accepted values: * `true` * `false` * `disabled`: This takes precedence over topic overrides and disables write caching for the entire cluster.",
            "name": "write_caching_default",
            "needs_restart": false,
            "nullable": false,
            "type": "model::write_caching_mode",
            "visibility": "user"
        },
        "zstd_decompress_workspace_bytes": {
            "default": 8388608,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of the zstd decompression workspace.",
            "name": "zstd_decompress_workspace_bytes",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        }
    }
}