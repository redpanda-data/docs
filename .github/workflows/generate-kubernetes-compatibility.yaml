name: Generate Kubernetes Compatibility Matrix

on:
  repository_dispatch: # Allows other repositories to trigger this workflow
    types: [generate-compatibility-matrix]
  workflow_dispatch:
    inputs:
      min_rp_version:
        description: 'Minimum Supported Redpanda Version'
        required: true
jobs:
  generate-matrix:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Checkout this repository
        uses: actions/checkout@v3
        with:
          ref: main
          repository: redpanda-data/docs
          path: redpanda-docs
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}

      - name: Install dependencies
        run: cd scripts/generate-k8s-compatibility-matrix && npm install

      - name: Run script to generate compatibility matrix
        env:
          ARTIFACT_HUB_API_KEY_ID: ${{ secrets.ARTIFACT_HUB_API_KEY_ID }}
          ARTIFACT_HUB_API_KEY_SECRET: ${{ secrets.ARTIFACT_HUB_API_KEY_SECRET }}
        run: |
          node scripts/generate-k8s-compatibility-matrix/generate-rp-matrix.js ${{ github.event.inputs.min_rp_version }} redpanda > ./redpanda-docs/modules/upgrade/partials/k-redpanda-compatibility-matrix.adoc
          node scripts/generate-k8s-compatibility-matrix/generate-rp-matrix.js ${{ github.event.inputs.min_rp_version }} console > ./redpanda-docs/modules/upgrade/partials/k-redpanda-console-chart-dependencies.adoc
          node scripts/generate-k8s-compatibility-matrix/generate-rp-matrix.js ${{ github.event.inputs.min_rp_version }} operator > ./redpanda-docs/modules/upgrade/partials/k-operator-compatibility-matrix.adoc

      # Check for any changes made in the documentation.
      - name: Check if changes were made
        id: check_changes
        run: |
          cd ./redpanda-docs
          changes=$(git status --porcelain)
          if [ -z "$changes" ]; then
            echo "has_changes=false" >> $GITHUB_ENV
          else
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      # If changes were detected, commit those changes.
      - name: Commit changes
        if: env.has_changes == 'true'
        run: |
          cd ./redpanda-docs
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "auto-docs: Update K8s compatibility matrix"
          git push origin main
        env:
          ACCESS_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
