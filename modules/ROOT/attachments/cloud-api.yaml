components:
  schemas:
    ACL.Operation:
      description: The operation that is allowed or denied (e.g. READ).
      enum:
        - OPERATION_ANY
        - OPERATION_ALL
        - OPERATION_READ
        - OPERATION_WRITE
        - OPERATION_CREATE
        - OPERATION_DELETE
        - OPERATION_ALTER
        - OPERATION_DESCRIBE
        - OPERATION_CLUSTER_ACTION
        - OPERATION_DESCRIBE_CONFIGS
        - OPERATION_ALTER_CONFIGS
        - OPERATION_IDEMPOTENT_WRITE
        - OPERATION_CREATE_TOKENS
        - OPERATION_DESCRIBE_TOKENS
      type: string
    AWS.VPCEndpointConnection:
      properties:
        connection_id:
          description: The connection ID of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: vpce-con-00b9cba3360fe4aec
          type: string
        created_at:
          description: Timestamp when was an VPC endpoint created.
          format: date-time
          type: string
        dns_entries:
          description: The list of DNS entries associated to VPC endpoint.
          items:
            $ref: '#/components/schemas/AWS.VPCEndpointConnection.DNSEntry'
          type: array
        id:
          description: The ID of VPC endpoint.
          type: string
        load_balancer_arns:
          description: The list of load balancer ARNs.
          items:
            type: string
          type: array
        owner:
          description: The owner of VPC endpoint.
          type: string
        state:
          description: The state of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: pendingAcceptance | pending | available | deleting | deleted | rejected | failed
          type: string
      type: object
    AWS.VPCEndpointConnection.DNSEntry:
      properties:
        dns_name:
          description: The connection ID of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: vpce-0751b7ad8a51777f2-1hpievf5.vpce-svc-0d489fa89f24e3802.us-east-2.vpce.amazonaws.com
          type: string
        hosted_zone_id:
          description: The ID of Route53 DNS zone.
          type: string
      type: object
    AWSPrivateLinkSpec:
      properties:
        allowed_principals:
          description: The ARN of the principals that can access Redpanda AWS PrivateLink Endpoint Service. To grant permissions to all principals, use an asterisk (*).
          example: arn:aws:iam::account-number-without-hyphens:user/username or arn:aws:iam::account-number-without-hyphens:root
          items:
            type: string
          type: array
        enabled:
          description: Whether Redpanda AWS PrivateLink Endpoint Service is enabled.
          type: boolean
      type: object
    AWSPrivateLinkStatus:
      properties:
        allowed_principals:
          description: The ARN of the principals that can access the Redpanda AWS PrivateLink Endpoint Service. To grant permissions to all principals, use an asterisk (*).
          example: arn:aws:iam::account-number-without-hyphens:user/username or arn:aws:iam::account-number-without-hyphens:root
          items:
            type: string
          type: array
        enabled:
          description: Whether Redpanda AWS Private Link Endpoint Service is enabled.
          type: boolean
        status:
          $ref: '#/components/schemas/AWSPrivateLinkStatus.Status'
      type: object
    AWSPrivateLinkStatus.Status:
      properties:
        created_at:
          description: Redpanda AWS PrivateLink Endpoint Service creation timestamp.
          format: date-time
          type: string
        deleted_at:
          description: Redpanda AWS PrivateLink Service deletion timestamp.
          format: date-time
          type: string
        kafka_api_node_base_port:
          description: Kafka API node service base port. The port for node `i` (0 .. node_count-1) is kafka_api_node_base_port + `i`.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: Kafka API seed service port.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: HTTP Proxy node service base port. The port for node `i` (0 .. node_count-1) is redpanda_proxy_node_base_port + i.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: HTTP Proxy seed service port.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: Schema Registry seed service port.
          format: int32
          type: integer
        service_id:
          description: ID of Redpanda AWS PrivateLink Endpoint Service.
          example: vpce-svc-05fff2117d648da35
          type: string
        service_name:
          description: Name of Redpanda AWS PrivateLink Endpoint Service.
          example: com.amazonaws.vpce.us-west-2.vpce-svc-05fff2117d648da35
          type: string
        service_state:
          description: State of Redpanda AWS PrivateLink Endpoint Service.
          example: Pending | Available | Deleting | Deleted | Failed
          type: string
        vpc_endpoint_connections:
          description: List of VPC endpoints with established connections to Redpanda AWS PrivateLink Endpoint Service.
          items:
            $ref: '#/components/schemas/Status.VPCEndpointConnection'
          type: array
      type: object
    BadRequest:
      description: |-
        Describes violations in a client request. This error type focuses on the
        syntactic aspects of the request.
      properties:
        field_violations:
          description: Describes all violations in a client request.
          items:
            $ref: '#/components/schemas/FieldViolation'
          type: array
      title: BadRequest
      type: object
    Cluster.CustomerManagedResources:
      description: The cloud resources created by user.
      properties:
        aws:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS'
        gcp:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP'
      type: object
    Cluster.CustomerManagedResources.AWS:
      description: AWS resources created by user.
      properties:
        agent_instance_profile:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.InstanceProfile'
        connectors_node_group_instance_profile:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.InstanceProfile'
        connectors_node_group_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        connectors_secrets_manager_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        console_secrets_manager_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        k8s_cluster_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        redpanda_cloud_storage_manager_policy:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Policy'
        redpanda_cloud_storage_manager_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        redpanda_node_group_instance_profile:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.InstanceProfile'
        redpanda_node_group_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
        utility_node_group_instance_profile:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.InstanceProfile'
        utility_node_group_role:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.AWS.Role'
      type: object
    Cluster.CustomerManagedResources.AWS.InstanceProfile:
      description: Instance Profile identifies AWS instance profile.
      properties:
        arn:
          description: The arn of AWS instance profile.
          type: string
      required:
        - arn
      title: Instance Profile
      type: object
    Cluster.CustomerManagedResources.AWS.Policy:
      description: Policy identifies AWS policy.
      properties:
        arn:
          description: The arn of AWS policy.
          type: string
      required:
        - arn
      title: Policy
      type: object
    Cluster.CustomerManagedResources.AWS.Role:
      description: Role identifies AWS role.
      properties:
        arn:
          description: The arn of AWS role.
          type: string
      required:
        - arn
      title: Role
      type: object
    Cluster.CustomerManagedResources.GCP:
      description: GCP resources managed by user and required for deploying Redpanda cluster.
      properties:
        agent_service_account:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.ServiceAccount'
        connector_service_account:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.ServiceAccount'
        console_service_account:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.ServiceAccount'
        gke_service_account:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.ServiceAccount'
        psc_nat_subnet_name:
          description: NAT subnet name if GCP Private Service Connect (a.k.a Private Link) is enabled.
          type: string
        redpanda_cluster_service_account:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.ServiceAccount'
        subnet:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.Subnet'
        tiered_storage_bucket:
          $ref: '#/components/schemas/v1beta1.CustomerManagedGoogleCloudStorageBucket'
      required:
        - subnet
        - agent_service_account
        - console_service_account
        - connector_service_account
        - redpanda_cluster_service_account
        - gke_service_account
        - tiered_storage_bucket
      title: GCP Customer Managed Resoures
      type: object
    Cluster.CustomerManagedResources.GCP.ServiceAccount:
      description: Service Account identifies GCP service account.
      properties:
        email:
          description: The email of GCP service account.
          type: string
      required:
        - email
      title: Service Account
      type: object
    Cluster.CustomerManagedResources.GCP.Subnet:
      description: Resource describing GCP subnet.
      properties:
        k8s_master_ipv4_range:
          description: Kubernetes Master IPv4 range, e.g. 10.0.0.0/24.
          type: string
        name:
          title: Subnet name
          type: string
        secondary_ipv4_range_pods:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range'
        secondary_ipv4_range_services:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range'
      required:
        - name
        - secondary_ipv4_range_pods
        - secondary_ipv4_range_services
        - k8s_master_ipv4_range
      title: Subnet
      type: object
    Cluster.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range:
      description: SecondaryIPv4Range defines IPv4 range.
      properties:
        name:
          type: string
      type: object
    ClusterCreate:
      description: Resource describing a Create Cluster.
      properties:
        aws_private_link:
          $ref: '#/components/schemas/AWSPrivateLinkSpec'
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        cloud_provider_tags:
          additionalProperties:
            type: string
          description: |-
            Tags placed on cloud resources.
            A tag is a key value pair.
            If the cloud provider is GCP and the key of a tag has the prefix "gcp.network-tag.",
            the tag is a network tag that will be added to the Redpanda cluster GKE nodes.
            Otherwise, the tag is a normal provider tag or label.
            For example, if the key of a tag is "gcp.network-tag.network-tag-foo",
            the GCP network tag named "network-tag-foo" will be added to the Redpanda cluster GKE nodes.
            Note: If a tag is GCP network tag, its value will be ignored.
            See the details on network tags at https://cloud.google.com/vpc/docs/add-remove-network-tags.
          type: object
        connection_type:
          $ref: '#/components/schemas/v1beta2.Cluster.ConnectionType'
        customer_managed_resources:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources'
        gcp_private_service_connect:
          $ref: '#/components/schemas/GCPPrivateServiceConnectSpec'
        http_proxy:
          $ref: '#/components/schemas/HTTPProxySpec'
        kafka_api:
          $ref: '#/components/schemas/KafkaAPISpec'
        name:
          description: Unique name of the cluster.
          example: development-cluster
          type: string
        network_id:
          description: Id of the network where the cluster will be placed.
          example: cjcuq79c4vs94fcufc2g
          type: string
        read_replica_cluster_ids:
          description: IDs of clusters that can create read-only topics from this cluster.
          items:
            type: string
          type: array
        redpanda_version:
          description: Cluster's Redpanda version. Only `major.minor` semver is supported, e.g. `24.1`.
          nullable: true
          type: string
        region:
          description: Cloud provider region where the cluster will be provisioned.
          type: string
        resource_group_id:
          description: Resource group ID of the cluster
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistrySpec'
        throughput_tier:
          description: Throughput tier of the cluster. See [Redpanda Cloud cluster tiers](https://docs.redpanda.com/current/deploy/deployment-option/cloud/cloud-overview/#cluster-tiers) for more information.
          type: string
        type:
          $ref: '#/components/schemas/v1beta2.Cluster.Type'
        zones:
          description: |-
            Cloud provider zones. Must be valid zones within the selected region.
            If multiple zones are used, the cluster is a multi-AZ cluster.
          items:
            type: string
          type: array
      required:
        - name
        - resource_group_id
        - throughput_tier
        - type
        - network_id
        - cloud_provider
        - region
        - zones
      title: ClusterCreate
      type: object
    ClusterUpdate:
      description: Resource describing a Create Cluster.
      properties:
        aws_private_link:
          $ref: '#/components/schemas/AWSPrivateLinkSpec'
        customer_managed_resources:
          $ref: '#/components/schemas/CustomerManagedResourcesUpdate'
        gcp_private_service_connect:
          $ref: '#/components/schemas/GCPPrivateServiceConnectSpec'
        http_proxy:
          $ref: '#/components/schemas/HTTPProxySpec'
        id:
          description: ID of the cluster.
          type: string
        kafka_api:
          $ref: '#/components/schemas/KafkaAPISpec'
        name:
          description: Unique name of the cluster.
          example: development-cluster
          type: string
        read_replica_cluster_ids:
          description: IDs of clusters which may create read-only topics from this cluster.
          items:
            type: string
          type: array
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistrySpec'
      required:
        - id
      title: ClusterUpdate
      type: object
    Config:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    ConfigAlterOperation:
      enum:
        - CONFIG_ALTER_OPERATION_SET
        - CONFIG_ALTER_OPERATION_DELETE
        - CONFIG_ALTER_OPERATION_APPEND
        - CONFIG_ALTER_OPERATION_SUBTRACT
      type: string
    ConfigSource:
      enum:
        - CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG
        - CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG
        - CONFIG_SOURCE_STATIC_BROKER_CONFIG
        - CONFIG_SOURCE_DEFAULT_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_LOGGER_CONFIG
      type: string
    ConfigSynonym:
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        value:
          nullable: true
          type: string
      type: object
    ConfigType:
      enum:
        - CONFIG_TYPE_BOOLEAN
        - CONFIG_TYPE_STRING
        - CONFIG_TYPE_INT
        - CONFIG_TYPE_SHORT
        - CONFIG_TYPE_LONG
        - CONFIG_TYPE_DOUBLE
        - CONFIG_TYPE_LIST
        - CONFIG_TYPE_CLASS
        - CONFIG_TYPE_PASSWORD
      type: string
    Configuration:
      properties:
        config_synonyms:
          description: |-
            If no config value is set at the topic level, it will inherit the value
            set at the broker or cluster level. `name` is the corresponding config
            key whose value is inherited. `source` indicates whether the inherited
            config is default, broker, etc.
          items:
            $ref: '#/components/schemas/ConfigSynonym'
          type: array
        documentation:
          description: Config documentation.
          nullable: true
          type: string
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        read_only:
          description: Whether the config is read-only, or is dynamic and can be altered.
          type: boolean
        sensitive:
          description: Whether this is a sensitive config key and value.
          type: boolean
        source:
          $ref: '#/components/schemas/ConfigSource'
        type:
          $ref: '#/components/schemas/ConfigType'
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    ConnectCluster:
      properties:
        address:
          description: The host address of the Kafka Connect cluster.
          type: string
        info:
          $ref: '#/components/schemas/ConnectCluster.Info'
        name:
          description: Unique name of connect cluster. For Redpanda Cloud, the value is `redpanda`.
          type: string
        plugins:
          items:
            $ref: '#/components/schemas/ConnectorPlugin'
          type: array
      type: object
    ConnectCluster.Info:
      properties:
        commit:
          description: The git commit ID of the connect worker source code.
          type: string
        kafka_cluster_id:
          description: Cluster ID.
          type: string
        version:
          description: Connect worker version.
          type: string
      type: object
    Connector:
      properties:
        state:
          description: State of the connector instance.
          type: string
        trace:
          description: String value of stack trace.
          type: string
        worker_id:
          description: ID of worker that the connector is assigned to.
          type: string
      type: object
    ConnectorError:
      properties:
        content:
          description: Detailed description of the error.
          type: string
        title:
          description: Short description of the error.
          type: string
        type:
          $ref: '#/components/schemas/ConnectorError.Type'
      title: |-
        ConnectorError is the error of a connector, this is holistic error
        abstraction, made parsing the error trace of connector or Task
      type: object
    ConnectorError.Type:
      description: Error level.
      enum:
        - TYPE_ERROR
        - TYPE_WARNING
      type: string
    ConnectorHolisticState:
      description: |-
        State of a connector or one of its tasks, as described in the [Kafka Connect documentation](https://kafka.apache.org/documentation.html#connect_administration). Takes into account not just the state of the connector instance itself, but also the tasks within the connector.

         - CONNECTOR_HOLISTIC_STATE_PAUSED: The connector or task has been administratively paused.
         - CONNECTOR_HOLISTIC_STATE_RESTARTING: The connector or task is restarting.
         - CONNECTOR_HOLISTIC_STATE_DESTROYED: The connector is destroyed, regardless of any tasks.
         - CONNECTOR_HOLISTIC_STATE_STOPPED: The connector or task has been stopped.
         - CONNECTOR_HOLISTIC_STATE_UNASSIGNED: - The connector or task has not yet been assigned to a worker,
        - THe connector is running, but there are unassigned tasks.
         - CONNECTOR_HOLISTIC_STATE_HEALTHY: The connector is running, > 0 tasks, all of them in running state.
         - CONNECTOR_HOLISTIC_STATE_UNHEALTHY: - The connector has failed,
        - The connector is running, but has no tasks,
        - Connector is running and has tasks, but all tasks have failed.
         - CONNECTOR_HOLISTIC_STATE_DEGRADED: The connector is running and has tasks, and at least one task, but not all, have failed.
         - CONNECTOR_HOLISTIC_STATE_UNKNOWN: The connector or task state could not be determined.
      enum:
        - CONNECTOR_HOLISTIC_STATE_PAUSED
        - CONNECTOR_HOLISTIC_STATE_RESTARTING
        - CONNECTOR_HOLISTIC_STATE_DESTROYED
        - CONNECTOR_HOLISTIC_STATE_STOPPED
        - CONNECTOR_HOLISTIC_STATE_UNASSIGNED
        - CONNECTOR_HOLISTIC_STATE_HEALTHY
        - CONNECTOR_HOLISTIC_STATE_UNHEALTHY
        - CONNECTOR_HOLISTIC_STATE_DEGRADED
        - CONNECTOR_HOLISTIC_STATE_UNKNOWN
      type: string
    ConnectorInfoStatus:
      properties:
        info:
          $ref: '#/components/schemas/ConnectorSpec'
        name:
          description: Name of connector.
          type: string
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    ConnectorPlugin:
      properties:
        class:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    ConnectorSpec:
      description: |-
        Connector specifications as defined in the Kafka Connect
        API. You may include this in the request body when creating a new connector.
      properties:
        config:
          additionalProperties:
            type: string
          description: Connector configuration properties.
          type: object
        name:
          description: Name of connector.
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskInfo'
          readOnly: true
          type: array
        type:
          readOnly: true
          type: string
      required:
        - name
        - config
      type: object
    ConnectorStatus:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        errors:
          description: List of parsed connectors' and tasks' errors.
          items:
            $ref: '#/components/schemas/ConnectorError'
          type: array
        holistic_state:
          $ref: '#/components/schemas/ConnectorHolisticState'
        name:
          description: Name of connector.
          type: string
        tasks:
          description: Status of connector tasks. For more information, see the [https://docs.redpanda.com/current/deploy/deployment-option/cloud/managed-connectors/monitor-connectors/#connector-tasks](Monitor Connectors) documentation.
          items:
            $ref: '#/components/schemas/TaskStatus'
          type: array
        type:
          description: Type of connector (sink or source).
          type: string
      type: object
    CreateACLRequest:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          type: string
        resource_name:
          description: |-
            The name of the resource this ACL targets.
            For requests with resource_type CLUSTER, this will default to "kafka-cluster".
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - principal
        - host
        - operation
        - permission_type
      type: object
    CreateACLResponse:
      type: object
    CreateClusterOperation:
      description: CreateClusterOperation is the response of the create cluster rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    CreateConnectSecretResponse:
      description: CreateConnectSecretResponse is the response of CreateConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    CreateConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    CreateNetworkOperation:
      description: CreateNetworkOperation is the response of the create network rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    CreateResourceGroupResponse:
      description: CreateResourceGroupResponse is the response of CreateResourceGroup.
      properties:
        resource_group:
          $ref: '#/components/schemas/ResourceGroup'
      type: object
    CreateServerlessClusterOperation:
      description: CreateServerlessClusterOperation is the response of the create serverless_cluster rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    CreateTopicRequest.Topic:
      properties:
        configs:
          description: |-
            An array of key-value config pairs for a topic.
            These correspond to Kafka topic-level configs.
          items:
            $ref: '#/components/schemas/Config'
          type: array
        name:
          description: Name of topic.
          type: string
        partition_count:
          description: |-
            The number of partitions to give the topic. If specifying
            partitions manually (see `replica_assignments`), set to -1.
            Or, to use the cluster default partition count, set to null.
          format: int32
          nullable: true
          type: integer
        replica_assignments:
          description: |-
            Manually specify broker ID assignments for partition replicas. If manually assigning replicas, both `replication_factor` and
            `partition_count` must be -1.
          items:
            $ref: '#/components/schemas/ReplicaAssignment'
          type: array
        replication_factor:
          description: |-
            The number of replicas every partition must have.
            If specifying partitions manually (see `replica_assignments`), set to -1.
            Or, to use the cluster default replication factor, set to null.
          format: int32
          nullable: true
          type: integer
      type: object
    CreateTopicResponse:
      properties:
        name:
          description: Name of topic.
          type: string
        partition_count:
          description: |-
            The number of partitions created for the topic.
            This field has a default value of -1, which may be returned if the broker
            does not support v5+ of this request which added support for returning
            this information.
          format: int32
          type: integer
        replication_factor:
          description: |-
            The number of replicas per topic partition.
            This field has a default of -1, which may be returned if the broker
            does not support v5+ of this request which added support for returning
            this information.
          format: int32
          type: integer
      type: object
    CreateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
        password:
          description: Password.
          type: string
      type: object
    CreateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/CreateUserResponse.User'
      type: object
    CreateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          title: Name of newly-created user
          type: string
      type: object
    CustomerManagedResourcesUpdate:
      properties:
        gcp:
          $ref: '#/components/schemas/CustomerManagedResourcesUpdate.GCP'
      title: The cloud resources created by user that can be updated
      type: object
    CustomerManagedResourcesUpdate.GCP:
      description: GCP resources managed by user.
      properties:
        psc_nat_subnet_name:
          description: NAT subnet name if GCP Private Service Connect (a.k.a. Private Link) is enabled.
          type: string
      title: GCP Customer-Managed Resoures
      type: object
    DeleteACLsRequest.Filter:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          nullable: true
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - operation
        - permission_type
      type: object
    DeleteACLsResponse:
      properties:
        matching_acls:
          items:
            $ref: '#/components/schemas/MatchingACL'
          type: array
      type: object
    DeleteClusterOperation:
      description: DeleteClusterOperation is the response of the delete cluster rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    DeleteConnectSecretResponse:
      description: DeleteConnectSecretResponse is the response of DeleteConnectSecret.
      type: object
    DeleteNamespaceResponse:
      type: object
    DeleteNetworkOperation:
      description: DeleteNetworkOperation is the response of the delete network rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    DeleteResourceGroupResponse:
      description: DeleteResourceGroupResponse is the response of DeleteResourceGroup.
      type: object
    DeleteServerlessClusterOperation:
      description: DeleteServerlessClusterOperation is the response of the delete serverless_cluster rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    DeleteTopicResponse:
      type: object
    DeleteTransformResponse:
      type: object
    DeleteUserResponse:
      type: object
    DeployTransformRequest:
      description: |-
        Metadata required to deploy a new Wasm
        transform in a Redpanda cluster.
      properties:
        environment_variables:
          description: The environment variables you want to apply to your transform's environment
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        input_topic_name:
          description: The input topic to apply the transform to.
          example: orders
          type: string
        name:
          description: Name of the transform.
          example: redact-payment-details-in-orders
          type: string
        output_topic_names:
          description: Output topic to write the transform results to.
          example: orders-redacted
          items:
            type: string
          type: array
      required:
        - name
        - input_topic_name
        - output_topic_names
      type: object
    EnvironmentVariable:
      properties:
        key:
          description: The key of your environment variable.
          example: LOG_LEVEL
          type: string
        value:
          description: The value of your environment variable.
          example: DEBUG
          type: string
      required:
        - key
        - value
      type: object
    ErrorInfo:
      description: |-
        Describes the cause of the error with structured details.

        Example of an error when contacting the "pubsub.googleapis.com" API when it
        is not enabled:

            { "reason": "API_DISABLED"
              "domain": "googleapis.com"
              "metadata": {
                "resource": "projects/123",
                "service": "pubsub.googleapis.com"
              }
            }

        This response indicates that the pubsub.googleapis.com API is not enabled.

        Example of an error that is returned when attempting to create a Spanner
        instance in a region that is out of stock:

            { "reason": "STOCKOUT"
              "domain": "spanner.googleapis.com",
              "metadata": {
                "availableRegions": "us-central1,us-east2"
              }
            }
      properties:
        domain:
          description: |-
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error is
            generated by some common infrastructure, the error domain must be a
            globally unique value that identifies the infrastructure. For Google API
            infrastructure, the error domain is "googleapis.com".
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Additional structured details about this error.

            Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in
            length. When identifying the current value of an exceeded limit, the units
            should be contained in the key, not the value.  For example, rather than
            {"instanceLimit": "100/request"}, should be returned as,
            {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
            instances that can be created in a single (batch) request.
          type: object
        reason:
          description: |-
            The reason of the error. This is a constant value that identifies the
            proximate cause of the error. Error reasons are unique within a particular
            domain of errors. This should be at most 63 characters and match a
            regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
          type: string
      title: ErrorInfo
      type: object
    FieldViolation:
      description: A message type used to describe a single bad request field.
      properties:
        description:
          description: A description of why the request element is bad.
          type: string
        field:
          description: |-
            A path that leads to a field in the request body. The value will be a
            sequence of dot-separated identifiers that identify a protocol buffer
            field.

            Consider the following:

                message CreateContactRequest {
                  message EmailAddress {
                    enum Type {
                      TYPE_UNSPECIFIED = 0;
                      HOME = 1;
                      WORK = 2;
                    }

                    optional string email = 1;
                    repeated EmailType type = 2;
                  }

                  string full_name = 1;
                  repeated EmailAddress email_addresses = 2;
                }

            In this example, in proto `field` could take one of the following values:

            * `full_name` for a violation in the `full_name` value
            * `email_addresses[1].email` for a violation in the `email` field of the
              first `email_addresses` message
            * `email_addresses[3].type[2]` for a violation in the second `type`
              value in the third `email_addresses` message.

            In JSON, the same values are represented as:

            * `fullName` for a violation in the `fullName` value
            * `emailAddresses[1].email` for a violation in the `email` field of the
              first `emailAddresses` message
            * `emailAddresses[3].type[2]` for a violation in the second `type`
              value in the third `emailAddresses` message.
          type: string
      type: object
    GCP.ConnectedEndpoint:
      description: ConnectedEndpoint defines endpoint connection connected to Redpanda GCP PSC (Private Service Connect) service.
      properties:
        connection_id:
          description: The ID of endpoint connection.
          type: string
        consumer_network:
          title: |-
            The network of consumer connecting to Redpanda GCP PSC (Private Service Connect).
            e.g. https://www.googleapis.com/compute/v1/projects/my-project/global/networks/vpc-consumer-psc
          type: string
        endpoint:
          title: |-
            The endpoint of connection.
            e.g. https://www.googleapis.com/compute/v1/projects/my-project/regions/us-west2/forwardingRules/vpc-consumer-psc
          type: string
        status:
          description: |-
            status is the status of the endpoint (ACCEPTED | REJECTED).

            The ServiceAttachment API resource (https://cloud.google.com/compute/docs/reference/rest/v1/serviceAttachments)
             does have more fields, such as connection ID & consumer network, but the Terraform provider
             (https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_service_attachment#nested_connected_endpoints)
             doesn't return them as outputs.
          type: string
      type: object
    GCPPrivateServiceConnectConsumer:
      description: GCP Private Service Connect consumer specifications.
      properties:
        source:
          description: Either the GCP project number or its alphanumeric ID.
          example: gcp-project-1
          type: string
      type: object
    GCPPrivateServiceConnectSpec:
      properties:
        consumer_accept_list:
          description: List of consumers that are allowed to connect to Redpanda GCP PSC (Private Service Connect) service attachment.
          items:
            $ref: '#/components/schemas/GCPPrivateServiceConnectConsumer'
          type: array
        enabled:
          description: Whether Redpanda GCP Private Service Connect is enabled.
          type: boolean
        global_access_enabled:
          description: Whether global access is enabled.
          type: boolean
      type: object
    GCPPrivateServiceConnectStatus:
      properties:
        consumer_accept_list:
          description: List of consumers that are allowed to connect to Redpanda GCP PSC (Private Service Connect) service attachment.
          items:
            $ref: '#/components/schemas/GCPPrivateServiceConnectConsumer'
          type: array
        enabled:
          description: Whether Redpanda GCP Private Service Connect is enabled.
          type: boolean
        global_access_enabled:
          description: Whether global access is enabled.
          type: boolean
        status:
          $ref: '#/components/schemas/GCPPrivateServiceConnectStatus.Status'
      type: object
    GCPPrivateServiceConnectStatus.Status:
      properties:
        connected_endpoints:
          description: List of VPC endpoints with established connections to GCP Private Service Connect.
          items:
            $ref: '#/components/schemas/Status.ConnectedEndpoint'
          type: array
        created_at:
          description: Redpanda GCP Private Service Connect service creation timestamp.
          format: date-time
          type: string
        deleted_at:
          description: Redpanda GCP Private Service Connect service deletion timestamp.
          format: date-time
          type: string
        dns_a_records:
          description: Customer-created DNS A records that point at the PSC endpoint on the consumer side.
          items:
            type: string
          type: array
        kafka_api_node_base_port:
          description: Kafka API node service base port. The port for node `i` (0 .. node_count-1) is kafka_api_node_base_port + `i`.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: Kafka API seed service port.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: HTTP Proxy node service base port. The port for node `i` (0 .. node_count-1) is redpanda_proxy_node_base_port + `i`.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: HTTP Proxy seed service port.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: Schema Registry seed service port.
          format: int32
          type: integer
        seed_hostname:
          description: Hostname for clients to initiate connections to the APIs exposed through Private Service Connect.
          type: string
        service_attachment:
          description: Service attachment used by consumers to create endpoint connections to Redpanda GCP Private Service Connect service.
          type: string
      type: object
    GetClusterResponse:
      description: GetClusterResponse is the request of GetCluster.
      properties:
        cluster:
          $ref: '#/components/schemas/v1beta2.Cluster'
      type: object
    GetConnectClusterResponse:
      properties:
        cluster:
          $ref: '#/components/schemas/ConnectCluster'
      type: object
    GetConnectSecretResponse:
      description: GetConnectSecretResponse is the response of GetConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    GetConnectorConfigResponse:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      type: object
    GetConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    GetConnectorStatusResponse:
      properties:
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    GetNetworkResponse:
      description: GetNetworkRequest is the request of GetNetwork.
      properties:
        network:
          $ref: '#/components/schemas/v1beta2.Network'
      type: object
    GetOperationResponse:
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      title: GetOperationResponse is the request of GetOperation
      type: object
    GetResourceGroupResponse:
      description: GetResourceGroupResponse is the response of GetResourceGroup.
      properties:
        resource_group:
          $ref: '#/components/schemas/ResourceGroup'
      type: object
    GetServerlessClusterResponse:
      description: GetServerlessClusterResponse is the request of GetServerlessCluster.
      properties:
        serverless_cluster:
          $ref: '#/components/schemas/ServerlessCluster'
      type: object
    GetTopicConfigurationsResponse:
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    GetTransformResponse:
      properties:
        transform:
          $ref: '#/components/schemas/TransformMetadata'
      type: object
    HTTPProxy:
      description: Describes specifics about the HTTP Proxy
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta1.MTLSSpec'
        url:
          description: URL of Redpanda's HTTP Proxy
          example: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
          readOnly: true
          type: string
      type: object
    HTTPProxySpec:
      description: Cluster's HTTP Proxy properties. See [Use Redpanda with the HTTP Proxy API](https://docs.redpanda.com/current/develop/http-proxy/) and the [HTTP Proxy API reference](https://docs.redpanda.com/api/pandaproxy-rest) for more information.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
      type: object
    HTTPProxyStatus:
      description: HTTP Proxy properties.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
        url:
          description: HTTP Proxy URL of cluster.
          example: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
          readOnly: true
          type: string
      type: object
    Help:
      description: |-
        Provides links to documentation or for performing an out of band action.

        For example, if a quota check failed with an error indicating the calling
        project hasn't enabled the accessed service, this can contain a URL pointing
        directly to the right place in the developer console to flip the bit.
      properties:
        links:
          description: URL(s) pointing to additional information on handling the current error.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      title: Help
      type: object
    KafkaAPISpec:
      description: Cluster's Kafka API properties.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
      type: object
    Link:
      description: Describes a URL link.
      properties:
        description:
          description: Describes what the link offers.
          type: string
        url:
          description: The URL of the link.
          type: string
      type: object
    ListACLsRequest.Filter:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          nullable: true
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ListACLsResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      type: object
    ListConnectClustersResponse:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/ConnectCluster'
          type: array
      type: object
    ListConnectSecretsResponse:
      description: ListConnectSecretsResponse is the response of ListConnectSecrets.
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        secrets:
          description: Secrets retrieved.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      type: object
    ListConnectorTopicsResponse:
      properties:
        topics:
          description: Topic names.
          items:
            type: string
          type: array
      type: object
    ListConnectorsResponse:
      properties:
        connectors:
          description: List of connectors, where the parent key is the connector name.
          items:
            $ref: '#/components/schemas/ConnectorInfoStatus'
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as page_token in the next call to this endpoint.
          type: string
      type: object
    ListNamespacesRequest.Filter:
      properties:
        name:
          type: string
      type: object
    ListNamespacesResponse:
      description: ListNamespacesResponse is the response of ListNamespaces.
      properties:
        namespaces:
          description: Namespaces matching the request
          items:
            $ref: '#/components/schemas/Namespace'
          maxItems: 100
          type: array
        next_page_token:
          type: string
      type: object
    ListResourceGroupsRequest.Filter:
      properties:
        name:
          description: Name of resource group. Exact match.
          type: string
      type: object
    ListResourceGroupsResponse:
      description: ListResourceGroupsResponse is the response of ListResourceGroups.
      properties:
        next_page_token:
          type: string
        resource_groups:
          description: Matching resource groups.
          items:
            $ref: '#/components/schemas/ResourceGroup'
          maxItems: 100
          type: array
      type: object
    ListSecretsFilter:
      description: ListSecretsFilter are the filter options for listing secrets.
      properties:
        labels[string]:
          additionalProperties:
            type: string
          description: The secret labels to search for.
          type: object
        name_contains:
          description: Substring match on secret name. Case-sensitive.
          type: string
      type: object
    ListSecretsResponse:
      description: ListSecretsResponse is the response of ListSecrets.
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        secrets:
          description: Secrets retrieved.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      type: object
    ListServerlessClustersRequest.Filter:
      properties:
        name_contains:
          type: string
        region:
          type: string
        resource_group_id:
          type: string
        state:
          items:
            $ref: '#/components/schemas/ServerlessCluster.State'
          type: array
      type: object
    ListServerlessClustersResponse:
      description: ListServerlessClustersResponse is the response of ListServerlessClusters.
      properties:
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as next_page_token in the next call to this endpoint.
          type: string
        serverless_clusters:
          description: ServerlessClusters matching the request
          items:
            $ref: '#/components/schemas/ServerlessCluster'
          maxItems: 100
          type: array
      type: object
    ListTopicsRequest.Filter:
      properties:
        name_contains:
          description: Substring match on topic name. Case-sensitive.
          type: string
      type: object
    ListTopicsResponse:
      properties:
        next_page_token:
          type: string
        topics:
          items:
            $ref: '#/components/schemas/ListTopicsResponse.Topic'
          type: array
      type: object
    ListTopicsResponse.Topic:
      properties:
        internal:
          description: Whether topic is internal only.
          type: boolean
        name:
          description: Topic name.
          type: string
        partition_count:
          description: Topic partition count.
          format: int32
          type: integer
        replication_factor:
          description: Topic replication factor.
          format: int32
          type: integer
      type: object
    ListTransformsRequest.Filter:
      properties:
        name_contains:
          description: Substring match on transform name. Case-sensitive.
          type: string
      type: object
    ListTransformsResponse:
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        transforms:
          items:
            $ref: '#/components/schemas/TransformMetadata'
          type: array
      type: object
    ListUsersRequest.Filter:
      properties:
        name:
          description: Username.
          type: string
        name_contains:
          description: Substring match on username. Case-sensitive.
          type: string
      type: object
    ListUsersResponse:
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        users:
          items:
            $ref: '#/components/schemas/ListUsersResponse.User'
          type: array
      type: object
    ListUsersResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
      type: object
    MatchingACL:
      properties:
        error:
          $ref: '#/components/schemas/Status'
        host:
          description: The host address to use for this ACL.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: The user for whom this ACL applies.
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    Namespace:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          title: ID of the namespace. ID is an output of CreateNamespace and cannot be set up by the caller
          type: string
        name:
          description: The unique name of the namespace.
          example: development
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    NetworkCreate:
      description: Redpanda Cloud network properties.
      properties:
        cidr_block:
          description: Network CIDR from where public and private subnets are derived. At least a 21 bits CIDR is required. For more information, see [Choose CIDR Ranges](https://docs.redpanda.com/current/deploy/deployment-option/cloud/cidr-ranges/).
          type: string
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        cluster_type:
          $ref: '#/components/schemas/v1beta2.Cluster.Type'
        customer_managed_resources:
          $ref: '#/components/schemas/v1beta2.Network.CustomerManagedResources'
        name:
          description: The unique name of the network.
          example: development-network
          type: string
        region:
          description: Cloud provider region. See [available cloud providers and regions](https://docs.redpanda.com/current/deploy/deployment-option/cloud/regions/).
          type: string
        resource_group_id:
          description: Resource group ID of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
      required:
        - name
        - resource_group_id
        - cloud_provider
        - region
        - type
      title: Network details
      type: object
    OperationMetadata:
      description: Metadata of the long-running Operation. Contains in-progress information.
      oneOf:
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateNetworkMetadata
                  type: string
            - $ref: '#/components/schemas/CreateNetworkMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteNetworkMetadata
                  type: string
            - $ref: '#/components/schemas/DeleteNetworkMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateClusterMetadata
                  type: string
            - $ref: '#/components/schemas/CreateClusterMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.UpdateClusterMetadata
                  type: string
            - $ref: '#/components/schemas/UpdateClusterMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteClusterMetadata
                  type: string
            - $ref: '#/components/schemas/DeleteClusterMetadata'
    OperationResponse:
      description: Response of the long-running Operation.
      oneOf:
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.Cluster
                  type: string
            - $ref: '#/components/schemas/Cluster'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta2.Network
                  type: string
            - $ref: '#/components/schemas/Network'
    Options:
      properties:
        include_tasks:
          description: Restart connector's tasks.
          type: boolean
        only_failed:
          description: Restart only connectors that have failed.
          type: boolean
      type: object
    PartitionStatus:
      enum:
        - PARTITION_STATUS_RUNNING
        - PARTITION_STATUS_INACTIVE
        - PARTITION_STATUS_ERRORED
        - PARTITION_STATUS_UNKNOWN
      type: string
    PartitionTransformStatus:
      properties:
        broker_id:
          format: int32
          type: integer
        lag:
          format: int32
          type: integer
        partition_id:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/PartitionStatus'
      type: object
    PermissionType:
      description: Whether the operation should be allowed or denied.
      enum:
        - PERMISSION_TYPE_ANY
        - PERMISSION_TYPE_DENY
        - PERMISSION_TYPE_ALLOW
      type: string
    Policy:
      properties:
        host:
          description: The host address for this ACL.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: The user for whom this ACL applies.
          type: string
      type: object
    PrivateLinkSpec:
      description: Describes specifics about GCP PSC or AWS Private Link.
      properties:
        aws:
          $ref: '#/components/schemas/PrivateLinkSpec.AWS'
        enabled:
          description: Indication on whether Redpanda AWS Private Link Endpoint Service is enabled.
          type: boolean
        gcp:
          $ref: '#/components/schemas/PrivateLinkSpec.GCP'
        status:
          $ref: '#/components/schemas/PrivateLinkStatus'
      type: object
    PrivateLinkSpec.AWS:
      properties:
        allowed_principals:
          description: The ARN of the principals that can access Redpanda AWS Private Link Endpoint Service. To grant permissions to all principals, use an asterisk (*).
          example: arn:aws:iam::account-number-without-hyphens:user/username or arn:aws:iam::account-number-without-hyphens:root
          items:
            type: string
          type: array
      type: object
    PrivateLinkSpec.GCP:
      properties:
        consumer_accept_list:
          description: The consumers that are allowed to connect to Redpanda GCP PSC (Private Service Connect) service attachment.
          items:
            $ref: '#/components/schemas/PrivateServiceConnectConsumer'
          type: array
        enable_global_access:
          description: enable_global_access controls whether global access is enabled.
          type: boolean
      type: object
    PrivateLinkStatus:
      description: Describes the status of Redpanda Private Link Service
      properties:
        aws:
          $ref: '#/components/schemas/PrivateLinkStatus.AWS'
        gcp:
          $ref: '#/components/schemas/PrivateLinkStatus.GCP'
      readOnly: true
      type: object
    PrivateLinkStatus.AWS:
      properties:
        created_at:
          description: Timestamp when Redpanda AWS Private Link Endpoint Service was created.
          format: date-time
          type: string
        deleted_at:
          description: Timestamp when Redpanda AWS Private Link Service was deleted.
          format: date-time
          type: string
        kafka_api_node_base_port:
          description: The base port of Kafka API node service. The port for node i (0 .. node_count-1) is kafka_api_node_base_port + i.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: The port of Kafka API seed service.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: The base port of Redpanda Proxy node service. The port for node i (0 .. node_count-1) is redpanda_proxy_node_base_port + i.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: The port of Redpanda Proxy seed service.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: The port of Schema Registry seed service.
          format: int32
          type: integer
        service_id:
          description: The ID of Redpanda AWS Private Link Endpoint Service.
          example: vpce-svc-05fff2117d648da35
          type: string
        service_name:
          description: The name of Redpanda AWS Private Link Endpoint Service.
          example: com.amazonaws.vpce.us-west-2.vpce-svc-05fff2117d648da35
          type: string
        service_state:
          description: The state of Redpanda AWS Private Link Endpoint Service.
          example: Pending | Available | Deleting | Deleted | Failed
          type: string
        vpc_endpoint_connections:
          description: The list of VPC endpoints established with Redpanda AWS Private Link Endpoint Service.
          items:
            $ref: '#/components/schemas/AWS.VPCEndpointConnection'
          type: array
      type: object
    PrivateLinkStatus.GCP:
      properties:
        connected_endpoints:
          description: The list of VPC endpoints established with GCP PSC.
          items:
            $ref: '#/components/schemas/GCP.ConnectedEndpoint'
          type: array
        created_at:
          description: Timestamp when Redpanda GCP PSC was created.
          format: date-time
          type: string
        deleted_at:
          description: Timestamp when Redpanda GCP PSC was deleted.
          format: date-time
          type: string
        dns_a_records:
          description: dns_a_records are the DNS A records the customer will create pointing at the PSC endpoint on the consumer side.
          items:
            type: string
          type: array
        kafka_api_node_base_port:
          description: The base port of Kafka API node service. The port for node i (0 .. node_count-1) is kafka_api_node_base_port + i.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: The port of Kafka API seed service.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: The base port of Redpanda Proxy node service. The port for node i (0 .. node_count-1) is redpanda_proxy_node_base_port + i.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: The port of Redpanda Proxy seed service.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: The port of Schema Registry seed service.
          format: int32
          type: integer
        seed_hostname:
          description: seed_hostname is the hostname to be advertised for clients to initiate connections to the APIs exposed through PSC.
          type: string
        service_attachment:
          description: The service attachment used by by consumers to create endpoint connections to Redpanda GCP PSC.
          type: string
      type: object
    PrivateServiceConnectConsumer:
      description: PrivateServiceConnectConsumer contains the info for a PSC consumer.
      properties:
        source:
          description: source can either be the GCP project number or its alphanumeric ID.
          example: gcp-project-1
          type: string
      type: object
    QuotaFailure:
      description: |-
        Describes how a quota check failed.

        For example if a daily limit was exceeded for the calling project,
        a service could respond with a QuotaFailure detail containing the project
        id and the description of the quota limit that was exceeded.  If the
        calling project hasn't enabled the service in the developer console, then
        a service could respond with the project id and set `service_disabled`
        to true.

        Also see RetryInfo and Help types for other details about handling a
        quota failure.
      properties:
        violations:
          description: Describes all quota violations.
          items:
            $ref: '#/components/schemas/QuotaFailure.Violation'
          type: array
      title: QuotaFailure
      type: object
    QuotaFailure.Violation:
      description: |-
        A message type used to describe a single quota violation.  For example, a
        daily quota or a custom quota that was exceeded.
      properties:
        description:
          description: |-
            A description of how the quota check failed. Clients can use this
            description to find more about the quota configuration in the service's
            public documentation, or find the relevant quota limit to adjust through
            developer console.

            For example: "Service disabled" or "Daily Limit for read operations
            exceeded".
          type: string
        subject:
          description: |-
            The subject on which the quota check failed.
            For example, "clientip:<ip address of client>" or "project:<Google
            developer project id>".
          type: string
      type: object
    ReplicaAssignment:
      properties:
        partition_id:
          description: A partition to create.
          format: int32
          type: integer
        replica_ids:
          description: The broker IDs the partition replicas are assigned to.
          items:
            format: int32
            type: integer
          type: array
      type: object
    Resource:
      properties:
        acls:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        resource_name:
          description: The name of the resource this ACL targets.
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ResourceGroup:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          title: ID of the resource group. ID is an output of the Create Resource Group request and cannot be set by the caller
          type: string
        name:
          description: The unique name of the resource group.
          example: development
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      title: Redpanda resource group
      type: object
    ResourceGroupCreate:
      properties:
        name:
          description: The unique name of the resource group.
          example: development
          type: string
      required:
        - name
      title: ResourceGroupCreate represents a Redpanda resource group creation input
      type: object
    ResourceGroupUpdate:
      properties:
        id:
          description: |-
            ID of the resource group. The ID should be valid and the resource group
            should exist within the organization.
          type: string
        name:
          description: The unique name of the resource group.
          example: development
          type: string
      required:
        - id
        - name
      title: ResourceGroupUpdate represents a Redpanda resource group update input
      type: object
    ResourcePatternType:
      description: |-
        The pattern to use for matching the specified resource_name
        (any, exact match, literal, or prefixed).
      enum:
        - RESOURCE_PATTERN_TYPE_ANY
        - RESOURCE_PATTERN_TYPE_MATCH
        - RESOURCE_PATTERN_TYPE_LITERAL
        - RESOURCE_PATTERN_TYPE_PREFIXED
      type: string
    ResourceType:
      description: |-
        The type of resource (topic, consumer group, etc.) this
        ACL targets.
      enum:
        - RESOURCE_TYPE_ANY
        - RESOURCE_TYPE_TOPIC
        - RESOURCE_TYPE_GROUP
        - RESOURCE_TYPE_CLUSTER
        - RESOURCE_TYPE_TRANSACTIONAL_ID
        - RESOURCE_TYPE_DELEGATION_TOKEN
        - RESOURCE_TYPE_USER
      type: string
    SASLMechanism:
      description: SASL mechanism to use for authentication.
      enum:
        - SASL_MECHANISM_SCRAM_SHA_256
        - SASL_MECHANISM_SCRAM_SHA_512
      type: string
    SchemaRegistry:
      description: Describes specifics about the Schema Registry endpoint
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta1.MTLSSpec'
        url:
          description: Schema Registry URL.
          readOnly: true
          type: string
      type: object
    SchemaRegistrySpec:
      description: Cluster's Schema Registry properties. See the [Schema Registry overview](https://docs.redpanda.com/current/manage/schema-reg/schema-reg-overview/) and the [Schema Registry API reference](https://docs.redpanda.com/api/pandaproxy-schema-registry) for more information.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
      type: object
    SchemaRegistryStatus:
      description: Cluster's Schema Registry properties.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
        url:
          description: Schema Registry URL.
          type: string
      type: object
    Secret:
      description: Defines the secret resource.
      properties:
        id:
          description: Secret identifier.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
      type: object
    ServerlessCluster:
      description: Resource describing a ServerlessCluster.
      properties:
        created_at:
          description: Timestamp when the ServerlessCluster was created.
          format: date-time
          type: string
        dataplane_api:
          $ref: '#/components/schemas/ServerlessCluster.DataplaneAPI'
        id:
          description: ID of the ServerlessCluster. ID is an output of CreateServerlessCluster, and cannot be set by the caller.
          type: string
        kafka_api:
          $ref: '#/components/schemas/ServerlessCluster.KafkaAPI'
        name:
          description: Unique name of the ServerlessCluster.
          example: development-ServerlessCluster
          type: string
        region:
          description: Region represents the name of the region where the ServerlessCluster will be provisioned.
          example: us-east-1
          title: Region of the cloud provider
          type: string
        resource_group_id:
          description: Resource group id of the cluster
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        state:
          $ref: '#/components/schemas/ServerlessCluster.State'
        updated_at:
          description: Timestamp when the ServerlessCluster was updated.
          format: date-time
          type: string
      title: ServerlessCluster
      type: object
    ServerlessCluster.DataplaneAPI:
      description: Describes specifics about the Dataplane API endpoint
      properties:
        url:
          description: URL of Dataplane API
          example: https://api-ab1234l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com
          readOnly: true
          type: string
      type: object
    ServerlessCluster.KafkaAPI:
      description: Describes specifics about redpanda's Kafka API.
      properties:
        seed_brokers:
          description: Kafka API Seed Brokers (also known as Bootstrap servers).
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ServerlessCluster.State:
      description: |-
        State describes the state of the ServerlessCluster.

         - STATE_SUSPENDED: a suspended VirtualRedpanda is in execution but blocks all external requests
      enum:
        - STATE_PLACING
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETED
        - STATE_FAILED
        - STATE_SUSPENDED
      type: string
    ServerlessClusterCreate:
      description: Resource describing a Create ServerlessCluster.
      properties:
        name:
          description: Unique name of the ServerlessCluster within the org.
          example: development-ServerlessCluster
          type: string
        region:
          description: Region represents the name of the region where the ServerlessCluster will be provisioned.
          type: string
        resource_group_id:
          description: Resource group id of the cluster
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
      required:
        - name
        - resource_group_id
        - region
      title: ServerlessClusterCreate
      type: object
    SetConfiguration:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    SetTopicConfigurationsResponse:
      properties:
        configurations:
          description: Topic's complete set of configurations after this update.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    Status:
      description: |-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It is
        used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details.

        You can find out more about this error model and how to work with it in the
        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: RPC status code, as described [here](https://github.com/googleapis/googleapis/blob/b4c238feaa1097c53798ed77035bbfeb7fc72e96/google/rpc/code.proto#L32).
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          format: int32
          type: string
        details:
          items:
            description: Details of the error.
            oneOf:
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.BadRequest
                        type: string
                  - $ref: '#/components/schemas/BadRequest'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.ErrorInfo
                        type: string
                  - $ref: '#/components/schemas/ErrorInfo'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.QuotaFailure
                        type: string
                  - $ref: '#/components/schemas/QuotaFailure'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.Help
                        type: string
                  - $ref: '#/components/schemas/Help'
          type: array
        message:
          description: Detailed error message. No compatibility guarantees are given for the text contained in this message.
          type: string
      type: object
    Status.ConnectedEndpoint:
      description: ConnectedEndpoint defines endpoint connection connected to Redpanda GCP PSC (Private Service Connect) service.
      properties:
        connection_id:
          description: Connection ID of the endpoint.
          type: string
        consumer_network:
          description: |-
            Network of the consumer connecting to Redpanda GCP Private Service Connect service.
            See the official [GCP documentation](https://www.googleapis.com/compute/v1/projects/my-project/global/networks/vpc-consumer-psc) for Private Service Connect.
          type: string
        endpoint:
          description: |-
            Connection endpoint.
            See the official [GCP API reference](https://www.googleapis.com/compute/v1/projects/my-project/regions/us-west2/forwardingRules/vpc-consumer-psc) for Private Service Connect.
          type: string
        status:
          description: |-
            Endpoint status (ACCEPTED | REJECTED).

            The ServiceAttachment API resource (https://cloud.google.com/compute/docs/reference/rest/v1/serviceAttachments)
             does have more fields, such as connection ID & consumer network, but the Terraform provider
             (https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_service_attachment#nested_connected_endpoints)
             doesn't return them as outputs.
          type: string
      type: object
    Status.VPCEndpointConnection:
      properties:
        connection_id:
          description: Connection ID of VPC endpoint connected to Redpanda AWS PrivateLink Endpoint Service.
          example: vpce-con-00b9cba3360fe4aec
          type: string
        created_at:
          description: VPC endpoint creation timestamp.
          format: date-time
          type: string
        dns_entries:
          description: The list of DNS entries associated with VPC endpoint.
          items:
            $ref: '#/components/schemas/Status.VPCEndpointConnection.DNSEntry'
          type: array
        id:
          description: The ID of VPC endpoint.
          type: string
        load_balancer_arns:
          description: List of load balancer ARNs.
          items:
            type: string
          type: array
        owner:
          description: The owner of VPC endpoint.
          type: string
        state:
          description: The state of VPC endpoint connected to Redpanda AWS PrivateLink Endpoint Service.
          example: pendingAcceptance | pending | available | deleting | deleted | rejected | failed
          type: string
      type: object
    Status.VPCEndpointConnection.DNSEntry:
      properties:
        dns_name:
          description: DNS entry of VPC endpoint connected to Redpanda AWS PrivateLink Endpoint Service.
          example: vpce-0751b7ad8a51777f2-1hpievf5.vpce-svc-0d489fa89f24e3802.us-east-2.vpce.amazonaws.com
          type: string
        hosted_zone_id:
          description: The ID of Route53 DNS zone.
          type: string
      type: object
    TaskInfo:
      properties:
        connector:
          description: Name of connector.
          type: string
        task:
          description: The connector task ID.
          format: int32
          type: integer
      type: object
    TaskStatus:
      properties:
        id:
          description: The connector task ID.
          format: int32
          type: integer
        state:
          description: State of connector task.
          type: string
        trace:
          description: String value of stack trace.
          type: string
        worker_id:
          description: ID of worker that the task is assigned to.
          type: string
      type: object
    TransformMetadata:
      properties:
        environment_variables:
          description: The environment variables you want to apply to your transform's environment
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        input_topic_name:
          description: Input topic to apply the transform to.
          type: string
        name:
          description: Name of transform.
          type: string
        output_topic_names:
          description: Output topics to write the transform results to.
          items:
            type: string
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/PartitionTransformStatus'
          type: array
      type: object
    UpdateClusterOperation:
      description: UpdateClusterOperation is the response of the update cluster rpc.
      properties:
        operation:
          $ref: '#/components/schemas/v1beta2.Operation'
      type: object
    UpdateConfiguration:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        operation:
          $ref: '#/components/schemas/ConfigAlterOperation'
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    UpdateConnectSecretResponse:
      description: UpdateConnectSecretResponse is the response of UpdateConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    UpdateResourceGroupResponse:
      properties:
        resource_group:
          $ref: '#/components/schemas/ResourceGroup'
      title: UpdateResourceGroupResponse is the response of UpdateResourceGroup
      type: object
    UpdateTopicConfigurationsResponse:
      properties:
        configurations:
          description: Topic's complete set of configurations after applying this partial patch.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    UpdateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
        password:
          description: Password.
          type: string
      type: object
    UpdateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/UpdateUserResponse.User'
      type: object
    UpdateUserResponse.User:
      description: Updated user's name and SASL mechanism.
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    UpsertConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    rpc.Status:
      description: Describes errors
      properties:
        code:
          description: RPC status code, as described [here](https://github.com/googleapis/googleapis/blob/b4c238feaa1097c53798ed77035bbfeb7fc72e96/google/rpc/code.proto#L32).
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          format: int32
          type: string
        details:
          description: A list of messages that carries the error details.
          items:
            description: Details of the error.
            oneOf:
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.BadRequest
                        type: string
                  - $ref: '#/components/schemas/BadRequest'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.ErrorInfo
                        type: string
                  - $ref: '#/components/schemas/ErrorInfo'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.QuotaFailure
                        type: string
                  - $ref: '#/components/schemas/QuotaFailure'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.Help
                        type: string
                  - $ref: '#/components/schemas/Help'
          type: array
        message:
          description: Detailed error message. No compatibility guarantees are given for the text contained in this message.
          type: string
      type: object
    v1alpha1.Topic:
      type: object
    v1beta1.CloudProvider:
      description: Cloud Provider where resources are created.
      enum:
        - CLOUD_PROVIDER_AWS
        - CLOUD_PROVIDER_GCP
        - CLOUD_PROVIDER_AZURE
      type: string
    v1beta1.Cluster:
      description: Resource describing a Cluster.
      properties:
        cloud_provider:
          $ref: '#/components/schemas/v1beta1.CloudProvider'
        cloud_tags:
          additionalProperties:
            type: string
          description: Tags that are placed on Cloud resources.
          type: object
        connection_type:
          $ref: '#/components/schemas/v1beta1.Cluster.ConnectionType'
        created_at:
          description: Timestamp when the cluster was created.
          format: date-time
          readOnly: true
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources'
        dataplane_api:
          $ref: '#/components/schemas/v1beta1.Cluster.DataplaneAPI'
        http_proxy:
          $ref: '#/components/schemas/HTTPProxy'
        id:
          description: ID of the cluster. ID is an output of CreateCluster, and cannot be set by the caller.
          readOnly: true
          type: string
        kafka_api:
          $ref: '#/components/schemas/v1beta1.Cluster.KafkaAPI'
        name:
          description: Unique name of the cluster.
          example: development-cluster
          type: string
        namespace_id:
          description: Namespace id of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        network_id:
          description: Id of the Network where the cluster will be placed
          example: cjcuq79c4vs94fcufc2g
          type: string
        private_link:
          $ref: '#/components/schemas/PrivateLinkSpec'
        prometheus:
          $ref: '#/components/schemas/v1beta1.Cluster.Prometheus'
        read_replica_cluster_ids:
          description: IDs of clusters which may create read-only topics from this cluster.
          items:
            type: string
          type: array
        redpanda_console:
          $ref: '#/components/schemas/v1beta1.Cluster.RedpandaConsole'
        redpanda_version:
          description: |-
            Desired redpanda version when creating a cluster, only major.minor semver
            supported on creation.
          type: string
        region:
          description: Region of the cloud provider<br>Available values:<br>GCP:<br>- asia-south1<br>- asia-southeast1<br>- australia-southeast1<br>- europe-west1<br>- europe-west2<br>- northamerica-northeast1<br>- us-central1<br>- us-east1<br><br>AWS:<br>- af-south-1<br>- ap-southeast-1<br>- ap-southeast-1<br>- ca-central-1<br>- eu-central-1<br>- eu-west-1<br>- us-east-1<br>- us-east-2<br>- us-west-2
          example: us-central1
          type: string
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistry'
        state:
          $ref: '#/components/schemas/v1beta1.Cluster.State'
        state_description:
          $ref: '#/components/schemas/rpc.Status'
        throughput_tier:
          description: Throughput tier of the cluster.<br>Available values:<br>AWS:<br>- tier-1-aws-sbdg<br>- tier-2-aws-ugn0<br>- tier-3-aws-ugo0<br>- tier-4-aws-ugog<br>- tier-5-aws-ugp0<br>GCP:<br>- tier-1-gcp-um4g<br>- tier-2-gcp-um50<br>- tier-3-gcp-um5g<br>- tier-4-gcp-um60<br>- tier-5-gcp-um6g<br>
          type: string
        type:
          $ref: '#/components/schemas/v1beta1.Cluster.Type'
        updated_at:
          description: Timestamp when the cluster was updated.
          format: date-time
          readOnly: true
          type: string
        zones:
          description: |-
            Zones of the cluster. Must be valid zones within the selected region.
            If multiple zones are used, the cluster is a multi-AZ cluster.
          items:
            type: string
          type: array
      required:
        - name
        - namespace_id
        - cloud_provider
        - connection_type
        - network_id
        - region
        - throughput_tier
        - type
        - zones
      title: Cluster
      type: object
    v1beta1.Cluster.ConnectionType:
      description: |-
        ConnectionType describes the cluster connection type of a Redpanda Cluster.
        Private clusters are not exposted to the internet.
      enum:
        - CONNECTION_TYPE_PUBLIC
        - CONNECTION_TYPE_PRIVATE
      type: string
    v1beta1.Cluster.DataplaneAPI:
      description: Describes specifics about the Dataplane API endpoint
      properties:
        url:
          description: URL of Dataplane API
          example: https://api-ab1234l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com
          readOnly: true
          type: string
      readOnly: true
      type: object
    v1beta1.Cluster.KafkaAPI:
      description: Describes specifics about redpanda's Kafka API.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta1.MTLSSpec'
        seed_brokers:
          description: Kafka API Seed Brokers (also known as Bootstrap servers).
          items:
            type: string
          readOnly: true
          type: array
      type: object
    v1beta1.Cluster.Prometheus:
      description: Describes specifics about the Prometheus metrics endpoint
      properties:
        url:
          description: URL of Prometheus API
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
          readOnly: true
          type: string
      readOnly: true
      type: object
    v1beta1.Cluster.RedpandaConsole:
      description: Describes specifics about the Redpanda Console endpoint
      properties:
        url:
          description: URL of Redpanda Console API
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
          readOnly: true
          type: string
      readOnly: true
      type: object
    v1beta1.Cluster.State:
      description: State describes the state of the cluster.
      enum:
        - STATE_CREATING_AGENT
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETING_AGENT
        - STATE_UPGRADING
        - STATE_FAILED
      type: string
    v1beta1.Cluster.Type:
      description: Type of the Cluster. Immutable. Can only be set on cluster creation.
      enum:
        - TYPE_DEDICATED
        - TYPE_BYOC
      type: string
    v1beta1.CreateClusterMetadata:
      description: Resource describing an in-progress CreateCluster Operation.
      properties:
        cluster_id:
          description: ID of the Cluster created by this operation.
          type: string
      title: CreateClusterMetadata
      type: object
    v1beta1.CreateNetworkMetadata:
      description: Resource describing an in-progress CreateNetwork Operation.
      properties:
        network_id:
          description: ID of the network created by this Operation.
          type: string
      title: CreateNetworkMetadata
      type: object
    v1beta1.CustomerManagedAWSCloudStorageBucket:
      description: AWS Storage Bucket Specification by ARN
      properties:
        arn:
          description: The identifier of AWS storage bucket.
          type: string
      required:
        - arn
      title: AWS Storage Bucket
      type: object
    v1beta1.CustomerManagedAWSSubnets:
      description: AWS DynamoDB Table Specification
      properties:
        arns:
          items:
            type: string
          title: The identifiers of AWS subnets
          type: array
      required:
        - arns
      title: AWS DynamoDB Table
      type: object
    v1beta1.CustomerManagedAWSVPC:
      description: AWS DynamoDB Table Specification
      properties:
        arn:
          title: The identifier of AWS VPC
          type: string
      required:
        - arn
      title: AWS DynamoDB Table
      type: object
    v1beta1.CustomerManagedDynamoDBTable:
      description: AWS DynamoDB Table Specification
      properties:
        arn:
          description: The identifier of AWS DynamoDB table.
          type: string
      required:
        - arn
      title: AWS DynamoDB Table
      type: object
    v1beta1.CustomerManagedGoogleCloudStorageBucket:
      description: GCP Storage Bucket Specification
      properties:
        name:
          title: |-
            The name of GCP storage bucket.
            Naming restrictions: https://cloud.google.com/storage/docs/buckets?_ga=2.149222271.-875130499.1677603347#naming
          type: string
      required:
        - name
      title: GCP Storage Bucket
      type: object
    v1beta1.DeleteClusterMetadata:
      description: Resource describing an in-progress DeleteCluster Operation.
      title: DeleteClusterMetadata
      type: object
    v1beta1.DeleteNetworkMetadata:
      description: Resource describing an in-progress DeleteNetwork Operation.
      title: DeleteNetworkMetadata
      type: object
    v1beta1.ListClustersRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/v1beta1.CloudProvider'
        name:
          type: string
        namespace_id:
          type: string
        network_id:
          type: string
        region:
          type: string
      type: object
    v1beta1.ListClustersResponse:
      description: ListClustersResponse is the response of ListClusters.
      properties:
        clusters:
          description: Clusters matching the request
          items:
            $ref: '#/components/schemas/v1beta1.Cluster'
          maxItems: 100
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as next_page_token in the next call to this endpoint.
          type: string
      type: object
    v1beta1.ListNetworksRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/v1beta1.CloudProvider'
        name:
          type: string
        namespace_id:
          type: string
        region:
          type: string
      type: object
    v1beta1.ListNetworksResponse:
      description: ListNetworksResponse is the response of ListNetworks.
      properties:
        networks:
          description: Networks matching the request
          items:
            $ref: '#/components/schemas/v1beta1.Network'
          maxItems: 100
          type: array
        next_page_token:
          type: string
      type: object
    v1beta1.ListOperationsRequest.Filter:
      properties:
        state:
          $ref: '#/components/schemas/v1beta1.Operation.State'
        type_in:
          items:
            $ref: '#/components/schemas/v1beta1.Operation.Type'
          type: array
      type: object
    v1beta1.ListOperationsResponse:
      properties:
        next_page_token:
          description: |-
            Page Token to fetch the next page. The value can be used as
            next_page_token in the next call to this endpoint. since the pagination is
            cursor based the last page will be encountered when the next page token is
            not set and the operations list is empty.
          type: string
        operations:
          description: Operations matching the request
          items:
            $ref: '#/components/schemas/v1beta1.Operation'
          maxItems: 100
          type: array
      title: ListOperationsResponse is the response of ListOperations
      type: object
    v1beta1.MTLSSpec:
      description: MTLSSpec describes the mTLS configuration of a component.
      properties:
        ca_certificates_pem:
          description: CA certificate in PEM format
          example: |-
            -----BEGIN CERTIFICATE-----
            MII........
            -----END CERTIFICATE-----
          items:
            type: string
          type: array
        enabled:
          description: Enable mTLS
          type: boolean
        principal_mapping_rules:
          description: Principal mapping rules for mTLS authentication. Only valid for Kafka API. See https://docs.redpanda.com/current/manage/security/authentication/#mtls.
          example:
            - RULE:.*CN=([^,]+).*/$1/
          items:
            type: string
          type: array
      type: object
    v1beta1.Network:
      description: Resource describing a Network.
      properties:
        cidr_block:
          description: network CIDR from where public and private subnets are derived. At least a 21 bits CIDR is required.
          type: string
        cloud_provider:
          $ref: '#/components/schemas/v1beta1.CloudProvider'
        cluster_type:
          $ref: '#/components/schemas/v1beta1.Cluster.Type'
        created_at:
          format: date-time
          readOnly: true
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/v1beta1.Network.CustomerManagedResources'
        id:
          description: ID of the network. ID is an output of CreateNetwork, and cannot be set by the caller.
          readOnly: true
          type: string
        name:
          description: The unique name of the network.
          example: development-network
          type: string
        namespace_id:
          description: Namespace id of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        region:
          title: The name of the region
          type: string
        state:
          $ref: '#/components/schemas/v1beta1.Network.State'
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
        - name
        - namespace_id
        - cloud_provider
        - region
        - type
      title: Network
      type: object
    v1beta1.Network.CustomerManagedResources:
      description: The cloud resources created by user.
      properties:
        aws:
          $ref: '#/components/schemas/v1beta1.Network.CustomerManagedResources.AWS'
        gcp:
          $ref: '#/components/schemas/v1beta1.Network.CustomerManagedResources.GCP'
      type: object
    v1beta1.Network.CustomerManagedResources.AWS:
      description: The AWS resources managed by user.
      properties:
        dynamodb_table:
          $ref: '#/components/schemas/v1beta1.CustomerManagedDynamoDBTable'
        management_bucket:
          $ref: '#/components/schemas/v1beta1.CustomerManagedAWSCloudStorageBucket'
        private_subnets:
          $ref: '#/components/schemas/v1beta1.CustomerManagedAWSSubnets'
        public_subnets:
          $ref: '#/components/schemas/v1beta1.CustomerManagedAWSSubnets'
        vpc:
          $ref: '#/components/schemas/v1beta1.CustomerManagedAWSVPC'
      required:
        - management_bucket
        - dynamodb_table
        - vpc
        - private_subnets
        - public_subnets
      title: AWS Customer Managed Resources
      type: object
    v1beta1.Network.CustomerManagedResources.GCP:
      description: The GCP resources managed by user.
      properties:
        management_bucket:
          $ref: '#/components/schemas/v1beta1.CustomerManagedGoogleCloudStorageBucket'
        network_name:
          title: |-
            The name of network that is created by user, and Redpanda cluster is deployed to.
            See GCP API: https://cloud.google.com/compute/docs/reference/rest/v1/networks
          type: string
        network_project_id:
          description: The GCP project ID where the network is created.
          type: string
      required:
        - network_name
        - network_project_id
        - management_bucket
      title: GCP Customer Managed Resources
      type: object
    v1beta1.Network.State:
      enum:
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETED
        - STATE_FAILED
      type: string
    v1beta1.Operation:
      description: Operation describes a long running operation
      properties:
        error:
          $ref: '#/components/schemas/rpc.Status'
        finished_at:
          description: Timestamp when the operation has finished.
          format: date-time
          type: string
        id:
          description: ID of the operation.
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/Any'
        resource_id:
          nullable: true
          title: ID of the associated resource
          type: string
        response:
          $ref: '#/components/schemas/Any'
        started_at:
          description: Timestamp when the operation has started.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/v1beta1.Operation.State'
        type:
          $ref: '#/components/schemas/v1beta1.Operation.Type'
      readOnly: true
      title: Operation
      type: object
    v1beta1.Operation.State:
      description: describes if the operation has finished, or is still in progress. Only if done is true, either error or result become available.
      enum:
        - STATE_IN_PROGRESS
        - STATE_COMPLETED
        - STATE_FAILED
      type: string
    v1beta1.Operation.Type:
      enum:
        - TYPE_CREATE_CLUSTER
        - TYPE_UPDATE_CLUSTER
        - TYPE_DELETE_CLUSTER
        - TYPE_CREATE_NETWORK
        - TYPE_DELETE_NETWORK
      type: string
    v1beta1.UpdateClusterMetadata:
      description: Resource describing an in-progress UpdateCluster Operation.
      title: UpdateClusterMetadata
      type: object
    v1beta2.CloudProvider:
      description: Cloud provider where resources are created.
      enum:
        - CLOUD_PROVIDER_AWS
        - CLOUD_PROVIDER_GCP
        - CLOUD_PROVIDER_AZURE
      type: string
    v1beta2.Cluster:
      description: Resource describing a Cluster.
      properties:
        aws_private_link:
          $ref: '#/components/schemas/AWSPrivateLinkStatus'
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        cloud_provider_tags:
          additionalProperties:
            type: string
          description: |-
            Tags placed on cloud resources.
            If the cloud provider is GCP and the name of a tag has the prefix "gcp.network-tag.", the tag
            is a network tag that will be added to the Redpanda cluster GKE nodes. Otherwise, the tag
            is a normal tag.
            For example, if the name of a tag is "gcp.network-tag.network-tag-foo", the network tag named
            "network-tag-foo" will be added to the Redpanda cluster GKE nodes.
            Note: The value of a network tag will be ignored.
            See the details on network tags at https://cloud.google.com/vpc/docs/add-remove-network-tags.
          type: object
        connection_type:
          $ref: '#/components/schemas/v1beta2.Cluster.ConnectionType'
        created_at:
          description: Cluster creation timestamp.
          format: date-time
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources'
        dataplane_api:
          $ref: '#/components/schemas/v1beta2.Cluster.DataplaneAPI'
        gcp_private_service_connect:
          $ref: '#/components/schemas/GCPPrivateServiceConnectStatus'
        http_proxy:
          $ref: '#/components/schemas/HTTPProxyStatus'
        id:
          description: ID of the cluster. ID is an output from the Create Cluster endpoint and cannot be set by the caller.
          type: string
        kafka_api:
          $ref: '#/components/schemas/v1beta2.Cluster.KafkaAPI'
        name:
          description: Unique name of the cluster.
          example: development-cluster
          type: string
        network_id:
          description: Network ID where cluster is placed.
          example: cjcuq79c4vs94fcufc2g
          type: string
        prometheus:
          $ref: '#/components/schemas/v1beta2.Cluster.Prometheus'
        read_replica_cluster_ids:
          description: IDs of clusters which may create read-only topics from this cluster.
          items:
            type: string
          type: array
        redpanda_console:
          $ref: '#/components/schemas/v1beta2.Cluster.RedpandaConsole'
        redpanda_version:
          description: Current Redpanda version of the cluster.
          type: string
        region:
          description: Region represents the name of the region where the cluster will be provisioned.
          example: us-central1
          title: Cloud provider region.
          type: string
        resource_group_id:
          description: Resource group ID of the cluster.
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistryStatus'
        state:
          $ref: '#/components/schemas/v1beta2.Cluster.State'
        state_description:
          $ref: '#/components/schemas/rpc.Status'
        throughput_tier:
          description: Throughput tier of the cluster.
          type: string
        type:
          $ref: '#/components/schemas/v1beta2.Cluster.Type'
        updated_at:
          description: Cluster update timestamp.
          format: date-time
          type: string
        zones:
          description: |-
            Zones of the cluster. Must be valid zones within the selected region.
            If multiple zones are used, the cluster is a multi-AZ cluster.
          items:
            type: string
          type: array
      title: Cluster
      type: object
    v1beta2.Cluster.ConnectionType:
      description: |-
        Cluster connection type.
        Private clusters are not exposed to the internet.
        For BYOC clusters, **Private** is best-practice.
      enum:
        - CONNECTION_TYPE_PUBLIC
        - CONNECTION_TYPE_PRIVATE
      type: string
    v1beta2.Cluster.DataplaneAPI:
      description: Cluster's Data Plane API properties.
      properties:
        url:
          description: Data Plane API URL.
          example: https://api-ab1234l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com
          readOnly: true
          type: string
      type: object
    v1beta2.Cluster.KafkaAPI:
      description: Cluster's Kafka API properties.
      properties:
        mtls:
          $ref: '#/components/schemas/v1beta2.MTLSSpec'
        seed_brokers:
          description: Kafka API Seed Brokers (also known as Bootstrap servers).
          items:
            type: string
          type: array
      type: object
    v1beta2.Cluster.Prometheus:
      description: Prometheus metrics endpoint properties.
      properties:
        url:
          description: Prometheus API URL.
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
          readOnly: true
          type: string
      readOnly: true
      type: object
    v1beta2.Cluster.RedpandaConsole:
      description: Cluster's Redpanda Console properties.
      properties:
        url:
          description: Redpanda Console API URL.
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
          readOnly: true
          type: string
      readOnly: true
      type: object
    v1beta2.Cluster.State:
      description: State describes the state of the cluster.
      enum:
        - STATE_CREATING_AGENT
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETING_AGENT
        - STATE_UPGRADING
        - STATE_FAILED
      type: string
    v1beta2.Cluster.Type:
      description: Cluster type. Type is immutable and can only be set on cluster creation.
      enum:
        - TYPE_DEDICATED
        - TYPE_BYOC
      type: string
    v1beta2.CustomerManagedAWSCloudStorageBucket:
      description: AWS storage bucket properties by ARN.
      properties:
        arn:
          description: AWS storage bucket identifier.
          type: string
      required:
        - arn
      title: AWS Storage Bucket
      type: object
    v1beta2.CustomerManagedAWSSubnets:
      description: AWS DynamoDB Table Specification
      properties:
        arns:
          description: AWS subnet identifiers.
          items:
            type: string
          type: array
      required:
        - arns
      title: AWS DynamoDB Table
      type: object
    v1beta2.CustomerManagedAWSVPC:
      description: AWS DynamoDB Table Specification
      properties:
        arn:
          description: AWS VPC identifier.
          type: string
      required:
        - arn
      title: AWS DynamoDB Table
      type: object
    v1beta2.CustomerManagedDynamoDBTable:
      description: AWS DynamoDB table specification.
      properties:
        arn:
          description: AWS DynamoDB table identifier.
          type: string
      required:
        - arn
      title: AWS DynamoDB Table
      type: object
    v1beta2.CustomerManagedGoogleCloudStorageBucket:
      description: GCP storage bucket properties.
      properties:
        name:
          description: Name of GCP storage bucket. See the official [GCP documentation](https://cloud.google.com/storage/docs/buckets#naming) for naming restrictions.
          type: string
      required:
        - name
      title: GCP Storage Bucket
      type: object
    v1beta2.CustomerManagedResources:
      description: The cloud resources created by user.
      properties:
        aws:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS'
        gcp:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP'
      type: object
    v1beta2.CustomerManagedResources.AWS:
      description: AWS resources created by user.
      properties:
        agent_instance_profile:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.InstanceProfile'
        connectors_node_group_instance_profile:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.InstanceProfile'
        connectors_node_group_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        connectors_secrets_manager_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        console_secrets_manager_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        k8s_cluster_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        redpanda_cloud_storage_manager_policy:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Policy'
        redpanda_cloud_storage_manager_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        redpanda_node_group_instance_profile:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.InstanceProfile'
        redpanda_node_group_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
        utility_node_group_instance_profile:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.InstanceProfile'
        utility_node_group_role:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.AWS.Role'
      type: object
    v1beta2.CustomerManagedResources.AWS.InstanceProfile:
      description: AWS instance profile.
      properties:
        arn:
          description: AWS instance profile ARN.
          type: string
      required:
        - arn
      title: Instance Profile
      type: object
    v1beta2.CustomerManagedResources.AWS.Policy:
      description: Policy identifies AWS policy.
      properties:
        arn:
          description: AWS policy ARN.
          type: string
      required:
        - arn
      title: Policy
      type: object
    v1beta2.CustomerManagedResources.AWS.Role:
      description: Role identifies AWS role.
      properties:
        arn:
          description: AWS role ARN.
          type: string
      required:
        - arn
      title: Role
      type: object
    v1beta2.CustomerManagedResources.GCP:
      description: GCP resources created and managed by user, and required to deploy the Redpanda cluster. See [Configure a Customer-Managed VPC on GCP](https://docs.redpanda.com/current/deploy/deployment-option/cloud/vpc-byo-gcp/).
      properties:
        agent_service_account:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.ServiceAccount'
        connector_service_account:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.ServiceAccount'
        console_service_account:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.ServiceAccount'
        gke_service_account:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.ServiceAccount'
        psc_nat_subnet_name:
          description: NAT subnet name if GCP Private Service Connect (a.k.a Private Link) is enabled.
          type: string
        redpanda_cluster_service_account:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.ServiceAccount'
        subnet:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.Subnet'
        tiered_storage_bucket:
          $ref: '#/components/schemas/v1beta2.CustomerManagedGoogleCloudStorageBucket'
      required:
        - subnet
        - agent_service_account
        - console_service_account
        - connector_service_account
        - redpanda_cluster_service_account
        - gke_service_account
        - tiered_storage_bucket
      title: GCP Customer-Managed Resoures
      type: object
    v1beta2.CustomerManagedResources.GCP.ServiceAccount:
      description: GCP service account.
      properties:
        email:
          description: GCP service account email.
          type: string
      required:
        - email
      title: Service Account
      type: object
    v1beta2.CustomerManagedResources.GCP.Subnet:
      description: GCP subnet properties. See the official [GCP API reference](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks).
      properties:
        k8s_master_ipv4_range:
          description: Kubernetes Master IPv4 range, e.g. 10.0.0.0/24.
          type: string
        name:
          description: Subnet name.
          type: string
        secondary_ipv4_range_pods:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range'
        secondary_ipv4_range_services:
          $ref: '#/components/schemas/v1beta2.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range'
      required:
        - name
        - secondary_ipv4_range_pods
        - secondary_ipv4_range_services
        - k8s_master_ipv4_range
      title: Subnet
      type: object
    v1beta2.CustomerManagedResources.GCP.Subnet.SecondaryIPv4Range:
      description: Secondary IPv4 range.
      properties:
        name:
          type: string
      type: object
    v1beta2.ListClustersRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        name:
          description: Name of cluster.
          type: string
        network_id:
          description: Network ID.
          type: string
        region:
          description: Cloud provider region.
          type: string
        resource_group_id:
          description: Resource group ID.
          type: string
      type: object
    v1beta2.ListClustersResponse:
      description: ListClustersResponse is the response of ListClusters.
      properties:
        clusters:
          description: Clusters matching the request.
          items:
            $ref: '#/components/schemas/v1beta2.Cluster'
          maxItems: 100
          type: array
        next_page_token:
          description: Page token to fetch the next page. The value can be used as `next_page_token` in the next call to this endpoint.
          type: string
      type: object
    v1beta2.ListNetworksRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        name:
          description: Name of network.
          type: string
        region:
          description: Name of cloud provider region.
          type: string
        resource_group_id:
          description: Resource group ID.
          type: string
      type: object
    v1beta2.ListNetworksResponse:
      description: ListNetworksResponse is the response of ListNetworks.
      properties:
        networks:
          description: Networks matching the request
          items:
            $ref: '#/components/schemas/v1beta2.Network'
          maxItems: 100
          type: array
        next_page_token:
          type: string
      type: object
    v1beta2.ListOperationsRequest.Filter:
      properties:
        state:
          $ref: '#/components/schemas/v1beta2.Operation.State'
        type_in:
          items:
            $ref: '#/components/schemas/v1beta2.Operation.Type'
          type: array
      type: object
    v1beta2.ListOperationsResponse:
      properties:
        next_page_token:
          description: |-
            Page Token to fetch the next page. The value can be used as
            next_page_token in the next call to this endpoint. since the pagination is
            cursor based the last page will be encountered when the next page token is
            not set and the operations list is empty.
          type: string
        operations:
          description: Operations matching the request
          items:
            $ref: '#/components/schemas/v1beta2.Operation'
          maxItems: 100
          type: array
      title: ListOperationsResponse is the response of ListOperations
      type: object
    v1beta2.MTLSSpec:
      description: mTLS configuration.
      properties:
        ca_certificates_pem:
          description: CA certificate in PEM format.
          example: |-
            -----BEGIN CERTIFICATE-----
            MII........
            -----END CERTIFICATE-----
          items:
            type: string
          type: array
        enabled:
          description: Whether mTLS is enabled.
          type: boolean
        principal_mapping_rules:
          description: Principal mapping rules for mTLS authentication. Only valid for Kafka API. See the Redpanda documentation on [configuring authentication](https://docs.redpanda.com/current/manage/security/authentication/#mtls).
          example:
            - RULE:.*CN=([^,]+).*/$1/
          items:
            type: string
          type: array
      type: object
    v1beta2.Network:
      description: Resource describing a Network.
      properties:
        cidr_block:
          description: Network CIDR from where public and private subnets are derived. At least a 21 bits CIDR is required.
          type: string
        cloud_provider:
          $ref: '#/components/schemas/v1beta2.CloudProvider'
        cluster_type:
          $ref: '#/components/schemas/v1beta2.Cluster.Type'
        created_at:
          description: Network creation timestamp.
          format: date-time
          readOnly: true
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/v1beta2.Network.CustomerManagedResources'
        id:
          description: Network ID. The ID is an output of the Create Network request and cannot be set by the caller.
          readOnly: true
          type: string
        name:
          description: The unique name of the network.
          example: development-network
          type: string
        region:
          description: Region where network is placed.
          type: string
        resource_group_id:
          description: Resource group ID of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        state:
          $ref: '#/components/schemas/v1beta2.Network.State'
        updated_at:
          description: Network update timestamp.
          format: date-time
          readOnly: true
          type: string
      required:
        - name
        - resource_group_id
        - cloud_provider
        - region
        - type
      title: Network
      type: object
    v1beta2.Network.CustomerManagedResources:
      description: Cloud resources created by user.
      properties:
        aws:
          $ref: '#/components/schemas/v1beta2.Network.CustomerManagedResources.AWS'
        gcp:
          $ref: '#/components/schemas/v1beta2.Network.CustomerManagedResources.GCP'
      type: object
    v1beta2.Network.CustomerManagedResources.AWS:
      description: The AWS resources managed by user.
      properties:
        dynamodb_table:
          $ref: '#/components/schemas/v1beta2.CustomerManagedDynamoDBTable'
        management_bucket:
          $ref: '#/components/schemas/v1beta2.CustomerManagedAWSCloudStorageBucket'
        private_subnets:
          $ref: '#/components/schemas/v1beta2.CustomerManagedAWSSubnets'
        public_subnets:
          $ref: '#/components/schemas/v1beta2.CustomerManagedAWSSubnets'
        vpc:
          $ref: '#/components/schemas/v1beta2.CustomerManagedAWSVPC'
      required:
        - management_bucket
        - dynamodb_table
        - vpc
        - private_subnets
        - public_subnets
      title: AWS Customer Managed Resources
      type: object
    v1beta2.Network.CustomerManagedResources.GCP:
      description: GCP resources created and managed by user, and required to deploy the Redpanda cluster. See [Configure a Customer-Managed VPC on GCP](https://docs.redpanda.com/current/deploy/deployment-option/cloud/vpc-byo-gcp/) for details.
      properties:
        management_bucket:
          $ref: '#/components/schemas/v1beta2.CustomerManagedGoogleCloudStorageBucket'
        network_name:
          description: |-
            Name of user-created network where the Redpanda cluster is deployed to.
            See the official [GCP API reference](https://cloud.google.com/compute/docs/reference/rest/v1/networks).
          type: string
        network_project_id:
          description: GCP project ID where the network is created.
          type: string
      required:
        - network_name
        - network_project_id
        - management_bucket
      title: GCP Customer Managed Resources
      type: object
    v1beta2.Network.State:
      enum:
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETED
        - STATE_FAILED
      type: string
    v1beta2.Operation:
      description: Operation describes a long running operation
      properties:
        error:
          $ref: '#/components/schemas/rpc.Status'
        finished_at:
          description: Timestamp when the operation has finished.
          format: date-time
          type: string
        id:
          description: ID of the operation.
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/OperationMetadata'
        resource_id:
          nullable: true
          title: ID of the associated resource
          type: string
        response:
          $ref: '#/components/schemas/OperationResponse'
        started_at:
          description: Timestamp when the operation has started.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/v1beta2.Operation.State'
        type:
          $ref: '#/components/schemas/v1beta2.Operation.Type'
      readOnly: true
      title: Operation
      type: object
    v1beta2.Operation.State:
      description: describes if the operation has finished, or is still in progress. Only if done is true, either error or result become available.
      enum:
        - STATE_IN_PROGRESS
        - STATE_COMPLETED
        - STATE_FAILED
      type: string
    v1beta2.Operation.Type:
      enum:
        - TYPE_CREATE_CLUSTER
        - TYPE_UPDATE_CLUSTER
        - TYPE_DELETE_CLUSTER
        - TYPE_CREATE_NETWORK
        - TYPE_DELETE_NETWORK
      type: string
  securitySchemes:
    auth0:
      description: RedpandaCloud
      flows:
        implicit:
          authorizationUrl: https://auth.prd.cloud.redpanda.com/oauth/authorize
          scopes: {}
          x-client-id: dQjapNIAHhF7EQqQToRla3yEII9sUSap
      type: oauth2
info:
  description: |-
    <h2>Regions</h2>Throughput Tiers define the sizing of a cluster. Availability depends on the region and the cluster type (BYOC,Dedicated).<h3>GCP</h3>
    <table><tr><th>Region</th><th>Zones</th><th>Throughput Tiers</th></tr><tr><td>asia-south1</td><td>asia-south1-a,asia-south1-b,asia-south1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>asia-southeast1</td><td>asia-southeast1-a,asia-southeast1-b,asia-southeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>australia-southeast1</td><td>australia-southeast1-a,australia-southeast1-b,australia-southeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west1</td><td>europe-west1-b,europe-west1-c,europe-west1-d</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west2</td><td>europe-west2-a,europe-west2-b,europe-west2-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west3</td><td>europe-west3-a,europe-west3-b,europe-west3-c</td><td>tier-1-gcp-v2-x86: BYOC<br>tier-2-gcp-v2-x86: BYOC<br>tier-3-gcp-v2-x86: BYOC<br>tier-4-gcp-v2-x86: BYOC<br>tier-5-gcp-v2-x86: BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>northamerica-northeast1</td><td>northamerica-northeast1-a,northamerica-northeast1-b,northamerica-northeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-central1</td><td>us-central1-a,us-central1-b,us-central1-c,us-central1-f</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-east1</td><td>us-east1-b,us-east1-c,us-east1-d</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-east4</td><td>us-east4-a,us-east4-b,us-east4-c</td><td>tier-1-gcp-v2-x86: BYOC<br>tier-2-gcp-v2-x86: BYOC<br>tier-3-gcp-v2-x86: BYOC<br>tier-4-gcp-v2-x86: BYOC<br>tier-5-gcp-v2-x86: BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-west1</td><td>us-west1-a,us-west1-b,us-west1-c</td><td>tier-1-gcp-v2-x86: BYOC<br>tier-2-gcp-v2-x86: BYOC<br>tier-3-gcp-v2-x86: BYOC<br>tier-4-gcp-v2-x86: BYOC<br>tier-5-gcp-v2-x86: BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br>tier-8-gcp-v2-x86: BYOC<br>tier-9-gcp-v2-x86: BYOC<br></td></tr></table><h3>AWS</h3>
    <table><tr><th>Region</th><th>Zones</th><th>Throughput Tiers</th></tr><tr><td>af-south-1</td><td>afs1-az1,afs1-az2,afs1-az3</td><td>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ap-south-1</td><td>aps1-az1,aps1-az2,aps1-az3</td><td>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ap-southeast-1</td><td>apse1-az1,apse1-az2,apse1-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ap-southeast-2</td><td>apse2-az1,apse2-az3,apse2-az2</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ca-central-1</td><td>cac1-az1,cac1-az2,cac1-az4</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-central-1</td><td>euc1-az2,euc1-az3,euc1-az1</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-west-1</td><td>euw1-az1,euw1-az2,euw1-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-west-2</td><td>euw2-az1,euw2-az2,euw2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>sa-east-1</td><td>sae1-az1,sae1-az2,sae1-az3</td><td>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-east-1</td><td>use1-az2,use1-az4,use1-az6</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-east-2</td><td>use2-az1,use2-az2,use2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-west-2</td><td>usw2-az1,usw2-az2,usw2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr></table>
  title: Redpanda Cloud
  version: v1beta2
openapi: 3.0.3
paths:
  /v1alpha1/acls:
    delete:
      description: Delete all ACLs that match the filter criteria. The `filter.` query string parameters find matching ACLs that meet all specified conditions.
      operationId: ACLService_DeleteACLs
      parameters:
        - description: |-
            The type of resource (topic, consumer group, etc.) this
            ACL targets.
          in: query
          name: filter.resource_type
          required: true
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - description: The name of the resource this ACL targets.
          in: query
          name: filter.resource_name
          schema:
            type: string
        - description: |-
            The pattern to use for matching the specified resource_name
            (any, exact match, literal, or prefixed).
          in: query
          name: filter.resource_pattern_type
          required: true
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          in: query
          name: filter.principal
          schema:
            type: string
        - description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          in: query
          name: filter.host
          schema:
            type: string
        - description: The operation that is allowed or denied (e.g. READ).
          in: query
          name: filter.operation
          required: true
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - description: Whether the operation should be allowed or denied.
          in: query
          name: filter.permission_type
          required: true
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete ACLs
      tags:
        - ACLService
    get:
      description: List all ACLs. The `filter.` query string parameters find matching ACLs that meet all specified conditions.
      operationId: ACLService_ListACLs
      parameters:
        - description: |-
            The type of resource (topic, consumer group, etc.) this
            ACL targets.
          in: query
          name: filter.resource_type
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - description: The name of the resource this ACL targets.
          in: query
          name: filter.resource_name
          schema:
            type: string
        - description: |-
            The pattern to use for matching the specified resource_name
            (any, exact match, literal, or prefixed).
          in: query
          name: filter.resource_pattern_type
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          in: query
          name: filter.principal
          schema:
            type: string
        - description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          in: query
          name: filter.host
          schema:
            type: string
        - description: The operation that is allowed or denied (e.g. READ).
          in: query
          name: filter.operation
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - description: Whether the operation should be allowed or denied.
          in: query
          name: filter.permission_type
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List ACLs
      tags:
        - ACLService
    post:
      description: Create a new ACL.
      operationId: ACLService_CreateACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLRequest'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateACLResponse'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create ACL
      tags:
        - ACLService
  /v1alpha1/connect/clusters:
    get:
      description: List connect clusters available for being consumed by the console's kafka-connect service.
      operationId: KafkaConnectService_ListConnectClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectClustersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connect clusters
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}:
    get:
      description: Get information about an available Kafka Connect cluster.
      operationId: KafkaConnectService_GetConnectCluster
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectCluster'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Connect cluster not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connect cluster
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors:
    get:
      description: List connectors managed by the Kafka Connect service.
      operationId: KafkaConnectService_ListConnectors
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connectors
      tags:
        - KafkaConnectService
    post:
      description: Create a connector with the specified configuration.
      operationId: KafkaConnectService_CreateConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorSpec'
        required: true
        x-originalParamName: connector
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}:
    delete:
      description: Delete a connector. This operation force stops all tasks and also deletes the connector configuration.
      operationId: KafkaConnectService_DeleteConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete connector
      tags:
        - KafkaConnectService
    get:
      description: Get information about a connector in a specific cluster.
      operationId: KafkaConnectService_GetConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/config:
    get:
      description: Get the configuration for the connector.
      operationId: KafkaConnectService_GetConnectorConfig
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector configuration
      tags:
        - KafkaConnectService
    put:
      description: Update the configuration for an existing connector with the specified name, or create a new connector using the given configuration. Returns information about the connector after the change has been made.
      operationId: KafkaConnectService_UpsertConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector. If a connector with this name does not already exist, a new connector is created.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              required:
                - config
              type: object
        description: Connector configuration property.
        required: true
        x-originalParamName: config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Updated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Upsert connector configuration
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/pause:
    put:
      description: Pause the connector and its tasks, which stops messages from processing until the connector is resumed. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_PauseConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Pause request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Pause connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/restart:
    post:
      description: Triggers a connector restart. You must specify whether or not tasks are also restarted, and whether only failed connectors are restarted.
      operationId: KafkaConnectService_RestartConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Options'
        required: true
        x-originalParamName: options
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Restart connector request success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Restart connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/resume:
    put:
      description: Resume a paused connector and its tasks, and resumes message processing. This call is asynchronous and may take some time to process. If the connector was not paused, this operation does not do anything.
      operationId: KafkaConnectService_ResumeConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Resume request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Resume connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/status:
    get:
      description: Gets the current status of the connector, including the state for each of its tasks, error information, etc.
      operationId: KafkaConnectService_GetConnectorStatus
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorStatus'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector status
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/stop:
    put:
      description: Stops a connector, but does not delete it. All tasks for the connector are shut down completely. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_StopConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Stop connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/topics:
    get:
      description: Returns a list of connector topic names. If the connector is inactive, this call returns an empty list.
      operationId: KafkaConnectService_ListConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/topics/reset:
    put:
      description: Resets the set of topic names that the connector is using.
      operationId: KafkaConnectService_ResetConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector using the topics to be reset.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Reset connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/secrets:
    get:
      description: 'List Kafka Connect cluster secrets. Optional: filter based on secret name and labels.'
      operationId: SecretService_ListConnectSecrets
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Substring match on secret name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.labels[string]
          schema:
            type: string
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Connect Cluster Secrets
      tags:
        - SecretService
    post:
      description: Create a Kafka Connect cluster secret.
      operationId: SecretService_CreateConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: CreateConnectSecretRequest is the request of CreateConnectSecret.
              properties:
                labels:
                  additionalProperties:
                    type: string
                  description: Secret labels.
                  type: object
                name:
                  description: Name of connector.
                  type: string
                secret_data:
                  description: The secret data.
                  format: byte
                  type: string
              required:
                - name
                - secret_data
              type: object
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Secret created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Connect Cluster Secret
      tags:
        - SecretService
  /v1alpha1/connect/clusters/{cluster_name}/secrets/{id}:
    delete:
      description: Delete a Kafka Connect cluster secret.
      operationId: SecretService_DeleteConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: ID of the secret to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Secret deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Connect Cluster Secret
      tags:
        - SecretService
    get:
      description: Get a specific Kafka Connect cluster secret.
      operationId: SecretService_GetConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: The ID of the secret to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Connect Cluster Secret
      tags:
        - SecretService
    put:
      description: Update a Kafka Connect cluster secret.
      operationId: SecretService_UpdateConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: ID of the secret to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              description: UpdateConnectSecretRequest is the request of UpdateConnectSecret.
              properties:
                labels:
                  additionalProperties:
                    type: string
                  description: Secret labels.
                  type: object
                secret_data:
                  description: The secret data.
                  format: byte
                  type: string
              required:
                - secret_data
              type: object
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Connect Cluster Secret
      tags:
        - SecretService
  /v1alpha1/topics:
    get:
      description: 'List topics, with partition count and replication factor. Optional: filter based on topic name.'
      operationId: TopicService_ListTopics
      parameters:
        - description: Substring match on topic name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Topics
      tags:
        - TopicService
    post:
      description: Create a [topic](https://docs.redpanda.com/current/deploy/deployment-option/cloud/create-topic/).
      operationId: TopicService_CreateTopic
      parameters:
        - description: |-
            If true, makes this request a dry run; everything is validated but
            no topics are actually created.
          in: query
          name: validate_only
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequest.Topic'
        description: The topic to create.
        required: true
        x-originalParamName: topic
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alpha1.Topic'
          description: Topic created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Topic
      tags:
        - TopicService
  /v1alpha1/topics/{name}:
    delete:
      description: Delete the Kafka topic with the requested name.
      operationId: TopicService_DeleteTopic
      parameters:
        - description: Topic name.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Topic deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Requested topic does not exist
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Topic
      tags:
        - TopicService
  /v1alpha1/topics/{topic_name}/configurations:
    get:
      description: Get key-value configs for a topic.
      operationId: TopicService_GetTopicConfigurations
      parameters:
        - description: Topic name
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Topic Configurations
      tags:
        - TopicService
    patch:
      description: Update a subset of the topic configurations.
      operationId: TopicService_UpdateTopicConfigurations
      parameters:
        - description: Topic name
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Topic Configuration
      tags:
        - TopicService
    put:
      description: Update the entire set of key-value configurations for a topic. Config entries that are not provided in the request are removed and will fall back to their default values.
      operationId: TopicService_SetTopicConfigurations
      parameters:
        - description: Name of topic.
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SetConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set Topic Configurations
      tags:
        - TopicService
  /v1alpha1/transforms:
    get:
      description: 'Retrieve a list of Wasm transforms. Optional: filter based on transform name.'
      operationId: TransformService_ListTransforms
      parameters:
        - description: Substring match on transform name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              example:
                next_page_token: ""
                transforms:
                  - environment_variables: []
                    input_topic_name: topic1
                    name: transform1
                    output_topic_names:
                      - output-topic11
                      - output-topic12
                    statuses:
                      - broker_id: 1
                        lag: 1
                        partition_id: 1
                        status: PARTITION_STATUS_RUNNING
                  - environment_variables: []
                    input_topic_name: topic2
                    name: transform2
                    output_topic_names:
                      - output-topic21
                      - output-topic22
                    statuses:
                      - broker_id: 2
                        lag: 2
                        partition_id: 2
                        status: PARTITION_STATUS_RUNNING
              schema:
                $ref: '#/components/schemas/ListTransformsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Transforms
      tags:
        - TransformService
    put:
      description: Initiate deployment of a new Wasm transform. This endpoint uses multipart/form-data encoding. Following deployment, a brief period is required before the Wasm transform becomes operational. Monitor the partition statuses to check whether the transform is active. This usually takes around 3s, but no longer than 10s.
      operationId: TransformService_DeployTransform
      requestBody:
        content:
          multipart/form-data:
            schema:
              example: '{"name":"redact-orders", "input_topic_name":"orders", "output_topic_names":["orders-redacted"], "environment_variables":[{"key":"LOGGER_LEVEL", "value":"DEBUG"}]}'
              properties:
                metadata:
                  $ref: '#/components/schemas/DeployTransformRequest'
                wasm_binary:
                  description: Binary file containing the compiled WASM transform. The maximum size for this file is 10MiB.
                  format: binary
                  type: string
              type: object
        description: Transform metadata as well as the WASM binary
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformMetadata'
          description: Created
      summary: Deploy Transform
      tags:
        - TransformService
  /v1alpha1/transforms/{name}:
    delete:
      description: Delete a Wasm transform with the requested name.
      operationId: TransformService_DeleteTransform
      parameters:
        - description: Name of transform.
          example:
            name: transform1
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: Transform deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Transform
      tags:
        - TransformService
    get:
      description: Get a specific Wasm transform.
      operationId: TransformService_GetTransform
      parameters:
        - description: Name of transform.
          example:
            name: transform1
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transform:
                  environment_variables: []
                  input_topic_name: topic1
                  name: transform1
                  output_topic_names:
                    - output-topic1
                    - output-topic2
                  statuses:
                    - broker_id: 1
                      lag: 1
                      partition_id: 1
                      status: PARTITION_STATUS_RUNNING
              schema:
                $ref: '#/components/schemas/GetTransformResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Transform
      tags:
        - TransformService
  /v1alpha1/users:
    get:
      description: 'List users. Optional: filter based on username.'
      operationId: UserService_ListUsers
      parameters:
        - description: Username.
          in: query
          name: filter.name
          schema:
            type: string
        - description: Substring match on username. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                next_page_token: ""
                users:
                  - name: payment-service
                  - name: jane
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Users
      tags:
        - UserService
    post:
      description: Create a new user.
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            example:
              mechanism: SASL_MECHANISM_SCRAM_SHA_256
              name: payment-service
              password: secure-password
            schema:
              $ref: '#/components/schemas/CreateUserRequest.User'
        required: true
        x-originalParamName: user
      responses:
        "201":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/CreateUserRequest.User'
          description: User created
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create User
      tags:
        - UserService
  /v1alpha1/users/{name}:
    delete:
      description: Delete the specified user
      operationId: UserService_DeleteUser
      parameters:
        - description: Username
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: User deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_RESOURCE_NOT_FOUND
                message: user not found
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete User
      tags:
        - UserService
  /v1alpha1/users/{user.name}:
    put:
      description: Update a user's credentials.
      operationId: UserService_UpdateUser
      parameters:
        - description: Username.
          in: path
          name: user.name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              user:
                mechanism: SASL_MECHANISM_SCRAM_SHA_256
                password: new-password
            schema:
              properties:
                mechanism:
                  $ref: '#/components/schemas/SASLMechanism'
                password:
                  description: Password.
                  type: string
              type: object
        required: true
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/UpdateUserResponse.User'
          description: OK
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update User
      tags:
        - UserService
  /v1beta2/clusters:
    get:
      description: List Redpanda clusters. The `filter.` query string parameters find matching clusters that meet all specified conditions.
      operationId: ClusterService_ListClusters
      parameters:
        - description: Resource group ID.
          in: query
          name: filter.resource_group_id
          schema:
            type: string
        - description: Name of cluster.
          in: query
          name: filter.name
          schema:
            type: string
        - description: Cloud provider region.
          in: query
          name: filter.region
          schema:
            type: string
        - description: Cloud provider.
          in: query
          name: filter.cloud_provider
          schema:
            enum:
              - CLOUD_PROVIDER_AWS
              - CLOUD_PROVIDER_GCP
              - CLOUD_PROVIDER_AZURE
            type: string
        - description: Network ID.
          in: query
          name: filter.network_id
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - description: Value of the `next_page_token` field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                clusters:
                  - cloud_provider: CLOUD_PROVIDER_GCP
                    cloud_provider_tags: {}
                    connection_type: CONNECTION_TYPE_PUBLIC
                    created_at: "2023-01-01T00:00:00Z"
                    customer_managed_resources: null
                    dataplane_api: null
                    http_proxy:
                      mtls:
                        ca_certificates_pem: []
                        enabled: false
                        principal_mapping_rules: []
                      url: https://pandaproxy-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    id: cjd3r21c4vs870t0ku30
                    kafka_api:
                      mtls: null
                      seed_brokers:
                        - seed-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    name: my-new-cluster
                    network_id: cjb69k1c4vs45df9bee0
                    prometheus:
                      url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                    read_replica_cluster_ids: []
                    redpanda_console:
                      url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api
                    redpanda_version: ""
                    region: us-west1
                    resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                    schema_registry:
                      mtls: null
                      url: schema-registry-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    state: STATE_READY
                    state_description: null
                    throughput_tier: tier-1-gcp-um4g
                    type: TYPE_DEDICATED
                    updated_at: "2023-01-01T00:00:00Z"
                    zones:
                      - us-west1-a
                      - us-west1-b
                      - us-west1-c
                next_page_token: some-opaque-string
              schema:
                $ref: '#/components/schemas/v1beta2.ListClustersResponse'
          description: OK
        "500":
          content:
            application/json:
              example:
                code: INTERNAL
                details: []
                message: Internal Server Error
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: List Clusters
      tags:
        - ClusterService
    post:
      description: Create a Redpanda cluster. Returns a long-running operation. Call `GET /v1beta2/operations/{id}` to check operation state. For BYOC clusters, follow additional steps to [create a BYOC cluster](https://docs.redpanda.com/current/deploy/deployment-option/cloud/api/cloud-controlplane-api/#additional-steps-to-create-a-byoc-cluster).
      operationId: ClusterService_CreateCluster
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: CLOUD_PROVIDER_GCP
              connection_type: CONNECTION_TYPE_PUBLIC
              name: my-new-cluster
              network_id: cjb69k1c4vs45df9bee0
              region: us-west1
              resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
              throughput_tier: tier-1-gcp-um4g
              type: TYPE_DEDICATED
              zones:
                - us-west1-a
                - us-west1-b
                - us-west1-c
            schema:
              $ref: '#/components/schemas/ClusterCreate'
        required: true
        x-originalParamName: cluster
      responses:
        "202":
          content:
            application/json:
              example:
                operation:
                  finished_at: null
                  id: cjb5uh9c4vs1td8emmcg
                  metadata:
                    '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateClusterMetadata
                    cluster_id: cjb5vehc4vs19qc11pjg
                  resource_id: cjb5vehc4vs19qc11pjg
                  started_at: null
                  state: STATE_IN_PROGRESS
                  type: TYPE_CREATE_CLUSTER
              schema:
                $ref: '#/components/schemas/CreateClusterOperation'
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: "404"
                  value:
                    code: INVALID_ARGUMENT
                    message: Invalid Request
                Invalid Cluster Type:
                  description: Invalid Cluster Type
                  summary: Invalid Cluster Type
                  value:
                    code: INVALID_ARGUMENT
                    message: Invalid Request
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Bad Request
        "409":
          content:
            application/json:
              examples:
                Conflict:
                  description: Conflict
                  summary: Conflict
                  value:
                    code: ALREADY_EXISTS
                    message: Cluster with given name already exists
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Conflict
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  description: Internal Server Error
                  summary: Internal Server Error
                  value:
                    code: INTERNAL
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Create Cluster
      tags:
        - ClusterService
  /v1beta2/clusters/{cluster.id}:
    patch:
      description: Update a Redpanda cluster.
      operationId: ClusterService_UpdateCluster
      parameters:
        - description: ID of the cluster.
          in: path
          name: cluster.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              schema_registry:
                mtls:
                  ca_certificates_pem:
                    - |-
                      -----BEGIN CERTIFICATE-----
                      MII........
                      -----END CERTIFICATE-----
                  enabled: true
            schema:
              description: Resource describing a Create Cluster.
              properties:
                aws_private_link:
                  $ref: '#/components/schemas/AWSPrivateLinkSpec'
                customer_managed_resources:
                  $ref: '#/components/schemas/CustomerManagedResourcesUpdate'
                gcp_private_service_connect:
                  $ref: '#/components/schemas/GCPPrivateServiceConnectSpec'
                http_proxy:
                  $ref: '#/components/schemas/HTTPProxySpec'
                kafka_api:
                  $ref: '#/components/schemas/KafkaAPISpec'
                name:
                  description: Unique name of the cluster.
                  example: development-cluster
                  type: string
                read_replica_cluster_ids:
                  description: IDs of clusters which may create read-only topics from this cluster.
                  items:
                    type: string
                  type: array
                schema_registry:
                  $ref: '#/components/schemas/SchemaRegistrySpec'
              title: ClusterUpdate
              type: object
        description: |-
          ClusterUpdate

          Resource describing a Create Cluster.
        required: true
        x-originalParamName: cluster
      responses:
        "202":
          content:
            application/json:
              example:
                operation:
                  finished_at: null
                  id: cjd5159c4vs6rgpkevsg
                  metadata:
                    '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.UpdateClusterMetadata
                  resource_id: cjd3r21c4vs870t0ku30
                  started_at: null
                  state: STATE_IN_PROGRESS
                  type: TYPE_UPDATE_CLUSTER
              schema:
                $ref: '#/components/schemas/UpdateClusterOperation'
          description: Accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Update Cluster
      tags:
        - ClusterService
  /v1beta2/clusters/{id}:
    delete:
      description: Delete a Redpanda Cluster. Returns a long-running operation. Call `GET /v1beta2/operations/{id}` to check operation state.
      operationId: ClusterService_DeleteCluster
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              example:
                operation:
                  finished_at: null
                  id: cjd4vu1c4vs5ugb02itg
                  metadata:
                    '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteClusterMetadata
                  resource_id: cjd3r21c4vs870t0ku30
                  started_at: null
                  state: STATE_IN_PROGRESS
                  type: TYPE_DELETE_CLUSTER
              schema:
                $ref: '#/components/schemas/DeleteClusterOperation'
          description: Accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Delete Cluster
      tags:
        - ClusterService
    get:
      description: Get information about a Redpanda cluster.
      operationId: ClusterService_GetCluster
      parameters:
        - example: cjd3r21c4vs870t0ku30
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                cluster:
                  cloud_provider: CLOUD_PROVIDER_GCP
                  cloud_provider_tags: {}
                  connection_type: CONNECTION_TYPE_PUBLIC
                  created_at: "2023-01-01T00:00:00Z"
                  customer_managed_resources: null
                  dataplane_api: null
                  http_proxy:
                    mtls:
                      ca_certificates_pem: []
                      enabled: false
                      principal_mapping_rules: []
                    url: https://pandaproxy-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                  id: cjd3r21c4vs870t0ku30
                  kafka_api:
                    mtls: null
                    seed_brokers:
                      - seed-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                  name: my-new-cluster
                  network_id: cjb69k1c4vs45df9bee0
                  prometheus:
                    url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                  read_replica_cluster_ids: []
                  redpanda_console:
                    url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api
                  redpanda_version: ""
                  region: us-west1
                  resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                  schema_registry:
                    mtls: null
                    url: schema-registry-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                  state: STATE_READY
                  state_description: null
                  throughput_tier: tier-1-gcp-um4g
                  type: TYPE_DEDICATED
                  updated_at: "2023-01-01T00:00:00Z"
                  zones:
                    - us-west1-a
                    - us-west1-b
                    - us-west1-c
              schema:
                $ref: '#/components/schemas/GetClusterResponse'
          description: OK
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details: []
                message: Cluster not found
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Get Cluster
      tags:
        - ClusterService
  /v1beta2/networks:
    get:
      description: List Redpanda Networks.
      operationId: NetworkService_ListNetworks
      parameters:
        - description: Resource group ID.
          in: query
          name: filter.resource_group_id
          schema:
            type: string
        - description: Name of network.
          in: query
          name: filter.name
          schema:
            type: string
        - description: Name of cloud provider region.
          in: query
          name: filter.region
          schema:
            type: string
        - description: Cloud provider.
          in: query
          name: filter.cloud_provider
          schema:
            enum:
              - CLOUD_PROVIDER_AWS
              - CLOUD_PROVIDER_GCP
              - CLOUD_PROVIDER_AZURE
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - description: Value of the `next_page_token` field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                networks:
                  - cidr_block: 10.0.0.0/20
                    cloud_provider: CLOUD_PROVIDER_GCP
                    cluster_type: TYPE_DEDICATED
                    created_at: "2023-01-01T00:00:00Z"
                    customer_managed_resources: null
                    id: cjd533pc4vs8pjdkrrv0
                    name: my-network
                    region: us-west1
                    resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                    state: STATE_READY
                    updated_at: "2023-01-01T00:00:00Z"
                next_page_token: some-opaque-string
              schema:
                $ref: '#/components/schemas/v1beta2.ListNetworksResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: List Networks
      tags:
        - NetworkService
    post:
      description: Create a Redpanda network. Returns a [long-running operation](https://docs.redpanda.com/current/deploy/deployment-option/cloud/api/cloud-controlplane-api/#long-running-operations). Call `GET /v1beta2/operations/{id}` to check operation state.
      operationId: NetworkService_CreateNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr_block: 10.0.0.0/20
              cloud_provider: CLOUD_PROVIDER_GCP
              cluster_type: TYPE_DEDICATED
              name: my-network
              region: us-west1
              resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
            schema:
              $ref: '#/components/schemas/NetworkCreate'
        required: true
        x-originalParamName: network
      responses:
        "202":
          content:
            application/json:
              example:
                operation:
                  finished_at: null
                  id: cjd55r9c4vsao59ucoqg
                  metadata:
                    '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateNetworkMetadata
                    network_id: cjd533pc4vs8pjdkrrv0
                  resource_id: cjd533pc4vs8pjdkrrv0
                  started_at: null
                  state: STATE_IN_PROGRESS
                  type: TYPE_CREATE_NETWORK
              schema:
                $ref: '#/components/schemas/CreateNetworkOperation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Create Network
      tags:
        - NetworkService
  /v1beta2/networks/{id}:
    delete:
      description: Delete a Redpanda network.
      operationId: NetworkService_DeleteNetwork
      parameters:
        - description: Network ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              example:
                operation:
                  finished_at: null
                  id: cjd58g1c4vscdqkcvbqg
                  metadata:
                    '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteNetworkMetadata
                  resource_id: cjd533pc4vs8pjdkrrv0
                  started_at: null
                  state: STATE_IN_PROGRESS
                  type: TYPE_DELETE_NETWORK
              schema:
                $ref: '#/components/schemas/DeleteNetworkOperation'
          description: Delete request accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Delete Network
      tags:
        - NetworkService
    get:
      description: Get information about a Redpanda network.
      operationId: NetworkService_GetNetwork
      parameters:
        - description: Network ID.
          example: cjd533pc4vs8pjdkrrv0
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                network:
                  cidr_block: 10.0.0.0/20
                  cloud_provider: CLOUD_PROVIDER_GCP
                  cluster_type: TYPE_DEDICATED
                  created_at: "2023-01-01T00:00:00Z"
                  customer_managed_resources: null
                  id: cjd533pc4vs8pjdkrrv0
                  name: my-network
                  region: us-west1
                  resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                  state: STATE_READY
                  updated_at: "2023-01-01T00:00:00Z"
              schema:
                $ref: '#/components/schemas/GetNetworkResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
      summary: Get Network
      tags:
        - NetworkService
  /v1beta2/operations:
    get:
      description: List operations. This is a generic endpoint and can be used to list any type of operation.
      operationId: OperationService_ListOperations
      parameters:
        - in: query
          name: filter.type_in
          schema:
            items:
              enum:
                - TYPE_CREATE_CLUSTER
                - TYPE_UPDATE_CLUSTER
                - TYPE_DELETE_CLUSTER
                - TYPE_CREATE_NETWORK
                - TYPE_DELETE_NETWORK
              type: string
            type: array
        - in: query
          name: filter.state
          schema:
            enum:
              - STATE_IN_PROGRESS
              - STATE_COMPLETED
              - STATE_FAILED
            type: string
        - description: Limit the number of operations returned per page, the page is capped to 100 operations.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response. If
            not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta2.ListOperationsResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Operations
      tags:
        - OperationService
  /v1beta2/operations/{id}:
    get:
      description: Get information about a long-running operation. This is a generic endpoint and can be used to retrieve any type of operation.
      operationId: OperationService_GetOperation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateCluster done:
                  description: Example of an operation response of a Cluster creation that is done
                  summary: Create Cluster Operation
                  value:
                    operation:
                      finished_at: null
                      id: cjb6cjpc4vs0b0spksbg
                      metadata:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateClusterMetadata
                        cluster_id: cjb69h1c4vs42pca89s0
                      resource_id: cjb69h1c4vs42pca89s0
                      response:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateClusterResponse
                        cluster:
                          cloud_provider: CLOUD_PROVIDER_GCP
                          cloud_provider_tags: {}
                          connection_type: CONNECTION_TYPE_PUBLIC
                          created_at: "2023-01-01T00:00:00Z"
                          customer_managed_resources: null
                          dataplane_api: null
                          http_proxy:
                            mtls:
                              ca_certificates_pem: []
                              enabled: false
                              principal_mapping_rules: []
                            url: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          id: cjb69h1c4vs42pca89s0
                          kafka_api:
                            mtls: null
                            seed_brokers:
                              - seed-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          name: my-new-cluster
                          network_id: cjb69k1c4vs45df9bee0
                          prometheus:
                            url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                          read_replica_cluster_ids: []
                          redpanda_console:
                            url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
                          redpanda_version: ""
                          region: us-west1
                          resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                          schema_registry:
                            mtls: null
                            url: schema-registry-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          state: STATE_READY
                          state_description: null
                          throughput_tier: tier-1
                          type: TYPE_DEDICATED
                          updated_at: "2023-01-01T00:00:00Z"
                          zones:
                            - us-west1-a
                            - us-west1-b
                            - us-west1-c
                      started_at: null
                      state: STATE_COMPLETED
                      type: TYPE_CREATE_CLUSTER
                CreateNetwork done:
                  description: Example of an operation response of a Network creation that is done
                  summary: CreateNetwork Operation
                  value:
                    operation:
                      finished_at: null
                      id: cjb6cg9c4vs08hd3poo0
                      metadata:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateNetworkMetadata
                        network_id: cjb6capc4vs0m91gh3kg
                      resource_id: cjb6capc4vs0m91gh3kg
                      response:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateNetworkResponse
                        network:
                          cidr_block: 10.0.0.0/20
                          cloud_provider: CLOUD_PROVIDER_GCP
                          cluster_type: TYPE_DEDICATED
                          created_at: "2023-01-01T00:00:00Z"
                          customer_managed_resources: null
                          id: cjb6capc4vs0m91gh3kg
                          name: my-new-cluster
                          region: us-central1
                          resource_group_id: dbc1ccee-93e8-4859-a1ae-3bcfc4ef0ded
                          state: STATE_READY
                          updated_at: "2023-01-01T00:00:00Z"
                      started_at: null
                      state: STATE_COMPLETED
                      type: TYPE_CREATE_NETWORK
                DeleteCluster done:
                  description: Example of an operation response of a cluster deletion that is done
                  summary: Delete Cluster Operation
                  value:
                    operation:
                      finished_at: null
                      id: cjd5tfpc4vsfi6jbjve0
                      metadata:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteClusterMetadata
                      resource_id: cjb69h1c4vs42pca89s0
                      started_at: null
                      state: STATE_COMPLETED
                      type: TYPE_DELETE_CLUSTER
                DeleteNetwork done:
                  description: Example of an operation response of a Network deletion that is done
                  summary: Delete Network Operation
                  value:
                    operation:
                      finished_at: null
                      id: cjd5tdpc4vsfvm2tav1g
                      metadata:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.DeleteNetworkMetadata
                      resource_id: cjb6capc4vs0m91gh3kg
                      started_at: null
                      state: STATE_COMPLETED
                      type: TYPE_DELETE_NETWORK
                Update done:
                  description: Example of an operation response of a Cluster update that is done
                  summary: Update Cluster Operation
                  value:
                    operation:
                      finished_at: null
                      id: cjd5tppc4vsf9o7lhcj0
                      metadata:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.UpdateClusterMetadata
                      resource_id: cjb69h1c4vs42pca89s0
                      response:
                        '@type': type.googleapis.com/redpanda.api.controlplane.v1beta2.CreateClusterResponse
                        cluster:
                          cloud_provider: CLOUD_PROVIDER_GCP
                          cloud_provider_tags: {}
                          connection_type: CONNECTION_TYPE_PUBLIC
                          created_at: "2023-01-01T00:00:00Z"
                          customer_managed_resources: null
                          dataplane_api: null
                          http_proxy:
                            mtls:
                              ca_certificates_pem: []
                              enabled: false
                              principal_mapping_rules: []
                            url: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          id: cjb69h1c4vs42pca89s0
                          kafka_api:
                            mtls: null
                            seed_brokers:
                              - seed-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          name: my-new-cluster
                          network_id: cjb69k1c4vs45df9bee0
                          prometheus:
                            url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                          read_replica_cluster_ids: []
                          redpanda_console:
                            url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
                          redpanda_version: ""
                          region: us-west1
                          resource_group_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                          schema_registry:
                            mtls: null
                            url: schema-registry-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                          state: STATE_READY
                          state_description: null
                          throughput_tier: tier-1
                          type: TYPE_DEDICATED
                          updated_at: "2023-01-01T00:00:00Z"
                          zones:
                            - us-west1-a
                            - us-west1-b
                            - us-west1-c
                      started_at: null
                      state: STATE_COMPLETED
                      type: TYPE_UPDATE_CLUSTER
              schema:
                $ref: '#/components/schemas/GetOperationResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Please reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Operation
      tags:
        - OperationService
  /v1beta2/resource-groups:
    get:
      description: List Redpanda resource groups. The `filter.` query string parameter finds resource groups that match the provided name.
      operationId: ResourceGroupService_ListResourceGroups
      parameters:
        - description: Name of resource group. Exact match.
          in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                next_page_token: some-opaque-string
                resource_groups:
                  - created_at: "2023-08-25T00:00:00Z"
                    id: 897e76ad-64d5-4314-9d81-7383fa14100d
                    name: my-new-namespace
                    updated_at: null
              schema:
                $ref: '#/components/schemas/ListResourceGroupsResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
      summary: List Resource Groups
      tags:
        - ResourceGroupService
    post:
      description: Create a Redpanda Resource Group.
      operationId: ResourceGroupService_CreateResourceGroup
      requestBody:
        content:
          application/json:
            example:
              name: my-new-namespace
            schema:
              $ref: '#/components/schemas/ResourceGroupCreate'
        required: true
        x-originalParamName: resource_group
      responses:
        "201":
          content:
            application/json:
              example:
                resource_group:
                  created_at: "2023-08-25T00:00:00Z"
                  id: 897e76ad-64d5-4314-9d81-7383fa14100d
                  name: my-new-namespace
                  updated_at: null
              schema:
                $ref: '#/components/schemas/CreateResourceGroupResponse'
          description: Resource Group Created
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
      summary: Create Resource Group
      tags:
        - ResourceGroupService
  /v1beta2/resource-groups/{id}:
    delete:
      description: Delete the specified Redpanda resource group.
      operationId: ResourceGroupService_DeleteResourceGroup
      parameters:
        - description: ID of resource group to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: Resource group deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
      summary: Delete Resource Group
      tags:
        - ResourceGroupService
    get:
      description: Get information about a specific Redpanda resource group.
      operationId: ResourceGroupService_GetResourceGroup
      parameters:
        - description: ID of resource group.
          example: 897e76ad-64d5-4314-9d81-7383fa14100d
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                resource_group:
                  created_at: "2023-08-25T00:00:00Z"
                  id: 897e76ad-64d5-4314-9d81-7383fa14100d
                  name: my-new-namespace
                  updated_at: null
              schema:
                $ref: '#/components/schemas/GetResourceGroupResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
      summary: Get Resource Group
      tags:
        - ResourceGroupService
  /v1beta2/resource-groups/{resource_group.id}:
    patch:
      description: Update a Redpanda resource group.
      operationId: ResourceGroupService_UpdateResourceGroup
      parameters:
        - description: |-
            ID of the resource group. The ID should be valid and the resource group
            should exist within the organization.
          example: 897e76ad-64d5-4314-9d81-7383fa14100d
          in: path
          name: resource_group.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              name: my-new-name
            schema:
              properties:
                name:
                  description: The unique name of the resource group.
                  example: development
                  type: string
              required:
                - name
              title: ResourceGroupUpdate represents a Redpanda resource group update input
              type: object
        description: ResourceGroupUpdate represents a Redpanda resource group update input
        required: true
        x-originalParamName: resource_group
      responses:
        "200":
          content:
            application/json:
              example:
                resource_group:
                  created_at: "2023-01-01T00:00:00Z"
                  id: 897e76ad-64d5-4314-9d81-7383fa14100d
                  name: my-new-name
                  updated_at: "2023-08-25T00:00:00Z"
              schema:
                $ref: '#/components/schemas/UpdateResourceGroupResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
      summary: Update Resource Group
      tags:
        - ResourceGroupService
security:
  - auth0: []
servers:
  - description: Control Plane API
    url: https://api.redpanda.com
  - description: Data Plane API
    url: '{dataplane_api_url}'
    variables:
      dataplane_api_url:
        default: https://{dataplane_api_url}
        description: |-
          Data Plane API.<br>
          					Allows management of cluster-level resources such as topics, ACLs, service accounts. The API is exposed by each individual cluster.
          					Find the Data Plane API base URL of a cluster by calling the Get Cluster endpoint. The dataplane_api.url field is returned in the response body.<br><br>
          					Example (Dedicated): https://api-a4cb21.ck09mi9c4vs17hng9gig.fmc.prd.cloud.redpanda.com<br>
          					Example (BYOC): https://api-a4cb21.ck09mi9c4vs17hng9gig.byoc.prd.cloud.redpanda.com
tags:
  - description: Check the state of [long-running operations](https://docs.redpanda.com/current/deploy/deployment-option/cloud/api/cloud-controlplane-api/#long-running-operations).
    name: OperationService
  - description: Manage Redpanda Cloud clusters. For detailed steps and information, see [Manage Clusters using the Cloud API](https://docs.redpanda.com/current/deploy/deployment-option/cloud/api/cloud-controlplane-api/).
    name: ClusterService
  - description: Manage Redpanda Cloud networks.
    name: NetworkService
  - description: Manage Redpanda Cloud resource groups.
    name: ResourceGroupService
  - description: Manage Redpanda [access-control lists](https://docs.redpanda.com/beta/manage/security/authorization/acl/) (ACLs).
    name: ACLService
  - name: TransformService
  - description: Manage [connectors](https://docs.redpanda.com/current/deploy/deployment-option/cloud/managed-connectors/) and interact with the Kafka Connect API.
    name: KafkaConnectService
  - description: Manage [secrets](https://docs.redpanda.com/current/deploy/deployment-option/cloud/security/secrets/) for Redpanda Cloud.
    name: SecretService
  - description: Manage Redpanda Cloud topics.
    name: TopicService
  - description: Manage Redpanda Cloud users. To manage access, see the Cloud API [ACL endpoints](https://docs.redpanda.com/api/cloud-api/#tag--ACLService).
    name: UserService

