components:
  schemas:
    ACL.Operation:
      enum:
        - OPERATION_ANY
        - OPERATION_ALL
        - OPERATION_READ
        - OPERATION_WRITE
        - OPERATION_CREATE
        - OPERATION_DELETE
        - OPERATION_ALTER
        - OPERATION_DESCRIBE
        - OPERATION_CLUSTER_ACTION
        - OPERATION_DESCRIBE_CONFIGS
        - OPERATION_ALTER_CONFIGS
        - OPERATION_IDEMPOTENT_WRITE
        - OPERATION_CREATE_TOKENS
        - OPERATION_DESCRIBE_TOKENS
      type: string
    BadRequest:
      description: |-
        Describes violations in a client request. This error type focuses on the
        syntactic aspects of the request.
      properties:
        field_violations:
          description: Describes all violations in a client request.
          items:
            $ref: '#/components/schemas/FieldViolation'
          type: array
      title: BadRequest
      type: object
    CloudProvider:
      description: Cloud Provider where resources are created.
      enum:
        - CLOUD_PROVIDER_AWS
        - CLOUD_PROVIDER_GCP
        - CLOUD_PROVIDER_AZURE
      type: string
    Cluster:
      description: Resource describing a Cluster.
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider'
        cloud_tags:
          additionalProperties:
            type: string
          description: Tags that are placed on Cloud resources.
          type: object
        connection_type:
          $ref: '#/components/schemas/ConnectionType'
        created_at:
          description: Timestamp when the cluster was created.
          format: date-time
          readOnly: true
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources'
        dataplane_api:
          $ref: '#/components/schemas/DataplaneAPI'
        http_proxy:
          $ref: '#/components/schemas/HTTPProxy'
        id:
          description: ID of the cluster. ID is an output of CreateCluster, and cannot be set by the caller.
          readOnly: true
          type: string
        kafka_api:
          $ref: '#/components/schemas/KafkaAPI'
        name:
          description: Unique name of the cluster.
          example: development-cluster
          type: string
        namespace_id:
          description: Namespace id of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        network_id:
          description: Id of the Network where the cluster will be placed
          example: cjcuq79c4vs94fcufc2g
          type: string
        private_link:
          $ref: '#/components/schemas/PrivateLinkSpec'
        prometheus:
          $ref: '#/components/schemas/Prometheus'
        redpanda_console:
          $ref: '#/components/schemas/RedpandaConsole'
        redpanda_version:
          description: |-
            Desired redpanda version when creating a cluster, only major.minor semver
            supported on creation.
          type: string
        region:
          description: Region of the cloud provider<br>Available values:<br>GCP:<br>- asia-south1<br>- asia-southeast1<br>- australia-southeast1<br>- europe-west1<br>- europe-west2<br>- northamerica-northeast1<br>- us-central1<br>- us-east1<br><br>AWS:<br>- af-south-1<br>- ap-southeast-1<br>- ap-southeast-1<br>- ca-central-1<br>- eu-central-1<br>- eu-west-1<br>- us-east-1<br>- us-east-2<br>- us-west-2
          example: us-central1
          type: string
        schema_registry:
          $ref: '#/components/schemas/SchemaRegistry'
        state:
          $ref: '#/components/schemas/Cluster.State'
        state_description:
          $ref: '#/components/schemas/Status'
        throughput_tier:
          description: Throughput tier of the cluster.<br>Available values:<br>AWS:<br>- tier-1-aws-sbdg<br>- tier-2-aws-ugn0<br>- tier-3-aws-ugo0<br>- tier-4-aws-ugog<br>- tier-5-aws-ugp0<br>GCP:<br>- tier-1-gcp-um4g<br>- tier-2-gcp-um50<br>- tier-3-gcp-um5g<br>- tier-4-gcp-um60<br>- tier-5-gcp-um6g<br>
          type: string
        type:
          $ref: '#/components/schemas/Cluster.Type'
        updated_at:
          description: Timestamp when the cluster was updated.
          format: date-time
          readOnly: true
          type: string
        zones:
          description: |-
            Zones of the cluster. Must be valid zones within the selected region.
            If multiple zones are used, the cluster is a multi-AZ cluster.
          items:
            type: string
          type: array
      required:
        - name
        - namespace_id
        - cloud_provider
        - connection_type
        - network_id
        - region
        - throughput_tier
        - type
        - zones
      title: Cluster
      type: object
    Cluster.CustomerManagedResources:
      description: The cloud resources created by user.
      properties:
        gcp:
          $ref: '#/components/schemas/Cluster.CustomerManagedResources.GCP'
      type: object
    Cluster.CustomerManagedResources.GCP:
      description: GCP resources managed by user and required for deploying Redpanda cluster.
      properties:
        agent_service_account:
          $ref: '#/components/schemas/ServiceAccount'
        connector_service_account:
          $ref: '#/components/schemas/ServiceAccount'
        console_service_account:
          $ref: '#/components/schemas/ServiceAccount'
        gke_service_account:
          $ref: '#/components/schemas/ServiceAccount'
        psc_nat_subnet_name:
          description: NAT subnet name if GCP Private Service Connect (a.k.a Private Link) is enabled.
          type: string
        redpanda_cluster_service_account:
          $ref: '#/components/schemas/ServiceAccount'
        subnet:
          $ref: '#/components/schemas/Subnet'
        tiered_storage_bucket:
          $ref: '#/components/schemas/CustomerManagedGoogleCloudStorageBucket'
      required:
        - subnet
        - agent_service_account
        - console_service_account
        - connector_service_account
        - redpanda_cluster_service_account
        - gke_service_account
        - tiered_storage_bucket
      title: GCP Customer Managed Resoures
      type: object
    Cluster.State:
      description: State describes the state of the cluster.
      enum:
        - STATE_CREATING_AGENT
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETING_AGENT
        - STATE_UPGRADING
        - STATE_FAILED
      readOnly: true
      type: string
    Cluster.Type:
      description: Type of the Cluster. Immutable. Can only be set on cluster creation.
      enum:
        - TYPE_DEDICATED
        - TYPE_BYOC
      type: string
    Config:
      properties:
        name:
          description: Name is a topic level config key (e.g. segment.bytes).
          type: string
        value:
          nullable: true
          title: Value is a topic level config value (e.g. 1073741824)
          type: string
      type: object
    ConfigAlterOperation:
      enum:
        - CONFIG_ALTER_OPERATION_SET
        - CONFIG_ALTER_OPERATION_DELETE
        - CONFIG_ALTER_OPERATION_APPEND
        - CONFIG_ALTER_OPERATION_SUBTRACT
      type: string
    ConfigSource:
      enum:
        - CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG
        - CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG
        - CONFIG_SOURCE_STATIC_BROKER_CONFIG
        - CONFIG_SOURCE_DEFAULT_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_LOGGER_CONFIG
      type: string
    ConfigSynonym:
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        value:
          nullable: true
          type: string
      type: object
    ConfigType:
      enum:
        - CONFIG_TYPE_BOOLEAN
        - CONFIG_TYPE_STRING
        - CONFIG_TYPE_INT
        - CONFIG_TYPE_SHORT
        - CONFIG_TYPE_LONG
        - CONFIG_TYPE_DOUBLE
        - CONFIG_TYPE_LIST
        - CONFIG_TYPE_CLASS
        - CONFIG_TYPE_PASSWORD
      type: string
    Configuration:
      properties:
        config_synonyms:
          items:
            $ref: '#/components/schemas/ConfigSynonym'
          type: array
        documentation:
          nullable: true
          type: string
        is_read_only:
          type: boolean
        is_sensitive:
          type: boolean
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        type:
          $ref: '#/components/schemas/ConfigType'
        value:
          nullable: true
          type: string
      type: object
    ConnectCluster:
      properties:
        address:
          type: string
        info:
          $ref: '#/components/schemas/ConnectCluster.Info'
        name:
          type: string
        plugins:
          items:
            $ref: '#/components/schemas/ConnectorPlugin'
          type: array
      type: object
    ConnectCluster.Info:
      properties:
        commit:
          type: string
        kafka_cluster_id:
          type: string
        version:
          type: string
      type: object
    ConnectedEndpoint:
      description: ConnectedEndpoint defines endpoint connection connected to Redpanda GCP PSC (Private Service Connect) service.
      properties:
        connection_id:
          description: The ID of endpoint connection.
          type: string
        consumer_network:
          title: |-
            The network of consumer connecting to Redpanda GCP PSC (Private Service Connect).
            e.g. https://www.googleapis.com/compute/v1/projects/my-project/global/networks/vpc-consumer-psc
          type: string
        endpoint:
          title: |-
            The endpoint of connection.
            e.g. https://www.googleapis.com/compute/v1/projects/my-project/regions/us-west2/forwardingRules/vpc-consumer-psc
          type: string
        status:
          description: |-
            status is the status of the endpoint (ACCEPTED | REJECTED).

            The ServiceAttachment API resource (https://cloud.google.com/compute/docs/reference/rest/v1/serviceAttachments)
             does have more fields, such as connection ID & consumer network, but the Terraform provider
             (https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_service_attachment#nested_connected_endpoints)
             doesn't return them as outputs.
          type: string
      type: object
    ConnectionType:
      description: |-
        ConnectionType describes the cluster connection type of a Redpanda Cluster.
        Private clusters are not exposted to the internet.
      enum:
        - CONNECTION_TYPE_PUBLIC
        - CONNECTION_TYPE_PRIVATE
      type: string
    Connector:
      properties:
        state:
          type: string
        trace:
          type: string
        worker_id:
          type: string
      type: object
    ConnectorError:
      properties:
        content:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/ConnectorError.Type'
      title: |-
        ConnectorError is the error of a connector, this is holistic error
        abstraction, made parsing the error trace of connector or Task
      type: object
    ConnectorError.Type:
      enum:
        - TYPE_ERROR
        - TYPE_WARNING
      type: string
    ConnectorHolisticState:
      description: |-
        - CONNECTOR_HOLISTIC_STATE_PAUSED: PAUSED: The connector/task has been administratively paused.
         - CONNECTOR_HOLISTIC_STATE_RESTARTING: RESTARTING: he connector/task is restarting.
         - CONNECTOR_HOLISTIC_STATE_DESTROYED: DESTROYED: Connector is in destroyed state, regardless of any tasks.
         - CONNECTOR_HOLISTIC_STATE_STOPPED: STOPPED: The connector/task has been stopped.
         - CONNECTOR_HOLISTIC_STATE_UNASSIGNED: The connector/task has not yet been assigned to a worker
        UNASSIGNED: Connector is in unassigned state.
           Or Connector is in running state, and there are unassigned tasks.
         - CONNECTOR_HOLISTIC_STATE_HEALTHY: HEALTHY: Connector is in running state, > 0 tasks, all of them in running state.
         - CONNECTOR_HOLISTIC_STATE_UNHEALTHY: UNHEALTHY: Connector is failed state.
        			Or Connector is in running state but has 0 tasks.
        			Or Connector is in running state, has > 0 tasks, and all tasks are in failed state.
         - CONNECTOR_HOLISTIC_STATE_DEGRADED: DEGRADED: Connector is in running state, has > 0 tasks, but has at least one state in failed state, but not all tasks are failed.
         - CONNECTOR_HOLISTIC_STATE_UNKNOWN: UNKNOWN: The connector/task could no be determined
      enum:
        - CONNECTOR_HOLISTIC_STATE_PAUSED
        - CONNECTOR_HOLISTIC_STATE_RESTARTING
        - CONNECTOR_HOLISTIC_STATE_DESTROYED
        - CONNECTOR_HOLISTIC_STATE_STOPPED
        - CONNECTOR_HOLISTIC_STATE_UNASSIGNED
        - CONNECTOR_HOLISTIC_STATE_HEALTHY
        - CONNECTOR_HOLISTIC_STATE_UNHEALTHY
        - CONNECTOR_HOLISTIC_STATE_DEGRADED
        - CONNECTOR_HOLISTIC_STATE_UNKNOWN
      title: |-
        The following states are possible for a connector or one of its tasks
        implement the state interface described in the Kafka connect API @see
        https://docs.confluent.io/platform/current/connect/monitoring.html#connector-and-task-status
        this includes holistic unified connector status that takes into account not
        just the connector instance state, but also state of all the tasks within the
        connector
      type: string
    ConnectorInfoStatus:
      properties:
        info:
          $ref: '#/components/schemas/ConnectorSpec'
        name:
          title: name is the connector name
          type: string
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    ConnectorPlugin:
      properties:
        class:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    ConnectorSpec:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskInfo'
          readOnly: true
          type: array
        type:
          readOnly: true
          type: string
      required:
        - name
        - config
      title: |-
        ConectorInfo is the spec of the connector, as defined in the Kafka connect
        API, it can be used as input of the connector creation or output of the
        connectors
      type: object
    ConnectorStatus:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        errors:
          items:
            $ref: '#/components/schemas/ConnectorError'
          title: Errors is list of parsed connectors' and tasks' errors
          type: array
        holistic_state:
          $ref: '#/components/schemas/ConnectorHolisticState'
        name:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskStatus'
          type: array
        type:
          type: string
      type: object
    CreateACLRequest:
      properties:
        host:
          description: |-
            Host is the host address to use for this acl. Each host to allow
            the principal access from must be specified as a new creation.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            Principal is the user to apply this acl for. With the Kafka simple
            authorizer, this must begin with "User:".
          type: string
        resource_name:
          description: |-
            ResourceName is the name of the resource this acl entry will be on.
            For requests with resource_type CLUSTER, this will default to the expected
            value "kafka-cluster".
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - principal
        - host
        - operation
        - permission_type
      type: object
    CreateACLResponse:
      type: object
    CreateClusterMetadata:
      description: Resource describing an in-progress CreateCluster Operation.
      properties:
        cluster_id:
          description: ID of the Cluster created by this operation.
          type: string
      title: CreateClusterMetadata
      type: object
    CreateConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    CreateNetworkMetadata:
      description: Resource describing an in-progress CreateNetwork Operation.
      properties:
        network_id:
          description: ID of the network created by this Operation.
          type: string
      title: CreateNetworkMetadata
      type: object
    CreateSecretResponse:
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      title: CreateSecretResponse is the response of CreateSecret
      type: object
    CreateTopicRequest.Topic:
      properties:
        configs:
          description: |-
            Configs is an array of key value config pairs for a topic.
            These correspond to Kafka Topic-Level Configs.
          items:
            $ref: '#/components/schemas/Config'
          type: array
        name:
          description: Name is the topic's name.
          type: string
        partition_count:
          description: |-
            NumPartitions is how many partitions to give a topic. This must
            be null if specifying partitions manually (see ReplicaAssignment)
            or, to use the cluster default partitions.
          format: int32
          nullable: true
          type: integer
        replica_assignment:
          description: |-
            ReplicaAssignment is an array to manually dictate replicas and their
            partitions for a topic. If using this, both ReplicationFactor and
            NumPartitions must be -1.
          items:
            $ref: '#/components/schemas/ReplicaAssignment'
          type: array
        replication_factor:
          description: |-
            ReplicationFactor is how many replicas every partition must have.
            This must be null if specifying partitions manually (see ReplicaAssignment)
            or, to use the cluster default replication factor.
          format: int32
          nullable: true
          type: integer
      type: object
    CreateTopicResponse:
      properties:
        name:
          description: Name is the topic's name.
          type: string
      type: object
    CreateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
        password:
          type: string
      type: object
    CreateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/CreateUserResponse.User'
      type: object
    CreateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    CustomerManagedGoogleCloudStorageBucket:
      description: GCP Storage Bucket Specification
      properties:
        name:
          title: |-
            The name of GCP storage bucket.
            Naming restrictions: https://cloud.google.com/storage/docs/buckets?_ga=2.149222271.-875130499.1677603347#naming
          type: string
      required:
        - name
      title: GCP Storage Bucket
      type: object
    DNSEntry:
      properties:
        dns_name:
          description: The connection ID of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: vpce-0751b7ad8a51777f2-1hpievf5.vpce-svc-0d489fa89f24e3802.us-east-2.vpce.amazonaws.com
          type: string
        hosted_zone_id:
          description: The ID of Route53 DNS zone.
          type: string
      type: object
    DataplaneAPI:
      description: Describes specifics about the Dataplane API endpoint
      properties:
        url:
          description: URL of Dataplane API
          example: https://api-ab1234l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com
          readOnly: true
          type: string
      readOnly: true
      type: object
    DeleteACLsRequest.Filter:
      properties:
        host:
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          nullable: true
          type: string
        resource_name:
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - operation
        - permission_type
      type: object
    DeleteACLsResponse:
      properties:
        matching_acls:
          items:
            $ref: '#/components/schemas/MatchingACL'
          type: array
      type: object
    DeleteClusterMetadata:
      description: Resource describing an in-progress DeleteCluster Operation.
      title: DeleteClusterMetadata
      type: object
    DeleteNamespaceResponse:
      type: object
    DeleteNetworkMetadata:
      description: Resource describing an in-progress DeleteNetwork Operation.
      title: DeleteNetworkMetadata
      type: object
    DeleteSecretResponse:
      title: DeleteSecretResponse is the response of DeleteSecret
      type: object
    DeleteTopicResponse:
      type: object
    DeleteUserResponse:
      type: object
    DummyMethodResponse:
      properties:
        bad_request:
          $ref: '#/components/schemas/BadRequest'
        error_info:
          $ref: '#/components/schemas/ErrorInfo'
        help:
          $ref: '#/components/schemas/Help'
        quota_failure:
          $ref: '#/components/schemas/QuotaFailure'
      type: object
    ErrorInfo:
      description: |-
        Describes the cause of the error with structured details.

        Example of an error when contacting the "pubsub.googleapis.com" API when it
        is not enabled:

            { "reason": "API_DISABLED"
              "domain": "googleapis.com"
              "metadata": {
                "resource": "projects/123",
                "service": "pubsub.googleapis.com"
              }
            }

        This response indicates that the pubsub.googleapis.com API is not enabled.

        Example of an error that is returned when attempting to create a Spanner
        instance in a region that is out of stock:

            { "reason": "STOCKOUT"
              "domain": "spanner.googleapis.com",
              "metadata": {
                "availableRegions": "us-central1,us-east2"
              }
            }
      properties:
        domain:
          description: |-
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error is
            generated by some common infrastructure, the error domain must be a
            globally unique value that identifies the infrastructure. For Google API
            infrastructure, the error domain is "googleapis.com".
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Additional structured details about this error.

            Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in
            length. When identifying the current value of an exceeded limit, the units
            should be contained in the key, not the value.  For example, rather than
            {"instanceLimit": "100/request"}, should be returned as,
            {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
            instances that can be created in a single (batch) request.
          type: object
        reason:
          description: |-
            The reason of the error. This is a constant value that identifies the
            proximate cause of the error. Error reasons are unique within a particular
            domain of errors. This should be at most 63 characters and match a
            regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
          type: string
      title: ErrorInfo
      type: object
    FieldViolation:
      description: A message type used to describe a single bad request field.
      properties:
        description:
          description: A description of why the request element is bad.
          type: string
        field:
          description: |-
            A path that leads to a field in the request body. The value will be a
            sequence of dot-separated identifiers that identify a protocol buffer
            field.

            Consider the following:

                message CreateContactRequest {
                  message EmailAddress {
                    enum Type {
                      TYPE_UNSPECIFIED = 0;
                      HOME = 1;
                      WORK = 2;
                    }

                    optional string email = 1;
                    repeated EmailType type = 2;
                  }

                  string full_name = 1;
                  repeated EmailAddress email_addresses = 2;
                }

            In this example, in proto `field` could take one of the following values:

            * `full_name` for a violation in the `full_name` value
            * `email_addresses[1].email` for a violation in the `email` field of the
              first `email_addresses` message
            * `email_addresses[3].type[2]` for a violation in the second `type`
              value in the third `email_addresses` message.

            In JSON, the same values are represented as:

            * `fullName` for a violation in the `fullName` value
            * `emailAddresses[1].email` for a violation in the `email` field of the
              first `emailAddresses` message
            * `emailAddresses[3].type[2]` for a violation in the second `type`
              value in the third `emailAddresses` message.
          type: string
      type: object
    GetConnectClusterResponse:
      properties:
        cluster:
          $ref: '#/components/schemas/ConnectCluster'
      type: object
    GetConnectorConfigResponse:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      type: object
    GetConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    GetConnectorStatusResponse:
      properties:
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    GetTopicConfigurationsResponse:
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    HTTPProxy:
      description: Describes specifics about the HTTP Proxy
      properties:
        mtls:
          $ref: '#/components/schemas/MTLSSpec'
        url:
          description: URL of Redpanda's HTTP Proxy
          example: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
          readOnly: true
          type: string
      type: object
    Help:
      description: |-
        Provides links to documentation or for performing an out of band action.

        For example, if a quota check failed with an error indicating the calling
        project hasn't enabled the accessed service, this can contain a URL pointing
        directly to the right place in the developer console to flip the bit.
      properties:
        links:
          description: URL(s) pointing to additional information on handling the current error.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      title: Help
      type: object
    KafkaAPI:
      description: Describes specifics about redpanda's Kafka API.
      properties:
        mtls:
          $ref: '#/components/schemas/MTLSSpec'
        seed_brokers:
          description: Kafka API Seed Brokers (also known as Bootstrap servers).
          items:
            type: string
          readOnly: true
          type: array
      type: object
    Link:
      description: Describes a URL link.
      properties:
        description:
          description: Describes what the link offers.
          type: string
        url:
          description: The URL of the link.
          type: string
      type: object
    ListACLsRequest.Filter:
      properties:
        host:
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          nullable: true
          type: string
        resource_name:
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ListACLsResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      type: object
    ListClustersRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider'
        name:
          type: string
        namespace_id:
          type: string
        network_id:
          type: string
        region:
          type: string
      type: object
    ListClustersResponse:
      description: ListClustersResponse is the response of ListClusters.
      properties:
        clusters:
          description: Clusters matching the request
          items:
            $ref: '#/components/schemas/Cluster'
          maxItems: 100
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as next_page_token in the next call to this endpoint.
          type: string
      type: object
    ListConnectClustersResponse:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/ConnectCluster'
          type: array
      type: object
    ListConnectorTopicsResponse:
      properties:
        topics:
          items:
            type: string
          type: array
      type: object
    ListConnectorsResponse:
      properties:
        connectors:
          items:
            $ref: '#/components/schemas/ConnectorInfoStatus'
          title: connectors is the list of connectors the key is the connector name
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as page_token in the next call to this endpoint.
          type: string
      type: object
    ListNamespacesRequest.Filter:
      properties:
        name:
          type: string
      type: object
    ListNamespacesResponse:
      description: ListNamespacesResponse is the response of ListNamespaces.
      properties:
        namespaces:
          description: Namespaces matching the request
          items:
            $ref: '#/components/schemas/Namespace'
          maxItems: 100
          type: array
        next_page_token:
          type: string
      type: object
    ListNetworksRequest.Filter:
      properties:
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider'
        name:
          type: string
        namespace_id:
          type: string
        region:
          type: string
      type: object
    ListNetworksResponse:
      description: ListNetworksResponse is the response of ListNetworks.
      properties:
        networks:
          description: Networks matching the request
          items:
            $ref: '#/components/schemas/Network'
          maxItems: 100
          type: array
        next_page_token:
          type: string
      type: object
    ListOperationsRequest.Filter:
      properties:
        state:
          $ref: '#/components/schemas/Operation.State'
        type_in:
          items:
            $ref: '#/components/schemas/Operation.Type'
          type: array
      type: object
    ListOperationsResponse:
      properties:
        next_page_token:
          description: |-
            Page Token to fetch the next page. The value can be used as
            next_page_token in the next call to this endpoint. since the pagination is
            cursor based the last page will be encountered when the next page token is
            not set and the operations list is empty.
          type: string
        operations:
          description: Operations matching the request
          items:
            $ref: '#/components/schemas/v1beta1.Operation'
          maxItems: 100
          type: array
      title: ListOperationsResponse is the response of ListOperations
      type: object
    ListSecretsRequest.Filter:
      properties:
        labels[string]:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      title: Defines the filter for Secrets
      type: object
    ListSecretsResponse:
      properties:
        next_page_token:
          description: token to retrieve the next page.
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      title: ListSecretsResponse is the response of ListSecrets
      type: object
    ListTopicsRequest.Filter:
      properties:
        name_contains:
          type: string
      type: object
    ListTopicsResponse:
      properties:
        next_page_token:
          type: string
        topics:
          items:
            $ref: '#/components/schemas/ListTopicsResponse.Topic'
          type: array
      type: object
    ListTopicsResponse.Topic:
      properties:
        is_internal:
          type: boolean
        name:
          type: string
        partition_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
      type: object
    ListUsersRequest.Filter:
      properties:
        name:
          type: string
        name_contains:
          type: string
      type: object
    ListUsersResponse:
      properties:
        users:
          items:
            $ref: '#/components/schemas/ListUsersResponse.User'
          type: array
      type: object
    ListUsersResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    MTLSSpec:
      description: MTLSSpec describes the mTLS configuration of a component.
      properties:
        ca_certificates_pem:
          description: CA certificate in PEM format
          example: |-
            -----BEGIN CERTIFICATE-----
            MII........
            -----END CERTIFICATE-----
          items:
            type: string
          type: array
        enabled:
          description: Enable mTLS
          type: boolean
      type: object
    MatchingACL:
      properties:
        error:
          $ref: '#/components/schemas/Status'
        host:
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          type: string
        resource_name:
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    Namespace:
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          title: ID of the namespace. ID is an output of CreateNamespace and cannot be set up by the caller
          type: string
        name:
          description: The unique name of the namespace.
          example: development
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    Network:
      description: Resource describing a Network.
      properties:
        cidr_block:
          description: network CIDR from where public and private subnets are derived. At least a 21 bits CIDR is required.
          type: string
        cloud_provider:
          $ref: '#/components/schemas/CloudProvider'
        cluster_type:
          $ref: '#/components/schemas/Cluster.Type'
        created_at:
          format: date-time
          readOnly: true
          type: string
        customer_managed_resources:
          $ref: '#/components/schemas/Network.CustomerManagedResources'
        id:
          description: ID of the network. ID is an output of CreateNetwork, and cannot be set by the caller.
          readOnly: true
          type: string
        name:
          description: The unique name of the network.
          example: development-network
          type: string
        namespace_id:
          description: Namespace id of the network
          example: a0b40af9-0250-48ca-9417-783ed127ce42
          type: string
        region:
          title: The name of the region
          type: string
        state:
          $ref: '#/components/schemas/Network.State'
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
        - name
        - namespace_id
        - cloud_provider
        - region
        - type
      title: Network
      type: object
    Network.CustomerManagedResources:
      description: The cloud resources created by user.
      properties:
        gcp:
          $ref: '#/components/schemas/Network.CustomerManagedResources.GCP'
      type: object
    Network.CustomerManagedResources.GCP:
      description: The GCP resources managed by user.
      properties:
        management_bucket:
          $ref: '#/components/schemas/CustomerManagedGoogleCloudStorageBucket'
        network_name:
          title: |-
            The name of network that is created by user, and Redpanda cluster is deployed to.
            See GCP API: https://cloud.google.com/compute/docs/reference/rest/v1/networks
          type: string
        network_project_id:
          description: The GCP project ID where the network is created.
          type: string
      required:
        - network_name
        - network_project_id
        - management_bucket
      title: GCP Customer Managed Resources
      type: object
    Network.State:
      enum:
        - STATE_CREATING
        - STATE_READY
        - STATE_DELETING
        - STATE_DELETED
        - STATE_FAILED
      readOnly: true
      type: string
    Operation.State:
      description: describes if the operation has finished, or is still in progress. Only if done is true, either error or result become available.
      enum:
        - STATE_IN_PROGRESS
        - STATE_COMPLETED
        - STATE_FAILED
      type: string
    Operation.Type:
      enum:
        - TYPE_CREATE_CLUSTER
        - TYPE_UPDATE_CLUSTER
        - TYPE_DELETE_CLUSTER
        - TYPE_CREATE_NETWORK
        - TYPE_DELETE_NETWORK
      type: string
    OperationMetadata:
      description: Metadata of the long-running Operation. Contains in-progress information.
      oneOf:
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateNetworkMetadata
                  type: string
            - $ref: '#/components/schemas/CreateNetworkMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteNetworkMetadata
                  type: string
            - $ref: '#/components/schemas/DeleteNetworkMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateClusterMetadata
                  type: string
            - $ref: '#/components/schemas/CreateClusterMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.UpdateClusterMetadata
                  type: string
            - $ref: '#/components/schemas/UpdateClusterMetadata'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteClusterMetadata
                  type: string
            - $ref: '#/components/schemas/DeleteClusterMetadata'
    OperationResponse:
      description: Response of the long-running Operation.
      oneOf:
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.Cluster
                  type: string
            - $ref: '#/components/schemas/Cluster'
        - allOf:
            - properties:
                '@type':
                  description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                  enum:
                    - type.googleapis.com/redpanda.api.controlplane.v1beta1.Network
                  type: string
            - $ref: '#/components/schemas/Network'
    Options:
      properties:
        include_tasks:
          type: boolean
        only_failed:
          type: boolean
      type: object
    PermissionType:
      enum:
        - PERMISSION_TYPE_ANY
        - PERMISSION_TYPE_DENY
        - PERMISSION_TYPE_ALLOW
      type: string
    Policy:
      properties:
        host:
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          type: string
      type: object
    PrivateLinkSpec:
      description: Describes specifics about GCP PSC or AWS Private Link.
      properties:
        aws:
          $ref: '#/components/schemas/PrivateLinkSpec.AWS'
        enabled:
          description: Indication on whether Redpanda AWS Private Link Endpoint Service is enabled.
          type: boolean
        gcp:
          $ref: '#/components/schemas/PrivateLinkSpec.GCP'
        status:
          $ref: '#/components/schemas/PrivateLinkStatus'
      type: object
    PrivateLinkSpec.AWS:
      properties:
        allowed_principals:
          description: The ARN of the principals that can access Redpanda AWS Private Link Endpoint Service. To grant permissions to all principals, use an asterisk (*).
          example: arn:aws:iam::account-number-without-hyphens:user/username or arn:aws:iam::account-number-without-hyphens:root
          items:
            type: string
          type: array
      type: object
    PrivateLinkSpec.GCP:
      properties:
        consumer_accept_list:
          description: The consumers that are allowed to connect to Redpanda GCP PSC (Private Service Connect) service attachment.
          items:
            $ref: '#/components/schemas/PrivateServiceConnectConsumer'
          type: array
      type: object
    PrivateLinkStatus:
      description: Describes the status of Redpanda Private Link Service
      properties:
        aws:
          $ref: '#/components/schemas/PrivateLinkStatus.AWS'
        gcp:
          $ref: '#/components/schemas/PrivateLinkStatus.GCP'
      readOnly: true
      type: object
    PrivateLinkStatus.AWS:
      properties:
        created_at:
          description: Timestamp when Redpanda AWS Private Link Endpoint Service was created.
          format: date-time
          type: string
        deleted_at:
          description: Timestamp when Redpanda AWS Private Link Service was deleted.
          format: date-time
          type: string
        kafka_api_node_base_port:
          description: The base port of Kafka API node service. The port for node i (0 .. node_count-1) is kafka_api_node_base_port + i.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: The port of Kafka API seed service.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: The base port of Redpanda Proxy node service. The port for node i (0 .. node_count-1) is redpanda_proxy_node_base_port + i.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: The port of Redpanda Proxy seed service.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: The port of Schema Registry seed service.
          format: int32
          type: integer
        service_id:
          description: The ID of Redpanda AWS Private Link Endpoint Service.
          example: vpce-svc-05fff2117d648da35
          type: string
        service_name:
          description: The name of Redpanda AWS Private Link Endpoint Service.
          example: com.amazonaws.vpce.us-west-2.vpce-svc-05fff2117d648da35
          type: string
        service_state:
          description: The state of Redpanda AWS Private Link Endpoint Service.
          example: Pending | Available | Deleting | Deleted | Failed
          type: string
        vpc_endpoint_connections:
          description: The list of VPC endpoints established with Redpanda AWS Private Link Endpoint Service.
          items:
            $ref: '#/components/schemas/VPCEndpointConnection'
          type: array
      type: object
    PrivateLinkStatus.GCP:
      properties:
        connected_endpoints:
          description: The list of VPC endpoints established with GCP PSC.
          items:
            $ref: '#/components/schemas/ConnectedEndpoint'
          type: array
        created_at:
          description: Timestamp when Redpanda GCP PSC was created.
          format: date-time
          type: string
        deleted_at:
          description: Timestamp when Redpanda GCP PSC was deleted.
          format: date-time
          type: string
        kafka_api_node_base_port:
          description: The base port of Kafka API node service. The port for node i (0 .. node_count-1) is kafka_api_node_base_port + i.
          format: int32
          type: integer
        kafka_api_seed_port:
          description: The port of Kafka API seed service.
          format: int32
          type: integer
        redpanda_proxy_node_base_port:
          description: The base port of Redpanda Proxy node service. The port for node i (0 .. node_count-1) is redpanda_proxy_node_base_port + i.
          format: int32
          type: integer
        redpanda_proxy_seed_port:
          description: The port of Redpanda Proxy seed service.
          format: int32
          type: integer
        schema_registry_seed_port:
          description: The port of Schema Registry seed service.
          format: int32
          type: integer
        service_attachment:
          description: The service attachment used by by consumers to create endpoint connections to Redpanda GCP PSC.
          type: string
      type: object
    PrivateServiceConnectConsumer:
      description: PrivateServiceConnectConsumer contains the info for a PSC consumer.
      properties:
        source:
          description: source can either be the GCP project number or its alphanumeric ID.
          example: gcp-project-1
          type: string
      type: object
    Prometheus:
      description: Describes specifics about the Prometheus metrics endpoint
      properties:
        url:
          description: URL of Prometheus API
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
          readOnly: true
          type: string
      readOnly: true
      type: object
    QuotaFailure:
      description: |-
        Describes how a quota check failed.

        For example if a daily limit was exceeded for the calling project,
        a service could respond with a QuotaFailure detail containing the project
        id and the description of the quota limit that was exceeded.  If the
        calling project hasn't enabled the service in the developer console, then
        a service could respond with the project id and set `service_disabled`
        to true.

        Also see RetryInfo and Help types for other details about handling a
        quota failure.
      properties:
        violations:
          description: Describes all quota violations.
          items:
            $ref: '#/components/schemas/QuotaFailure.Violation'
          type: array
      title: QuotaFailure
      type: object
    QuotaFailure.Violation:
      description: |-
        A message type used to describe a single quota violation.  For example, a
        daily quota or a custom quota that was exceeded.
      properties:
        description:
          description: |-
            A description of how the quota check failed. Clients can use this
            description to find more about the quota configuration in the service's
            public documentation, or find the relevant quota limit to adjust through
            developer console.

            For example: "Service disabled" or "Daily Limit for read operations
            exceeded".
          type: string
        subject:
          description: |-
            The subject on which the quota check failed.
            For example, "clientip:<ip address of client>" or "project:<Google
            developer project id>".
          type: string
      type: object
    RedpandaConsole:
      description: Describes specifics about the Redpanda Console endpoint
      properties:
        url:
          description: URL of Redpanda Console API
          example: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
          readOnly: true
          type: string
      readOnly: true
      type: object
    ReplicaAssignment:
      properties:
        partition:
          description: Partition is a partition to create.
          format: int32
          type: integer
        replicas:
          description: Replicas are broker IDs the partition must exist on.
          items:
            format: int32
            type: integer
          type: array
      type: object
    Resource:
      properties:
        acls:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        resource_name:
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ResourcePatternType:
      enum:
        - RESOURCE_PATTERN_TYPE_ANY
        - RESOURCE_PATTERN_TYPE_MATCH
        - RESOURCE_PATTERN_TYPE_LITERAL
        - RESOURCE_PATTERN_TYPE_PREFIXED
      type: string
    ResourceType:
      enum:
        - RESOURCE_TYPE_ANY
        - RESOURCE_TYPE_TOPIC
        - RESOURCE_TYPE_GROUP
        - RESOURCE_TYPE_CLUSTER
        - RESOURCE_TYPE_TRANSACTIONAL_ID
        - RESOURCE_TYPE_DELEGATION_TOKEN
        - RESOURCE_TYPE_USER
      type: string
    SASLMechanism:
      enum:
        - SASL_MECHANISM_SCRAM_SHA_256
        - SASL_MECHANISM_SCRAM_SHA_512
      type: string
    SchemaRegistry:
      description: Describes specifics about the Schema Registry endpoint
      properties:
        mtls:
          $ref: '#/components/schemas/MTLSSpec'
        url:
          description: Schema Registry URL.
          readOnly: true
          type: string
      type: object
    SecondaryIPv4Range:
      description: SecondaryIPv4Range defines IPv4 range.
      properties:
        name:
          type: string
      type: object
    Secret:
      properties:
        id:
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
      title: Secret defienes the secret resource
      type: object
    SecretInput:
      properties:
        id:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        secret_data:
          format: byte
          type: string
      required:
        - secret_data
      type: object
    ServiceAccount:
      description: Service Account identifies GCP service account.
      properties:
        email:
          description: The email of GCP service account.
          type: string
      required:
        - email
      title: Service Account
      type: object
    SetConfiguration:
      properties:
        key:
          type: string
        value:
          nullable: true
          type: string
      type: object
    SetTopicConfigurationsResponse:
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    Status:
      description: Describes errors
      properties:
        code:
          description: RPC status code, as described [here](https://github.com/googleapis/googleapis/blob/b4c238feaa1097c53798ed77035bbfeb7fc72e96/google/rpc/code.proto#L32).
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          format: int32
          type: string
        details:
          description: A list of messages that carries the error details.
          items:
            description: Details of the error.
            oneOf:
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.BadRequest
                        type: string
                  - $ref: '#/components/schemas/BadRequest'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.ErrorInfo
                        type: string
                  - $ref: '#/components/schemas/ErrorInfo'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.QuotaFailure
                        type: string
                  - $ref: '#/components/schemas/QuotaFailure'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.Help
                        type: string
                  - $ref: '#/components/schemas/Help'
          type: array
        message:
          description: Detailed error message. No compatibility guarantees are given for the text contained in this message.
          type: string
      type: object
    Subnet:
      description: Resource describing GCP subnet.
      properties:
        k8s_master_ipv4_range:
          description: Kubernetes Master IPv4 range, e.g. 10.0.0.0/24.
          type: string
        name:
          title: Subnet name
          type: string
        secondary_ipv4_range_pods:
          $ref: '#/components/schemas/SecondaryIPv4Range'
        secondary_ipv4_range_services:
          $ref: '#/components/schemas/SecondaryIPv4Range'
      required:
        - name
        - secondary_ipv4_range_pods
        - secondary_ipv4_range_services
        - k8s_master_ipv4_range
      title: Subnet
      type: object
    TaskInfo:
      properties:
        connector:
          type: string
        task:
          format: int32
          type: integer
      type: object
    TaskStatus:
      properties:
        id:
          format: int32
          type: integer
        state:
          type: string
        trace:
          type: string
        worker_id:
          type: string
      type: object
    UpdateClusterMetadata:
      description: Resource describing an in-progress UpdateCluster Operation.
      title: UpdateClusterMetadata
      type: object
    UpdateConfiguration:
      properties:
        key:
          type: string
        operation:
          $ref: '#/components/schemas/ConfigAlterOperation'
        value:
          nullable: true
          type: string
      type: object
    UpdateSecretResponse:
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      title: UpdateSecretResponse is the response of UpdateSecret
      type: object
    UpdateTopicConfigurationsResponse:
      properties:
        configurations:
          description: Topic's complete set of configurations after this partial patch has been applied.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    UpdateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
        password:
          type: string
      type: object
    UpdateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/UpdateUserResponse.User'
      type: object
    UpdateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    UpsertConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    VPCEndpointConnection:
      properties:
        connection_id:
          description: The connection ID of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: vpce-con-00b9cba3360fe4aec
          type: string
        created_at:
          description: Timestamp when was an VPC endpoint created.
          format: date-time
          type: string
        dns_entries:
          description: The list of DNS entries associated to VPC endpoint.
          items:
            $ref: '#/components/schemas/DNSEntry'
          type: array
        id:
          description: The ID of VPC endpoint.
          type: string
        load_balancer_arns:
          description: The list of load balancer ARNs.
          items:
            type: string
          type: array
        owner:
          description: The owner of VPC endpoint.
          type: string
        state:
          description: The state of VPC endpoint connected to Redpanda AWS Private Link Endpoint Service.
          example: pendingAcceptance | pending | available | deleting | deleted | rejected | failed
          type: string
      type: object
    v1alpha1.Topic:
      type: object
    v1beta1.Operation:
      description: Operation describes a long running operation
      properties:
        error:
          $ref: '#/components/schemas/Status'
        finished_at:
          description: Timestamp when the operation has finished.
          format: date-time
          type: string
        id:
          description: ID of the operation.
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/OperationMetadata'
        resource_id:
          nullable: true
          title: ID of the associated resource
          type: string
        response:
          $ref: '#/components/schemas/OperationResponse'
        started_at:
          description: Timestamp when the operation has started.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/Operation.State'
        type:
          $ref: '#/components/schemas/Operation.Type'
      readOnly: true
      title: Operation
      type: object
  securitySchemes:
    auth0:
      description: RedpandaCloud
      flows:
        implicit:
          authorizationUrl: https://auth.prd.cloud.redpanda.com/oauth/authorize
          scopes: {}
          x-client-id: dQjapNIAHhF7EQqQToRla3yEII9sUSap
      type: oauth2
info:
  description: |-
    <h2>Regions</h2>Throughput Tiers define the sizing of a cluster. Availability depends on the region and the cluster type (BYOC,Dedicated).<h3>GCP</h3>
    <table><tr><th>Region</th><th>Zones</th><th>Throughput Tiers</th></tr><tr><td>asia-south1</td><td>asia-south1-a,asia-south1-b,asia-south1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>asia-southeast1</td><td>asia-southeast1-a,asia-southeast1-b,asia-southeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>australia-southeast1</td><td>australia-southeast1-a,australia-southeast1-b,australia-southeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west1</td><td>europe-west1-b,europe-west1-c,europe-west1-d</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west2</td><td>europe-west2-a,europe-west2-b,europe-west2-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>europe-west3</td><td>europe-west3-a,europe-west3-b,europe-west3-c</td><td>tier-1-gcp-v2-x86: BYOC<br>tier-2-gcp-v2-x86: BYOC<br>tier-3-gcp-v2-x86: BYOC<br>tier-4-gcp-v2-x86: BYOC<br>tier-5-gcp-v2-x86: BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>northamerica-northeast1</td><td>northamerica-northeast1-a,northamerica-northeast1-b,northamerica-northeast1-c</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-central1</td><td>us-central1-a,us-central1-b,us-central1-c,us-central1-f</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-east1</td><td>us-east1-b,us-east1-c,us-east1-d</td><td>tier-1-gcp-v2-x86: Dedicated,BYOC<br>tier-2-gcp-v2-x86: Dedicated,BYOC<br>tier-3-gcp-v2-x86: Dedicated,BYOC<br>tier-4-gcp-v2-x86: Dedicated,BYOC<br>tier-5-gcp-v2-x86: Dedicated,BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr><tr><td>us-east4</td><td>us-east4-a,us-east4-b,us-east4-c</td><td>tier-1-gcp-v2-x86: BYOC<br>tier-2-gcp-v2-x86: BYOC<br>tier-3-gcp-v2-x86: BYOC<br>tier-4-gcp-v2-x86: BYOC<br>tier-5-gcp-v2-x86: BYOC<br>tier-6-gcp-v2-x86: BYOC<br>tier-7-gcp-v2-x86: BYOC<br></td></tr></table><h3>AWS</h3>
    <table><tr><th>Region</th><th>Zones</th><th>Throughput Tiers</th></tr><tr><td>af-south-1</td><td>afs1-az1,afs1-az2,afs1-az3</td><td>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ap-southeast-1</td><td>apse1-az1,apse1-az2,apse1-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ap-southeast-2</td><td>apse2-az1,apse2-az3,apse2-az2</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>ca-central-1</td><td>cac1-az1,cac1-az2,cac1-az4</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-central-1</td><td>euc1-az2,euc1-az3,euc1-az1</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-west-1</td><td>euw1-az1,euw1-az2,euw1-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>eu-west-2</td><td>euw2-az1,euw2-az2,euw2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>sa-east-1</td><td>sae1-az1,sae1-az2,sae1-az3</td><td>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-east-1</td><td>use1-az2,use1-az4,use1-az6</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-east-2</td><td>use2-az1,use2-az2,use2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr><tr><td>us-west-2</td><td>usw2-az1,usw2-az2,usw2-az3</td><td>tier-1-aws-v2-arm: Dedicated,BYOC<br>tier-1-aws-v2-x86: BYOC<br>tier-2-aws-v2-arm: Dedicated,BYOC<br>tier-2-aws-v2-x86: BYOC<br>tier-3-aws-v2-arm: Dedicated,BYOC<br>tier-3-aws-v2-x86: BYOC<br>tier-4-aws-v2-arm: Dedicated,BYOC<br>tier-4-aws-v2-x86: BYOC<br>tier-5-aws-v2-arm: Dedicated,BYOC<br>tier-5-aws-v2-x86: BYOC<br>tier-6-aws-v2-arm: BYOC<br>tier-6-aws-v2-x86: BYOC<br>tier-7-aws-v2-arm: BYOC<br>tier-7-aws-v2-x86: BYOC<br></td></tr></table>
  title: Redpanda Cloud
  version: v1beta1
openapi: 3.0.3
paths:
  /v1alpha1/acls:
    delete:
      description: Delete all ACLs that match the given filter
      operationId: ACLService_DeleteACLs
      parameters:
        - in: query
          name: filter.resource_type
          required: true
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - in: query
          name: filter.resource_name
          schema:
            type: string
        - in: query
          name: filter.resource_pattern_type
          required: true
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - in: query
          name: filter.principal
          schema:
            type: string
        - in: query
          name: filter.host
          schema:
            type: string
        - in: query
          name: filter.operation
          required: true
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - in: query
          name: filter.permission_type
          required: true
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete ACLs
      tags:
        - ACLService
    get:
      description: List ACLs
      operationId: ACLService_ListACLs
      parameters:
        - in: query
          name: filter.resource_type
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - in: query
          name: filter.resource_name
          schema:
            type: string
        - in: query
          name: filter.resource_pattern_type
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - in: query
          name: filter.principal
          schema:
            type: string
        - in: query
          name: filter.host
          schema:
            type: string
        - in: query
          name: filter.operation
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - in: query
          name: filter.permission_type
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List ACLs
      tags:
        - ACLService
    post:
      description: Create ACL
      operationId: ACLService_CreateACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLRequest'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateACLResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create ACL
      tags:
        - ACLService
  /v1alpha1/connect/clusters:
    get:
      description: List connect clusters available for being consumed by the console's kafka-connect service.
      operationId: KafkaConnectService_ListConnectClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectClustersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connect clusters
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}:
    get:
      description: Get information about an available Kafka Connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
      operationId: KafkaConnectService_GetConnectCluster
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectCluster'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Connect cluster not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connect cluster
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors:
    get:
      description: List connectors managed by the Kafka Connect service.
      operationId: KafkaConnectService_ListConnectors
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connectors
      tags:
        - KafkaConnectService
    post:
      description: Create a connector with the specified configuration.
      operationId: KafkaConnectService_CreateConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorSpec'
        required: true
        x-originalParamName: connector
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}:
    delete:
      description: Delete a connector. This operation force stops all tasks and also deletes the connector configuration.
      operationId: KafkaConnectService_DeleteConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete connector
      tags:
        - KafkaConnectService
    get:
      description: Get information about a connector in a specific cluster.
      operationId: KafkaConnectService_GetConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/config:
    get:
      description: Get the configuration for the connector.
      operationId: KafkaConnectService_GetConnectorConfig
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector configuration
      tags:
        - KafkaConnectService
    put:
      description: Create a new connector using the given configuration, or update the configuration for an existing connector. Returns information about the connector after the change has been made.
      operationId: KafkaConnectService_UpsertConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              required:
                - config
              type: object
        required: true
        x-originalParamName: config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Updated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Upsert connector configuration
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/pause:
    put:
      description: Pause the connector and its tasks, which stops messages from processing until the connector is resumed. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_PauseConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Pause request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Pause connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/restart:
    post:
      description: Restarts a connector, triggers a connector restart, you can specify the only_failed or/and the include_tasks options.
      operationId: KafkaConnectService_RestartConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Options'
        required: true
        x-originalParamName: options
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Restart connector request success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Restart connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/resume:
    put:
      description: Resume a paused connector and its tasks, and resumes message processing. This call is asynchronous and may take some time to process. If the connector was not paused, this operation does not do anything.
      operationId: KafkaConnectService_ResumeConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Resume request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Resume connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/status:
    get:
      description: Gets the current status of the connector, including the state for each of its tasks, error information, etc.
      operationId: KafkaConnectService_GetConnectorStatus
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorStatus'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector status
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/stop:
    put:
      description: Stops a connector, but does not delete the connector. All tasks for the connector are shut down completely. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_StopConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Stop connector
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/topics:
    get:
      description: Returns a list of connector topic names. If the connector is inactive, this call returns an empty list.
      operationId: KafkaConnectService_ListConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/connect/clusters/{cluster_name}/connectors/{name}/topics/reset:
    put:
      description: Resets the set of topic names that the connector is using.
      operationId: KafkaConnectService_ResetConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda self-hosted deployments, use the cluster name defined in the console's configuration file. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Reset connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/secret/{secret.id}:
    put:
      description: Update a Secret content.
      operationId: SecretService_UpdateSecret
      parameters:
        - in: path
          name: secret.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                labels:
                  additionalProperties:
                    type: string
                  type: object
                secret_data:
                  format: byte
                  type: string
              required:
                - secret_data
              type: object
        required: true
        x-originalParamName: secret
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Secret
      tags:
        - SecretService
  /v1alpha1/secrets:
    get:
      description: List Secrets
      operationId: SecretService_ListSecrets
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.labels[string]
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Secrets
      tags:
        - SecretService
    post:
      description: Create a Secret.
      operationId: SecretService_CreateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretInput'
        required: true
        x-originalParamName: secret
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Secret Created.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Secret
      tags:
        - SecretService
  /v1alpha1/secrets/{id}:
    delete:
      description: Delete a Secret.
      operationId: SecretService_DeleteSecret
      parameters:
        - description: The id of the secret you want to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Secret was deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Secret
      tags:
        - SecretService
  /v1alpha1/topics:
    get:
      description: List Topics
      operationId: TopicService_ListTopics
      parameters:
        - in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Topics
      tags:
        - TopicService
    post:
      description: Create a Topic.
      operationId: TopicService_CreateTopic
      parameters:
        - description: |-
            ValidateOnly makes this request a dry-run; everything is validated but
            no topics are actually created.
          in: query
          name: validate_only
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequest.Topic'
        description: Topic is the topic to attempt to create.
        required: true
        x-originalParamName: topic
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alpha1.Topic'
          description: Topic Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Topic
      tags:
        - TopicService
  /v1alpha1/topics/{name}:
    delete:
      description: Deletes the Kafka topic with the requested name.
      operationId: TopicService_DeleteTopic
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Topic was deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: The requested topic does not exist
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a Kafka topic
      tags:
        - TopicService
  /v1alpha1/topics/{topic_name}/configurations:
    get:
      description: Get Topic Configurations.
      operationId: TopicService_GetTopicConfigurations
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicConfigurationsResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Topic Configurations
      tags:
        - TopicService
    patch:
      description: Updates a subset of the topic configuration.
      operationId: TopicService_UpdateTopicConfigurations
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTopicConfigurationsResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Topic Configuration
      tags:
        - TopicService
    put:
      description: Set the entire set of configurations for a topic. Config entries that are not provided in the request are removed and will fall-back to their default values.
      operationId: TopicService_SetTopicConfigurations
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SetConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTopicConfigurationsResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set Topic Configurations
      tags:
        - TopicService
  /v1alpha1/users:
    get:
      description: List Users
      operationId: UserService_ListUsers
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: filter.name_contains
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                users:
                  - name: payment-service
                  - name: jane
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Users
      tags:
        - UserService
    post:
      description: Create a User.
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            example:
              mechanism: SASL_MECHANISM_SCRAM_SHA_256
              name: payment-service
              password: secure-password
            schema:
              $ref: '#/components/schemas/CreateUserRequest.User'
        required: true
        x-originalParamName: user
      responses:
        "201":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/CreateUserRequest.User'
          description: Creates a user
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create User
      tags:
        - UserService
  /v1alpha1/users/{name}:
    delete:
      description: Delete Users
      operationId: UserService_DeleteUser
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: User was deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_RESOURCE_NOT_FOUND
                message: user not found
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Users
      tags:
        - UserService
  /v1alpha1/users/{user.name}:
    put:
      description: Update a User.
      operationId: UserService_UpdateUser
      parameters:
        - in: path
          name: user.name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              user:
                mechanism: SASL_MECHANISM_SCRAM_SHA_256
                password: new-password
            schema:
              properties:
                mechanism:
                  $ref: '#/components/schemas/SASLMechanism'
                password:
                  type: string
              type: object
        required: true
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/UpdateUserResponse.User'
          description: Ok
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update User
      tags:
        - UserService
  /v1beta1/clusters:
    get:
      description: List Redpanda Clusters.
      operationId: ClusterService_ListClusters
      parameters:
        - in: query
          name: filter.namespace_id
          schema:
            type: string
        - in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: filter.region
          schema:
            type: string
        - in: query
          name: filter.cloud_provider
          schema:
            enum:
              - CLOUD_PROVIDER_AWS
              - CLOUD_PROVIDER_GCP
              - CLOUD_PROVIDER_AZURE
            type: string
        - in: query
          name: filter.network_id
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                clusters:
                  - cloud_provider: CLOUD_PROVIDER_GCP
                    cloud_tags: {}
                    connection_type: CONNECTION_TYPE_PUBLIC
                    created_at: "2023-01-01T00:00:00Z"
                    customer_managed_resources: null
                    dataplane_api: null
                    http_proxy:
                      mtls:
                        ca_certificates_pem: []
                        enabled: false
                      url: https://pandaproxy-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    id: cjd3r21c4vs870t0ku30
                    kafka_api:
                      mtls: null
                      seed_brokers:
                        - seed-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    name: my-new-cluster
                    namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                    network_id: cjb69k1c4vs45df9bee0
                    private_link: null
                    prometheus:
                      url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                    redpanda_console:
                      url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api
                    redpanda_version: ""
                    region: us-west1
                    schema_registry:
                      mtls: null
                      url: schema-registry-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                    state: STATE_READY
                    state_description: null
                    throughput_tier: tier-1-gcp-um4g
                    type: TYPE_DEDICATED
                    updated_at: "2023-01-01T00:00:00Z"
                    zones:
                      - us-west1-a
                      - us-west1-b
                      - us-west1-c
                next_page_token: some-opaque-string
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
          description: OK
        "500":
          content:
            application/json:
              example:
                code: INTERNAL
                details: []
                message: Internal Server Error
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: List Clusters
      tags:
        - ClusterService
    post:
      description: Create a Redpanda cluster. Returns a long-running operation.
      operationId: ClusterService_CreateCluster
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: CLOUD_PROVIDER_GCP
              connection_type: CONNECTION_TYPE_PUBLIC
              name: my-new-cluster
              namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
              network_id: cjb69k1c4vs45df9bee0
              region: us-west1
              throughput_tier: tier-1-gcp-um4g
              type: TYPE_DEDICATED
              zones:
                - us-west1-a
                - us-west1-b
                - us-west1-c
            schema:
              $ref: '#/components/schemas/Cluster'
        required: true
        x-originalParamName: cluster
      responses:
        "202":
          content:
            application/json:
              example:
                finished_at: null
                id: cjb5uh9c4vs1td8emmcg
                metadata:
                  '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateClusterMetadata
                  cluster_id: cjb5vehc4vs19qc11pjg
                started_at: null
                state: STATE_IN_PROGRESS
                type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                Bad Request:
                  description: "404"
                  value:
                    code: INVALID_ARGUMENT
                    message: Invalid Request
                Invalid Cluster Type:
                  description: Invalid Cluster Type
                  summary: Invalid Cluster Type
                  value:
                    code: INVALID_ARGUMENT
                    message: Invalid Request
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request
        "409":
          content:
            application/json:
              examples:
                Conflict:
                  description: Conflict
                  summary: Conflict
                  value:
                    code: ALREADY_EXISTS
                    message: Cluster with given name already exists
              schema:
                $ref: '#/components/schemas/Status'
          description: Conflict
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  description: Internal Server Error
                  summary: Internal Server Error
                  value:
                    code: INTERNAL
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Create Cluster
      tags:
        - ClusterService
  /v1beta1/clusters/{cluster.id}:
    patch:
      description: Update a Redpanda cluster.
      operationId: ClusterService_UpdateCluster
      parameters:
        - description: ID of the cluster. ID is an output of CreateCluster, and cannot be set by the caller.
          in: path
          name: cluster.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              schema_registry:
                mtls:
                  ca_certificates_pem:
                    - |-
                      -----BEGIN CERTIFICATE-----
                      MII........
                      -----END CERTIFICATE-----
                  enabled: true
            schema:
              description: Resource describing a Cluster.
              properties:
                cloud_provider:
                  $ref: '#/components/schemas/CloudProvider'
                cloud_tags:
                  additionalProperties:
                    type: string
                  description: Tags that are placed on Cloud resources.
                  type: object
                connection_type:
                  $ref: '#/components/schemas/ConnectionType'
                created_at:
                  description: Timestamp when the cluster was created.
                  format: date-time
                  readOnly: true
                  type: string
                customer_managed_resources:
                  $ref: '#/components/schemas/Cluster.CustomerManagedResources'
                dataplane_api:
                  $ref: '#/components/schemas/DataplaneAPI'
                http_proxy:
                  $ref: '#/components/schemas/HTTPProxy'
                kafka_api:
                  $ref: '#/components/schemas/KafkaAPI'
                name:
                  description: Unique name of the cluster.
                  example: development-cluster
                  type: string
                namespace_id:
                  description: Namespace id of the network
                  example: a0b40af9-0250-48ca-9417-783ed127ce42
                  type: string
                network_id:
                  description: Id of the Network where the cluster will be placed
                  example: cjcuq79c4vs94fcufc2g
                  type: string
                private_link:
                  $ref: '#/components/schemas/PrivateLinkSpec'
                prometheus:
                  $ref: '#/components/schemas/Prometheus'
                redpanda_console:
                  $ref: '#/components/schemas/RedpandaConsole'
                redpanda_version:
                  description: |-
                    Desired redpanda version when creating a cluster, only major.minor semver
                    supported on creation.
                  type: string
                region:
                  description: Region of the cloud provider<br>Available values:<br>GCP:<br>- asia-south1<br>- asia-southeast1<br>- australia-southeast1<br>- europe-west1<br>- europe-west2<br>- northamerica-northeast1<br>- us-central1<br>- us-east1<br><br>AWS:<br>- af-south-1<br>- ap-southeast-1<br>- ap-southeast-1<br>- ca-central-1<br>- eu-central-1<br>- eu-west-1<br>- us-east-1<br>- us-east-2<br>- us-west-2
                  example: us-central1
                  type: string
                schema_registry:
                  $ref: '#/components/schemas/SchemaRegistry'
                state:
                  $ref: '#/components/schemas/Cluster.State'
                state_description:
                  $ref: '#/components/schemas/Status'
                throughput_tier:
                  description: Throughput tier of the cluster.<br>Available values:<br>AWS:<br>- tier-1-aws-sbdg<br>- tier-2-aws-ugn0<br>- tier-3-aws-ugo0<br>- tier-4-aws-ugog<br>- tier-5-aws-ugp0<br>GCP:<br>- tier-1-gcp-um4g<br>- tier-2-gcp-um50<br>- tier-3-gcp-um5g<br>- tier-4-gcp-um60<br>- tier-5-gcp-um6g<br>
                  type: string
                type:
                  $ref: '#/components/schemas/Cluster.Type'
                updated_at:
                  description: Timestamp when the cluster was updated.
                  format: date-time
                  readOnly: true
                  type: string
                zones:
                  description: |-
                    Zones of the cluster. Must be valid zones within the selected region.
                    If multiple zones are used, the cluster is a multi-AZ cluster.
                  items:
                    type: string
                  type: array
              required:
                - name
                - namespace_id
                - cloud_provider
                - connection_type
                - network_id
                - region
                - throughput_tier
                - type
                - zones
              title: Cluster
              type: object
        description: |-
          Cluster

          Resource describing a Cluster.
        required: true
        x-originalParamName: cluster
      responses:
        "202":
          content:
            application/json:
              example:
                finished_at: null
                id: cjd5159c4vs6rgpkevsg
                metadata:
                  '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.UpdateClusterMetadata
                started_at: null
                state: STATE_IN_PROGRESS
                type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: Accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Update Cluster
      tags:
        - ClusterService
  /v1beta1/clusters/{id}:
    delete:
      description: Delete Redpanda Cluster. Returns a long-running operation.
      operationId: ClusterService_DeleteCluster
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              example:
                finished_at: null
                id: cjd4vu1c4vs5ugb02itg
                metadata:
                  '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteClusterMetadata
                started_at: null
                state: STATE_IN_PROGRESS
                type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: Accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Delete Cluster
      tags:
        - ClusterService
    get:
      description: Get Redpanda Cluster.
      operationId: ClusterService_GetCluster
      parameters:
        - example: cjd3r21c4vs870t0ku30
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                cloud_provider: CLOUD_PROVIDER_GCP
                cloud_tags: {}
                connection_type: CONNECTION_TYPE_PUBLIC
                created_at: "2023-01-01T00:00:00Z"
                customer_managed_resources: null
                dataplane_api: null
                http_proxy:
                  mtls:
                    ca_certificates_pem: []
                    enabled: false
                  url: https://pandaproxy-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                id: cjd3r21c4vs870t0ku30
                kafka_api:
                  mtls: null
                  seed_brokers:
                    - seed-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                name: my-new-cluster
                namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                network_id: cjb69k1c4vs45df9bee0
                private_link: null
                prometheus:
                  url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                redpanda_console:
                  url: https://console-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com/api
                redpanda_version: ""
                region: us-west1
                schema_registry:
                  mtls: null
                  url: schema-registry-aa0000l0.cjd3r21c4vs870t0ku30.fmc.prd.cloud.redpanda.com:9092
                state: STATE_READY
                state_description: null
                throughput_tier: tier-1-gcp-um4g
                type: TYPE_DEDICATED
                updated_at: "2023-01-01T00:00:00Z"
                zones:
                  - us-west1-a
                  - us-west1-b
                  - us-west1-c
              schema:
                $ref: '#/components/schemas/Cluster'
          description: OK
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details: []
                message: Cluster not found
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Get Cluster
      tags:
        - ClusterService
  /v1beta1/namespaces:
    get:
      description: List Redpanda Namespaces.
      operationId: NamespaceService_ListNamespaces
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                namespaces:
                  - created_at: "2023-08-25T00:00:00Z"
                    id: 897e76ad-64d5-4314-9d81-7383fa14100d
                    name: my-new-namespace
                    updated_at: null
                next_page_token: some-opaque-string
              schema:
                $ref: '#/components/schemas/ListNamespacesResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
      summary: List Namespaces
      tags:
        - NamespaceService
    post:
      description: Create a Redpanda Namespace.
      operationId: NamespaceService_CreateNamespace
      requestBody:
        content:
          application/json:
            example:
              name: my-new-namespace
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
        x-originalParamName: namespace
      responses:
        "201":
          content:
            application/json:
              example:
                created_at: "2023-08-25T00:00:00Z"
                id: 897e76ad-64d5-4314-9d81-7383fa14100d
                name: my-new-namespace
                updated_at: null
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Namespace Created
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
      summary: Create Namespace
      tags:
        - NamespaceService
  /v1beta1/namespaces/{id}:
    delete:
      description: Delete Redpanda Namespace.
      operationId: NamespaceService_DeleteNamespace
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: Namespace was deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
      summary: Delete Namespace
      tags:
        - NamespaceService
    get:
      description: Get Redpanda Namespace.
      operationId: NamespaceService_GetNamespace
      parameters:
        - example: 897e76ad-64d5-4314-9d81-7383fa14100d
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                created_at: "2023-08-25T00:00:00Z"
                id: 897e76ad-64d5-4314-9d81-7383fa14100d
                name: my-new-namespace
                updated_at: null
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
      summary: Get Namespace
      tags:
        - NamespaceService
  /v1beta1/namespaces/{namespace.id}:
    patch:
      description: Update a Redpanda namespace.
      operationId: NamespaceService_UpdateNamespace
      parameters:
        - description: ID of the namespace. ID is an output of CreateNamespace and cannot be set up by the caller
          example: 897e76ad-64d5-4314-9d81-7383fa14100d
          in: path
          name: namespace.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              name: my-new-name
            schema:
              properties:
                created_at:
                  format: date-time
                  readOnly: true
                  type: string
                name:
                  description: The unique name of the namespace.
                  example: development
                  type: string
                updated_at:
                  format: date-time
                  readOnly: true
                  type: string
              type: object
        required: true
        x-originalParamName: namespace
      responses:
        "200":
          content:
            application/json:
              example:
                created_at: "2023-01-01T00:00:00Z"
                id: 897e76ad-64d5-4314-9d81-7383fa14100d
                name: my-new-name
                updated_at: "2023-08-25T00:00:00Z"
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
      summary: Update Namespace
      tags:
        - NamespaceService
  /v1beta1/networks:
    get:
      description: List Redpanda Networks.
      operationId: NetworkService_ListNetworks
      parameters:
        - in: query
          name: filter.namespace_id
          schema:
            type: string
        - in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: filter.region
          schema:
            type: string
        - in: query
          name: filter.cloud_provider
          schema:
            enum:
              - CLOUD_PROVIDER_AWS
              - CLOUD_PROVIDER_GCP
              - CLOUD_PROVIDER_AZURE
            type: string
        - in: query
          name: page_size
          schema:
            format: int32
            maximum: 100
            minimum: 1
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                networks:
                  - cidr_block: 10.0.0.0/20
                    cloud_provider: CLOUD_PROVIDER_GCP
                    cluster_type: TYPE_DEDICATED
                    created_at: "2023-01-01T00:00:00Z"
                    customer_managed_resources: null
                    id: cjd533pc4vs8pjdkrrv0
                    name: my-network
                    namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                    region: us-west1
                    state: STATE_READY
                    updated_at: "2023-01-01T00:00:00Z"
                next_page_token: some-opaque-string
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: List Networks
      tags:
        - NetworkService
    post:
      description: Create a Redpanda Network. Returns a long-running operation.
      operationId: NetworkService_CreateNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr_block: 10.0.0.0/20
              cloud_provider: CLOUD_PROVIDER_GCP
              cluster_type: TYPE_DEDICATED
              name: my-network
              namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
              region: us-west1
            schema:
              $ref: '#/components/schemas/Network'
        required: true
        x-originalParamName: network
      responses:
        "202":
          content:
            application/json:
              example:
                finished_at: null
                id: cjd55r9c4vsao59ucoqg
                metadata:
                  '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateNetworkMetadata
                  network_id: cjd533pc4vs8pjdkrrv0
                started_at: null
                state: STATE_IN_PROGRESS
                type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Create Network
      tags:
        - NetworkService
  /v1beta1/networks/{id}:
    delete:
      description: Delete Redpanda Network.
      operationId: NetworkService_DeleteNetwork
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              example:
                finished_at: null
                id: cjd58g1c4vscdqkcvbqg
                metadata:
                  '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteNetworkMetadata
                started_at: null
                state: STATE_IN_PROGRESS
                type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: Accepted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Delete Network
      tags:
        - NetworkService
    get:
      description: Get Redpanda Network.
      operationId: NetworkService_GetNetwork
      parameters:
        - example: cjd533pc4vs8pjdkrrv0
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                cidr_block: 10.0.0.0/20
                cloud_provider: CLOUD_PROVIDER_GCP
                cluster_type: TYPE_DEDICATED
                created_at: "2023-01-01T00:00:00Z"
                customer_managed_resources: null
                id: cjd533pc4vs8pjdkrrv0
                name: my-network
                namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                region: us-west1
                state: STATE_READY
                updated_at: "2023-01-01T00:00:00Z"
              schema:
                $ref: '#/components/schemas/Network'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
      summary: Get Network
      tags:
        - NetworkService
  /v1beta1/operations:
    get:
      description: List Operations. This is a generic endpoint, supporting listing of all kinds of operations
      operationId: OperationService_ListOperations
      parameters:
        - in: query
          name: filter.type_in
          schema:
            items:
              enum:
                - TYPE_CREATE_CLUSTER
                - TYPE_UPDATE_CLUSTER
                - TYPE_DELETE_CLUSTER
                - TYPE_CREATE_NETWORK
                - TYPE_DELETE_NETWORK
              type: string
            type: array
        - in: query
          name: filter.state
          schema:
            enum:
              - STATE_IN_PROGRESS
              - STATE_COMPLETED
              - STATE_FAILED
            type: string
        - description: Limit the number of operations returned per page, the page is capped to 100 operations.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response. If
            not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Operations
      tags:
        - OperationService
  /v1beta1/operations/{id}:
    get:
      description: Get Operation. This is a generic endpoint, supporting retrieval of all kinds of operations.
      operationId: OperationService_GetOperation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateCluster done:
                  description: Example of an operation response of a Cluster creation that is done
                  summary: Create Cluster Operation
                  value:
                    finished_at: null
                    id: cjb6cjpc4vs0b0spksbg
                    metadata:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateClusterMetadata
                      cluster_id: cjb69h1c4vs42pca89s0
                    response:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.Cluster
                      cloud_provider: CLOUD_PROVIDER_GCP
                      cloud_tags: {}
                      connection_type: CONNECTION_TYPE_PUBLIC
                      created_at: "2023-01-01T00:00:00Z"
                      customer_managed_resources: null
                      dataplane_api: null
                      http_proxy:
                        mtls:
                          ca_certificates_pem: []
                          enabled: false
                        url: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      id: cjb69h1c4vs42pca89s0
                      kafka_api:
                        mtls: null
                        seed_brokers:
                          - seed-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      name: my-new-cluster
                      namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                      network_id: cjb69k1c4vs45df9bee0
                      private_link: null
                      prometheus:
                        url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                      redpanda_console:
                        url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
                      redpanda_version: ""
                      region: us-west1
                      schema_registry:
                        mtls: null
                        url: schema-registry-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      state: STATE_READY
                      state_description: null
                      throughput_tier: tier-1
                      type: TYPE_DEDICATED
                      updated_at: "2023-01-01T00:00:00Z"
                      zones:
                        - us-west1-a
                        - us-west1-b
                        - us-west1-c
                    started_at: null
                    state: STATE_COMPLETED
                    type: TYPE_UNSPECIFIED
                CreateNetwork done:
                  description: Example of an operation response of a Network creation that is done
                  summary: CreateNetwork Operation
                  value:
                    finished_at: null
                    id: cjb6cg9c4vs08hd3poo0
                    metadata:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.CreateNetworkMetadata
                      network_id: cjb6capc4vs0m91gh3kg
                    response:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.Network
                      cidr_block: 10.0.0.0/20
                      cloud_provider: CLOUD_PROVIDER_GCP
                      cluster_type: TYPE_DEDICATED
                      created_at: "2023-01-01T00:00:00Z"
                      customer_managed_resources: null
                      id: cjb6capc4vs0m91gh3kg
                      name: my-new-cluster
                      namespace_id: dbc1ccee-93e8-4859-a1ae-3bcfc4ef0ded
                      region: us-central1
                      state: STATE_READY
                      updated_at: "2023-01-01T00:00:00Z"
                    started_at: null
                    state: STATE_COMPLETED
                    type: TYPE_UNSPECIFIED
                DeleteCluster done:
                  description: Example of an operation response of a cluster deletion that is done
                  summary: Delete Cluster Operation
                  value:
                    finished_at: null
                    id: cjd5tfpc4vsfi6jbjve0
                    metadata:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteClusterMetadata
                    started_at: null
                    state: STATE_COMPLETED
                    type: TYPE_UNSPECIFIED
                DeleteNetwork done:
                  description: Example of an operation response of a Network deletion that is done
                  summary: Delete Network Operation
                  value:
                    finished_at: null
                    id: cjd5tdpc4vsfvm2tav1g
                    metadata:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.DeleteNetworkMetadata
                    started_at: null
                    state: STATE_COMPLETED
                    type: TYPE_UNSPECIFIED
                Update done:
                  description: Example of an operation response of a Cluster update that is done
                  summary: Update Cluster Operation
                  value:
                    finished_at: null
                    id: cjd5tppc4vsf9o7lhcj0
                    metadata:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.UpdateClusterMetadata
                    response:
                      '@type': type.googleapis.com/redpanda.api.controlplane.v1beta1.Cluster
                      cloud_provider: CLOUD_PROVIDER_GCP
                      cloud_tags: {}
                      connection_type: CONNECTION_TYPE_PUBLIC
                      created_at: "2023-01-01T00:00:00Z"
                      customer_managed_resources: null
                      dataplane_api: null
                      http_proxy:
                        mtls:
                          ca_certificates_pem: []
                          enabled: false
                        url: https://pandaproxy-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      id: cjb69h1c4vs42pca89s0
                      kafka_api:
                        mtls: null
                        seed_brokers:
                          - seed-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      name: my-new-cluster
                      namespace_id: 6c09e47b-f426-4ec7-a7b4-8048caf8ae47
                      network_id: cjb69k1c4vs45df9bee0
                      private_link: null
                      prometheus:
                        url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api/cloud/prometheus/public_metrics
                      redpanda_console:
                        url: https://console-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com/api
                      redpanda_version: ""
                      region: us-west1
                      schema_registry:
                        mtls: null
                        url: schema-registry-aa0000l0.cjb69h1c4vs42pca89s0.fmc.prd.cloud.redpanda.com:9092
                      state: STATE_READY
                      state_description: null
                      throughput_tier: tier-1
                      type: TYPE_DEDICATED
                      updated_at: "2023-01-01T00:00:00Z"
                      zones:
                        - us-west1-a
                        - us-west1-b
                        - us-west1-c
                    started_at: null
                    state: STATE_COMPLETED
                    type: TYPE_UNSPECIFIED
              schema:
                $ref: '#/components/schemas/v1beta1.Operation'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Please reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Operation
      tags:
        - OperationService
security:
  - auth0: []
servers:
  - description: Controlplane API
    url: https://api.redpanda.com
  - description: Dataplane API
    url: '{dataplane_api_url}'
    variables:
      dataplane_api_url:
        description: |-
          Dataplane API.<br>
          					The Dataplane API allows management of Topics,ACLs,Service accounts. It is exposed by each individual cluster.
          					Retrieve the Dataplane API URL of a cluster by using the dataplane_api.url field returned by the GetCluster endpoint.<br><br>
          					Example (Dedicated): https://api-a4cb21.ck09mi9c4vs17hng9gig.fmc.prd.cloud.redpanda.com<br>
          					Example (BYOC): https://api-a4cb21.ck09mi9c4vs17hng9gig.byoc.prd.cloud.redpanda.com
tags:
  - name: OperationService
  - description: ClusterService allows management of Redpanda clusters.
    name: ClusterService
  - description: NamespaceService allows management of Redpanda namespaces.
    name: NamespaceService
  - description: NetworkService allows management of Redpanda networks.
    name: NetworkService